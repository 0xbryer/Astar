(function() {var implementors = {};
implementors["pallet_contract_operator"] = [{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_contract_operator/trait.Trait.html\" title=\"trait pallet_contract_operator::Trait\">Trait</a>&gt; StorageMap&lt;&lt;T as Trait&gt;::AccountId, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;T as Trait&gt;::AccountId&gt;&gt; for <a class=\"struct\" href=\"pallet_contract_operator/struct.OperatorHasContracts.html\" title=\"struct pallet_contract_operator::OperatorHasContracts\">OperatorHasContracts</a>&lt;T&gt;",synthetic:false,types:["pallet_contract_operator::OperatorHasContracts"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_contract_operator/trait.Trait.html\" title=\"trait pallet_contract_operator::Trait\">Trait</a>&gt; StorageMap&lt;&lt;T as Trait&gt;::AccountId, &lt;T as <a class=\"trait\" href=\"pallet_contract_operator/trait.Trait.html\" title=\"trait pallet_contract_operator::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_contract_operator/trait.Trait.html#associatedtype.Parameters\" title=\"type pallet_contract_operator::Trait::Parameters\">Parameters</a>&gt; for <a class=\"struct\" href=\"pallet_contract_operator/struct.ContractParameters.html\" title=\"struct pallet_contract_operator::ContractParameters\">ContractParameters</a>&lt;T&gt;",synthetic:false,types:["pallet_contract_operator::ContractParameters"]},];
implementors["pallet_plasm_staking"] = [{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_plasm_staking/trait.Trait.html\" title=\"trait pallet_plasm_staking::Trait\">Trait</a>&gt; StorageMap&lt;&lt;T as Trait&gt;::AccountId, &lt;T as Trait&gt;::AccountId&gt; for <a class=\"struct\" href=\"pallet_plasm_staking/struct.Bonded.html\" title=\"struct pallet_plasm_staking::Bonded\">Bonded</a>&lt;T&gt;",synthetic:false,types:["pallet_plasm_staking::Bonded"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_plasm_staking/trait.Trait.html\" title=\"trait pallet_plasm_staking::Trait\">Trait</a>&gt; StorageMap&lt;&lt;T as Trait&gt;::AccountId, <a class=\"struct\" href=\"pallet_plasm_staking/struct.StakingLedger.html\" title=\"struct pallet_plasm_staking::StakingLedger\">StakingLedger</a>&lt;&lt;T as Trait&gt;::AccountId, &lt;&lt;T as <a class=\"trait\" href=\"pallet_plasm_staking/trait.Trait.html\" title=\"trait pallet_plasm_staking::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_plasm_staking/trait.Trait.html#associatedtype.Currency\" title=\"type pallet_plasm_staking::Trait::Currency\">Currency</a> as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance&gt;&gt; for <a class=\"struct\" href=\"pallet_plasm_staking/struct.Ledger.html\" title=\"struct pallet_plasm_staking::Ledger\">Ledger</a>&lt;T&gt;",synthetic:false,types:["pallet_plasm_staking::Ledger"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_plasm_staking/trait.Trait.html\" title=\"trait pallet_plasm_staking::Trait\">Trait</a>&gt; StorageMap&lt;&lt;T as Trait&gt;::AccountId, <a class=\"enum\" href=\"pallet_plasm_staking/enum.RewardDestination.html\" title=\"enum pallet_plasm_staking::RewardDestination\">RewardDestination</a>&gt; for <a class=\"struct\" href=\"pallet_plasm_staking/struct.Payee.html\" title=\"struct pallet_plasm_staking::Payee\">Payee</a>&lt;T&gt;",synthetic:false,types:["pallet_plasm_staking::Payee"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()