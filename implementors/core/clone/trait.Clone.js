(function() {var implementors = {};
implementors["lockdrop_oracle"] = [{"text":"impl Clone for Config","synthetic":false,"types":[]}];
implementors["ovmi"] = [{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for VarType","synthetic":false,"types":[]},{"text":"impl Clone for CompiledPredicate","synthetic":false,"types":[]},{"text":"impl Clone for ConstantVariable","synthetic":false,"types":[]},{"text":"impl Clone for IntermediateCompiledPredicate","synthetic":false,"types":[]},{"text":"impl Clone for AtomicPropositionOrPlaceholder","synthetic":false,"types":[]},{"text":"impl Clone for AtomicProposition","synthetic":false,"types":[]},{"text":"impl Clone for PredicateCall","synthetic":false,"types":[]},{"text":"impl Clone for AtomicPredicateCall","synthetic":false,"types":[]},{"text":"impl Clone for InputPredicateCall","synthetic":false,"types":[]},{"text":"impl Clone for VariablePredicateCall","synthetic":false,"types":[]},{"text":"impl Clone for CompiledPredicateCall","synthetic":false,"types":[]},{"text":"impl Clone for CompiledInput","synthetic":false,"types":[]},{"text":"impl Clone for ConstantInput","synthetic":false,"types":[]},{"text":"impl Clone for LabelInput","synthetic":false,"types":[]},{"text":"impl Clone for NormalInput","synthetic":false,"types":[]},{"text":"impl Clone for VariableInput","synthetic":false,"types":[]},{"text":"impl Clone for SelfInput","synthetic":false,"types":[]},{"text":"impl Clone for LogicalConnective","synthetic":false,"types":[]},{"text":"impl&lt;Address:&nbsp;Clone&gt; Clone for PredicateCallInputs&lt;Address&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AtomicPredicateCallInputs","synthetic":false,"types":[]},{"text":"impl Clone for DecidablePredicateCallInputs","synthetic":false,"types":[]},{"text":"impl&lt;Address:&nbsp;Clone&gt; Clone for LogicalConnectiveCallInputs&lt;Address&gt;","synthetic":false,"types":[]},{"text":"impl Clone for BaseAtomicPredicateCallInputs","synthetic":false,"types":[]},{"text":"impl&lt;Address:&nbsp;Clone&gt; Clone for CompiledPredicateCallInputs&lt;Address&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Address:&nbsp;Clone&gt; Clone for Property&lt;Address&gt;","synthetic":false,"types":[]},{"text":"impl Clone for PredicateTypeSerializable","synthetic":false,"types":[]},{"text":"impl Clone for VarTypeSerializable","synthetic":false,"types":[]},{"text":"impl Clone for CompiledPredicateSerializable","synthetic":false,"types":[]},{"text":"impl Clone for ConstantVariableSerializable","synthetic":false,"types":[]},{"text":"impl Clone for IntermediateCompiledPredicateSerializable","synthetic":false,"types":[]},{"text":"impl Clone for AtomicPropositionOrPlaceholderSerializable","synthetic":false,"types":[]},{"text":"impl Clone for AtomicPropositionSerializable","synthetic":false,"types":[]},{"text":"impl Clone for PredicateCallSerializable","synthetic":false,"types":[]},{"text":"impl Clone for AtomicPredicateCallSerializable","synthetic":false,"types":[]},{"text":"impl Clone for InputPredicateCallSerializable","synthetic":false,"types":[]},{"text":"impl Clone for VariablePredicateCallSerializable","synthetic":false,"types":[]},{"text":"impl Clone for CompiledPredicateCallSerializable","synthetic":false,"types":[]},{"text":"impl Clone for CompiledInputSerializable","synthetic":false,"types":[]},{"text":"impl Clone for ConstantInputSerializable","synthetic":false,"types":[]},{"text":"impl Clone for LabelInputSerializable","synthetic":false,"types":[]},{"text":"impl Clone for NormalInputSerializable","synthetic":false,"types":[]},{"text":"impl Clone for VariableInputSerializable","synthetic":false,"types":[]},{"text":"impl Clone for SelfInputSerializable","synthetic":false,"types":[]},{"text":"impl Clone for LogicalConnectiveSerializable","synthetic":false,"types":[]},{"text":"impl&lt;Address:&nbsp;Clone&gt; Clone for VarValue&lt;Address&gt;","synthetic":false,"types":[]},{"text":"impl Clone for AccountId","synthetic":false,"types":[]},{"text":"impl Clone for Range","synthetic":false,"types":[]}];
implementors["pallet_contract_operator"] = [{"text":"impl Clone for DefaultParameters","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Parameters:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId, Parameters&gt;","synthetic":false,"types":[]}];
implementors["pallet_custom_signatures"] = [{"text":"impl Clone for EthereumSignature","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_dapps_staking"] = [{"text":"impl Clone for StakingParameters","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone&gt; Clone for Nominations&lt;AccountId, Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Clone + HasCompact&gt; Clone for UnlockChunk&lt;Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone + HasCompact&gt; Clone for StakingLedger&lt;AccountId, Balance&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Vote","synthetic":false,"types":[]},{"text":"impl Clone for VoteCounts","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId, Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_operator_trading"] = [{"text":"impl Clone for OfferState","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone, Moment:&nbsp;Clone&gt; Clone for Offer&lt;AccountId, Balance, Moment&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId&gt;","synthetic":false,"types":[]}];
implementors["pallet_ovm"] = [{"text":"impl Clone for PrefabOvmModule","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for ExecutionContext&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::AccountId: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;CodeHash:&nbsp;Clone&gt; Clone for PredicateContract&lt;CodeHash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone&gt; Clone for Property&lt;AccountId&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Schedule","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Property:&nbsp;Clone, Hash:&nbsp;Clone, BlockNumber:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId, Property, Hash, BlockNumber&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_plasm_lockdrop"] = [{"text":"impl Clone for LockCheck","synthetic":false,"types":[]},{"text":"impl Clone for EcdsaSignature","synthetic":false,"types":[]},{"text":"impl Clone for Lockdrop","synthetic":false,"types":[]},{"text":"impl&lt;AuthorityId:&nbsp;Clone + Ord&gt; Clone for Claim&lt;AuthorityId&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ClaimVote","synthetic":false,"types":[]},{"text":"impl&lt;DollarRate:&nbsp;Clone + Member + Parameter&gt; Clone for TickerRate&lt;DollarRate&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, AuthorityId:&nbsp;Clone, DollarRate:&nbsp;Clone, Balance:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId, AuthorityId, DollarRate, Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_plasm_rewards"] = [{"text":"impl Clone for Releases","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Clone&gt; Clone for RawEvent&lt;Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["pallet_plasm_validator"] = [{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId, Balance&gt;","synthetic":false,"types":[]}];
implementors["pallet_plasma"] = [{"text":"impl&lt;Balance:&nbsp;Clone&gt; Clone for Range&lt;Balance&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone, BlockNumber:&nbsp;Clone&gt; Clone for StateUpdate&lt;AccountId, Balance, BlockNumber&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone&gt; Clone for Checkpoint&lt;AccountId&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, BlockNumber:&nbsp;Clone, Balance:&nbsp;Clone, Hash:&nbsp;Clone&gt; Clone for Exit&lt;AccountId, BlockNumber, Balance, Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone, Hash:&nbsp;Clone&gt; Clone for InclusionProof&lt;AccountId, Balance, Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Clone, Hash:&nbsp;Clone&gt; Clone for IntervalInclusionProof&lt;Balance, Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone, Hash:&nbsp;Clone&gt; Clone for AddressInclusionProof&lt;AccountId, Balance, Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;Balance:&nbsp;Clone, Hash:&nbsp;Clone&gt; Clone for IntervalTreeNode&lt;Balance, Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Hash:&nbsp;Clone&gt; Clone for AddressTreeNode&lt;AccountId, Hash&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Balance:&nbsp;Clone, BlockNumber:&nbsp;Clone&gt; Clone for ExitDeposit&lt;AccountId, Balance, BlockNumber&gt;","synthetic":false,"types":[]},{"text":"impl&lt;AccountId:&nbsp;Clone, Hash:&nbsp;Clone, BlockNumber:&nbsp;Clone, Range:&nbsp;Clone, Checkpoint:&nbsp;Clone&gt; Clone for RawEvent&lt;AccountId, Hash, BlockNumber, Range, Checkpoint&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + Trait&gt; Clone for Module&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Trait&gt; Clone for Call&lt;T&gt;","synthetic":false,"types":[]}];
implementors["plasm_cli"] = [{"text":"impl Clone for Extensions","synthetic":false,"types":[]}];
implementors["plasm_runtime"] = [{"text":"impl Clone for SessionKeys","synthetic":false,"types":[]},{"text":"impl Clone for Runtime","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for Origin","synthetic":false,"types":[]},{"text":"impl Clone for OriginCaller","synthetic":false,"types":[]},{"text":"impl Clone for Call","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()