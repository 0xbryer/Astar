(function() {var implementors = {};
implementors["pallet_contract_operator"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_contract_operator/struct.OperatorHasContracts.html\" title=\"struct pallet_contract_operator::OperatorHasContracts\">OperatorHasContracts</a>&lt;T&gt;","synthetic":true,"types":["pallet_contract_operator::OperatorHasContracts"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_contract_operator/struct.ContractHasOperator.html\" title=\"struct pallet_contract_operator::ContractHasOperator\">ContractHasOperator</a>&lt;T&gt;","synthetic":true,"types":["pallet_contract_operator::ContractHasOperator"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_contract_operator/struct.ContractParameters.html\" title=\"struct pallet_contract_operator::ContractParameters\">ContractParameters</a>&lt;T&gt;","synthetic":true,"types":["pallet_contract_operator::ContractParameters"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_contract_operator/struct.Module.html\" title=\"struct pallet_contract_operator::Module\">Module</a>&lt;T&gt;","synthetic":true,"types":["pallet_contract_operator::Module"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_contract_operator/enum.Call.html\" title=\"enum pallet_contract_operator::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Trait&gt;::Currency as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"pallet_contract_operator/trait.Trait.html\" title=\"trait pallet_contract_operator::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_contract_operator/trait.Trait.html#associatedtype.Parameters\" title=\"type pallet_contract_operator::Trait::Parameters\">Parameters</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_contract_operator::Call"]},{"text":"impl&lt;AccountId, Parameters&gt; Freeze for <a class=\"enum\" href=\"pallet_contract_operator/enum.RawEvent.html\" title=\"enum pallet_contract_operator::RawEvent\">RawEvent</a>&lt;AccountId, Parameters&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Parameters: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_contract_operator::RawEvent"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_contract_operator/parameters/struct.DefaultParameters.html\" title=\"struct pallet_contract_operator::parameters::DefaultParameters\">DefaultParameters</a>","synthetic":true,"types":["pallet_contract_operator::parameters::DefaultParameters"]}];
implementors["pallet_dapps_staking"] = [{"text":"impl&lt;AccountId, Balance&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.Nominations.html\" title=\"struct pallet_dapps_staking::Nominations\">Nominations</a>&lt;AccountId, Balance&gt;","synthetic":true,"types":["pallet_dapps_staking::Nominations"]},{"text":"impl&lt;AccountId, Balance&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.EraStakingPoints.html\" title=\"struct pallet_dapps_staking::EraStakingPoints\">EraStakingPoints</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_dapps_staking::EraStakingPoints"]},{"text":"impl&lt;Balance&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.UnlockChunk.html\" title=\"struct pallet_dapps_staking::UnlockChunk\">UnlockChunk</a>&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_dapps_staking::UnlockChunk"]},{"text":"impl&lt;AccountId, Balance&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.StakingLedger.html\" title=\"struct pallet_dapps_staking::StakingLedger\">StakingLedger</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_dapps_staking::StakingLedger"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.GenesisConfig.html\" title=\"struct pallet_dapps_staking::GenesisConfig\">GenesisConfig</a>","synthetic":true,"types":["pallet_dapps_staking::GenesisConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.UntreatedEra.html\" title=\"struct pallet_dapps_staking::UntreatedEra\">UntreatedEra</a>","synthetic":true,"types":["pallet_dapps_staking::UntreatedEra"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.Bonded.html\" title=\"struct pallet_dapps_staking::Bonded\">Bonded</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::Bonded"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.Ledger.html\" title=\"struct pallet_dapps_staking::Ledger\">Ledger</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::Ledger"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.Payee.html\" title=\"struct pallet_dapps_staking::Payee\">Payee</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::Payee"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.ErasContractsParameters.html\" title=\"struct pallet_dapps_staking::ErasContractsParameters\">ErasContractsParameters</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::ErasContractsParameters"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.ErasStakingPoints.html\" title=\"struct pallet_dapps_staking::ErasStakingPoints\">ErasStakingPoints</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::ErasStakingPoints"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.ErasTotalStake.html\" title=\"struct pallet_dapps_staking::ErasTotalStake\">ErasTotalStake</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::ErasTotalStake"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/struct.Module.html\" title=\"struct pallet_dapps_staking::Module\">Module</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::Module"]},{"text":"impl&lt;AccountId, Balance&gt; Freeze for <a class=\"enum\" href=\"pallet_dapps_staking/enum.RawEvent.html\" title=\"enum pallet_dapps_staking::RawEvent\">RawEvent</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_dapps_staking::RawEvent"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_dapps_staking/enum.Error.html\" title=\"enum pallet_dapps_staking::Error\">Error</a>&lt;T&gt;","synthetic":true,"types":["pallet_dapps_staking::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_dapps_staking/enum.Call.html\" title=\"enum pallet_dapps_staking::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"pallet_dapps_staking/trait.Trait.html\" title=\"trait pallet_dapps_staking::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_dapps_staking/trait.Trait.html#associatedtype.Currency\" title=\"type pallet_dapps_staking::Trait::Currency\">Currency</a> as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"pallet_dapps_staking/trait.Trait.html\" title=\"trait pallet_dapps_staking::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_dapps_staking/trait.Trait.html#associatedtype.Currency\" title=\"type pallet_dapps_staking::Trait::Currency\">Currency</a>: Currency&lt;&lt;T as Trait&gt;::AccountId&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Lookup: StaticLookup,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Trait&gt;::Lookup as StaticLookup&gt;::Source: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_dapps_staking::Call"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/parameters/struct.StakingParameters.html\" title=\"struct pallet_dapps_staking::parameters::StakingParameters\">StakingParameters</a>","synthetic":true,"types":["pallet_dapps_staking::parameters::StakingParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_dapps_staking/rewards/struct.BasedComputeRewardsForDapps.html\" title=\"struct pallet_dapps_staking::rewards::BasedComputeRewardsForDapps\">BasedComputeRewardsForDapps</a>","synthetic":true,"types":["pallet_dapps_staking::rewards::BasedComputeRewardsForDapps"]}];
implementors["pallet_operator_trading"] = [{"text":"impl&lt;AccountId, Balance, Moment&gt; Freeze for <a class=\"struct\" href=\"pallet_operator_trading/struct.Offer.html\" title=\"struct pallet_operator_trading::Offer\">Offer</a>&lt;AccountId, Balance, Moment&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Moment: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_operator_trading::Offer"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_operator_trading/struct.Offers.html\" title=\"struct pallet_operator_trading::Offers\">Offers</a>&lt;T&gt;","synthetic":true,"types":["pallet_operator_trading::Offers"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_operator_trading/struct.Module.html\" title=\"struct pallet_operator_trading::Module\">Module</a>&lt;T&gt;","synthetic":true,"types":["pallet_operator_trading::Module"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pallet_operator_trading/enum.OfferState.html\" title=\"enum pallet_operator_trading::OfferState\">OfferState</a>","synthetic":true,"types":["pallet_operator_trading::OfferState"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_operator_trading/enum.Call.html\" title=\"enum pallet_operator_trading::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"pallet_operator_trading/trait.Trait.html\" title=\"trait pallet_operator_trading::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_operator_trading/trait.Trait.html#associatedtype.Currency\" title=\"type pallet_operator_trading::Trait::Currency\">Currency</a> as Currency&lt;&lt;T as Trait&gt;::AccountId&gt;&gt;::Balance: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::BlockNumber: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_operator_trading::Call"]},{"text":"impl&lt;AccountId&gt; Freeze for <a class=\"enum\" href=\"pallet_operator_trading/enum.RawEvent.html\" title=\"enum pallet_operator_trading::RawEvent\">RawEvent</a>&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_operator_trading::RawEvent"]}];
implementors["pallet_ovm"] = [{"text":"impl&lt;CodeHash&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.PredicateContract.html\" title=\"struct pallet_ovm::PredicateContract\">PredicateContract</a>&lt;CodeHash&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CodeHash: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_ovm::PredicateContract"]},{"text":"impl&lt;AccountId&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.Property.html\" title=\"struct pallet_ovm::Property\">Property</a>&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_ovm::Property"]},{"text":"impl&lt;AccountId, Hash, BlockNumber&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.ChallengeGame.html\" title=\"struct pallet_ovm::ChallengeGame\">ChallengeGame</a>&lt;AccountId, Hash, BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_ovm::ChallengeGame"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.Schedule.html\" title=\"struct pallet_ovm::Schedule\">Schedule</a>","synthetic":true,"types":["pallet_ovm::Schedule"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.Config.html\" title=\"struct pallet_ovm::Config\">Config</a>","synthetic":true,"types":["pallet_ovm::Config"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.GenesisConfig.html\" title=\"struct pallet_ovm::GenesisConfig\">GenesisConfig</a>","synthetic":true,"types":["pallet_ovm::GenesisConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.CurrentSchedule.html\" title=\"struct pallet_ovm::CurrentSchedule\">CurrentSchedule</a>","synthetic":true,"types":["pallet_ovm::CurrentSchedule"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.PredicateCodes.html\" title=\"struct pallet_ovm::PredicateCodes\">PredicateCodes</a>&lt;T&gt;","synthetic":true,"types":["pallet_ovm::PredicateCodes"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.PredicateCache.html\" title=\"struct pallet_ovm::PredicateCache\">PredicateCache</a>&lt;T&gt;","synthetic":true,"types":["pallet_ovm::PredicateCache"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.Predicates.html\" title=\"struct pallet_ovm::Predicates\">Predicates</a>&lt;T&gt;","synthetic":true,"types":["pallet_ovm::Predicates"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.InstantiatedGames.html\" title=\"struct pallet_ovm::InstantiatedGames\">InstantiatedGames</a>&lt;T&gt;","synthetic":true,"types":["pallet_ovm::InstantiatedGames"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/struct.Module.html\" title=\"struct pallet_ovm::Module\">Module</a>&lt;T&gt;","synthetic":true,"types":["pallet_ovm::Module"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pallet_ovm/enum.Decision.html\" title=\"enum pallet_ovm::Decision\">Decision</a>","synthetic":true,"types":["pallet_ovm::Decision"]},{"text":"impl&lt;AccountId, Property, Hash, BlockNumber&gt; Freeze for <a class=\"enum\" href=\"pallet_ovm/enum.RawEvent.html\" title=\"enum pallet_ovm::RawEvent\">RawEvent</a>&lt;AccountId, Property, Hash, BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Hash: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Property: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_ovm::RawEvent"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_ovm/enum.Error.html\" title=\"enum pallet_ovm::Error\">Error</a>&lt;T&gt;","synthetic":true,"types":["pallet_ovm::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_ovm/enum.Call.html\" title=\"enum pallet_ovm::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::Hash: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_ovm::Call"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_ovm/predicate/struct.ExecError.html\" title=\"struct pallet_ovm::predicate::ExecError\">ExecError</a>","synthetic":true,"types":["pallet_ovm::predicate::ExecError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_ovm/predicate/struct.PrefabOvmModule.html\" title=\"struct pallet_ovm::predicate::PrefabOvmModule\">PrefabOvmModule</a>","synthetic":true,"types":["pallet_ovm::predicate::PrefabOvmModule"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_ovm/predicate/struct.OvmExecutable.html\" title=\"struct pallet_ovm::predicate::OvmExecutable\">OvmExecutable</a>","synthetic":true,"types":["pallet_ovm::predicate::OvmExecutable"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/predicate/struct.PredicateLoader.html\" title=\"struct pallet_ovm::predicate::PredicateLoader\">PredicateLoader</a>&lt;'a&gt;","synthetic":true,"types":["pallet_ovm::predicate::PredicateLoader"]},{"text":"impl&lt;'a, T, V, L&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/predicate/struct.ExecutionContext.html\" title=\"struct pallet_ovm::predicate::ExecutionContext\">ExecutionContext</a>&lt;'a, T, V, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::AccountId: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_ovm::predicate::ExecutionContext"]},{"text":"impl&lt;'a, 'b, T, V, L&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/predicate/struct.CallContext.html\" title=\"struct pallet_ovm::predicate::CallContext\">CallContext</a>&lt;'a, 'b, T, V, L&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Trait&gt;::AccountId: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_ovm::predicate::CallContext"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"pallet_ovm/predicate/struct.PredicateOvm.html\" title=\"struct pallet_ovm::predicate::PredicateOvm\">PredicateOvm</a>&lt;'a&gt;","synthetic":true,"types":["pallet_ovm::predicate::PredicateOvm"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pallet_ovm/predicate/enum.PredicateError.html\" title=\"enum pallet_ovm::predicate::PredicateError\">PredicateError</a>","synthetic":true,"types":["pallet_ovm::predicate::PredicateError"]}];
implementors["pallet_plasm_lockdrop"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.CoinGecko.html\" title=\"struct pallet_plasm_lockdrop::CoinGecko\">CoinGecko</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_lockdrop::oracle::CoinGecko"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.Transaction.html\" title=\"struct pallet_plasm_lockdrop::Transaction\">Transaction</a>","synthetic":true,"types":["pallet_plasm_lockdrop::oracle::Transaction"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.BitcoinAddress.html\" title=\"struct pallet_plasm_lockdrop::BitcoinAddress\">BitcoinAddress</a>","synthetic":true,"types":["pallet_plasm_lockdrop::oracle::BitcoinAddress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.EthereumAddress.html\" title=\"struct pallet_plasm_lockdrop::EthereumAddress\">EthereumAddress</a>","synthetic":true,"types":["pallet_plasm_lockdrop::oracle::EthereumAddress"]},{"text":"impl&lt;T, D&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.BlockCypher.html\" title=\"struct pallet_plasm_lockdrop::BlockCypher\">BlockCypher</a>&lt;T, D&gt;","synthetic":true,"types":["pallet_plasm_lockdrop::oracle::BlockCypher"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.Claim.html\" title=\"struct pallet_plasm_lockdrop::Claim\">Claim</a>","synthetic":true,"types":["pallet_plasm_lockdrop::Claim"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.ClaimVote.html\" title=\"struct pallet_plasm_lockdrop::ClaimVote\">ClaimVote</a>","synthetic":true,"types":["pallet_plasm_lockdrop::ClaimVote"]},{"text":"impl&lt;DollarRate&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.TickerRate.html\" title=\"struct pallet_plasm_lockdrop::TickerRate\">TickerRate</a>&lt;DollarRate&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DollarRate: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_plasm_lockdrop::TickerRate"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.GenesisConfig.html\" title=\"struct pallet_plasm_lockdrop::GenesisConfig\">GenesisConfig</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"pallet_plasm_lockdrop/trait.Trait.html\" title=\"trait pallet_plasm_lockdrop::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_plasm_lockdrop/trait.Trait.html#associatedtype.DollarRate\" title=\"type pallet_plasm_lockdrop::Trait::DollarRate\">DollarRate</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"pallet_plasm_lockdrop/trait.Trait.html\" title=\"trait pallet_plasm_lockdrop::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_plasm_lockdrop/trait.Trait.html#associatedtype.Moment\" title=\"type pallet_plasm_lockdrop::Trait::Moment\">Moment</a>: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_plasm_lockdrop::GenesisConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_lockdrop/struct.Module.html\" title=\"struct pallet_plasm_lockdrop::Module\">Module</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_lockdrop::Module"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pallet_plasm_lockdrop/enum.Lockdrop.html\" title=\"enum pallet_plasm_lockdrop::Lockdrop\">Lockdrop</a>","synthetic":true,"types":["pallet_plasm_lockdrop::Lockdrop"]},{"text":"impl&lt;AccountId, AuthorityId, DollarRate, Balance&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_lockdrop/enum.RawEvent.html\" title=\"enum pallet_plasm_lockdrop::RawEvent\">RawEvent</a>&lt;AccountId, AuthorityId, DollarRate, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;AuthorityId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;DollarRate: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_plasm_lockdrop::RawEvent"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_lockdrop/enum.Error.html\" title=\"enum pallet_plasm_lockdrop::Error\">Error</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_lockdrop::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_lockdrop/enum.Call.html\" title=\"enum pallet_plasm_lockdrop::Call\">Call</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"pallet_plasm_lockdrop/trait.Trait.html\" title=\"trait pallet_plasm_lockdrop::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_plasm_lockdrop/trait.Trait.html#associatedtype.AuthorityId\" title=\"type pallet_plasm_lockdrop::Trait::AuthorityId\">AuthorityId</a>: RuntimeAppPublic,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"pallet_plasm_lockdrop/trait.Trait.html\" title=\"trait pallet_plasm_lockdrop::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_plasm_lockdrop/trait.Trait.html#associatedtype.DollarRate\" title=\"type pallet_plasm_lockdrop::Trait::DollarRate\">DollarRate</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as <a class=\"trait\" href=\"pallet_plasm_lockdrop/trait.Trait.html\" title=\"trait pallet_plasm_lockdrop::Trait\">Trait</a>&gt;::<a class=\"type\" href=\"pallet_plasm_lockdrop/trait.Trait.html#associatedtype.AuthorityId\" title=\"type pallet_plasm_lockdrop::Trait::AuthorityId\">AuthorityId</a> as RuntimeAppPublic&gt;::Signature: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_plasm_lockdrop::Call"]}];
implementors["pallet_plasm_rewards"] = [{"text":"impl&lt;Moment&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.ActiveEraInfo.html\" title=\"struct pallet_plasm_rewards::ActiveEraInfo\">ActiveEraInfo</a>&lt;Moment&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Moment: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_plasm_rewards::ActiveEraInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.GenesisConfig.html\" title=\"struct pallet_plasm_rewards::GenesisConfig\">GenesisConfig</a>","synthetic":true,"types":["pallet_plasm_rewards::GenesisConfig"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.ForDappsEraReward.html\" title=\"struct pallet_plasm_rewards::ForDappsEraReward\">ForDappsEraReward</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_rewards::ForDappsEraReward"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.ForSecurityEraReward.html\" title=\"struct pallet_plasm_rewards::ForSecurityEraReward\">ForSecurityEraReward</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_rewards::ForSecurityEraReward"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.HistoryDepth.html\" title=\"struct pallet_plasm_rewards::HistoryDepth\">HistoryDepth</a>","synthetic":true,"types":["pallet_plasm_rewards::HistoryDepth"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.BondedEras.html\" title=\"struct pallet_plasm_rewards::BondedEras\">BondedEras</a>","synthetic":true,"types":["pallet_plasm_rewards::BondedEras"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.CurrentEra.html\" title=\"struct pallet_plasm_rewards::CurrentEra\">CurrentEra</a>","synthetic":true,"types":["pallet_plasm_rewards::CurrentEra"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.ActiveEra.html\" title=\"struct pallet_plasm_rewards::ActiveEra\">ActiveEra</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_rewards::ActiveEra"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.ErasStartSessionIndex.html\" title=\"struct pallet_plasm_rewards::ErasStartSessionIndex\">ErasStartSessionIndex</a>","synthetic":true,"types":["pallet_plasm_rewards::ErasStartSessionIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.ForceEra.html\" title=\"struct pallet_plasm_rewards::ForceEra\">ForceEra</a>","synthetic":true,"types":["pallet_plasm_rewards::ForceEra"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/struct.Module.html\" title=\"struct pallet_plasm_rewards::Module\">Module</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_rewards::Module"]},{"text":"impl Freeze for <a class=\"enum\" href=\"pallet_plasm_rewards/enum.Releases.html\" title=\"enum pallet_plasm_rewards::Releases\">Releases</a>","synthetic":true,"types":["pallet_plasm_rewards::Releases"]},{"text":"impl&lt;Balance&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_rewards/enum.RawEvent.html\" title=\"enum pallet_plasm_rewards::RawEvent\">RawEvent</a>&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_plasm_rewards::RawEvent"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_rewards/enum.Error.html\" title=\"enum pallet_plasm_rewards::Error\">Error</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_rewards::Error"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_rewards/enum.Call.html\" title=\"enum pallet_plasm_rewards::Call\">Call</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_rewards::Call"]},{"text":"impl&lt;N&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/inflation/struct.FirstPlasmIncentive.html\" title=\"struct pallet_plasm_rewards::inflation::FirstPlasmIncentive\">FirstPlasmIncentive</a>&lt;N&gt;","synthetic":true,"types":["pallet_plasm_rewards::inflation::FirstPlasmIncentive"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/inflation/struct.SimpleComputeTotalPayout.html\" title=\"struct pallet_plasm_rewards::inflation::SimpleComputeTotalPayout\">SimpleComputeTotalPayout</a>","synthetic":true,"types":["pallet_plasm_rewards::inflation::SimpleComputeTotalPayout"]},{"text":"impl&lt;Balance&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_rewards/inflation/struct.MaintainRatioComputeTotalPayout.html\" title=\"struct pallet_plasm_rewards::inflation::MaintainRatioComputeTotalPayout\">MaintainRatioComputeTotalPayout</a>&lt;Balance&gt;","synthetic":true,"types":["pallet_plasm_rewards::inflation::MaintainRatioComputeTotalPayout"]}];
implementors["pallet_plasm_validator"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_validator/struct.GenesisConfig.html\" title=\"struct pallet_plasm_validator::GenesisConfig\">GenesisConfig</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_validator::GenesisConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"pallet_plasm_validator/struct.UntreatedEra.html\" title=\"struct pallet_plasm_validator::UntreatedEra\">UntreatedEra</a>","synthetic":true,"types":["pallet_plasm_validator::UntreatedEra"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_validator/struct.ElectedValidators.html\" title=\"struct pallet_plasm_validator::ElectedValidators\">ElectedValidators</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_validator::ElectedValidators"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_validator/struct.Validators.html\" title=\"struct pallet_plasm_validator::Validators\">Validators</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_validator::Validators"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pallet_plasm_validator/struct.Module.html\" title=\"struct pallet_plasm_validator::Module\">Module</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_validator::Module"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_validator/enum.Call.html\" title=\"enum pallet_plasm_validator::Call\">Call</a>&lt;T&gt;","synthetic":true,"types":["pallet_plasm_validator::Call"]},{"text":"impl&lt;AccountId, Balance&gt; Freeze for <a class=\"enum\" href=\"pallet_plasm_validator/enum.RawEvent.html\" title=\"enum pallet_plasm_validator::RawEvent\">RawEvent</a>&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: Freeze,&nbsp;</span>","synthetic":true,"types":["pallet_plasm_validator::RawEvent"]}];
implementors["plasm_cli"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_cli/struct.Cli.html\" title=\"struct plasm_cli::Cli\">Cli</a>","synthetic":true,"types":["plasm_cli::cli::Cli"]},{"text":"impl Freeze for <a class=\"enum\" href=\"plasm_cli/enum.Subcommand.html\" title=\"enum plasm_cli::Subcommand\">Subcommand</a>","synthetic":true,"types":["plasm_cli::cli::Subcommand"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_cli/chain_spec/struct.Extensions.html\" title=\"struct plasm_cli::chain_spec::Extensions\">Extensions</a>","synthetic":true,"types":["plasm_cli::chain_spec::Extensions"]}];
implementors["plasm_rpc"] = [{"text":"impl&lt;C, F, P&gt; Freeze for <a class=\"struct\" href=\"plasm_rpc/struct.LightDeps.html\" title=\"struct plasm_rpc::LightDeps\">LightDeps</a>&lt;C, F, P&gt;","synthetic":true,"types":["plasm_rpc::LightDeps"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_rpc/struct.BabeDeps.html\" title=\"struct plasm_rpc::BabeDeps\">BabeDeps</a>","synthetic":true,"types":["plasm_rpc::BabeDeps"]},{"text":"impl&lt;C, P, SC&gt; Freeze for <a class=\"struct\" href=\"plasm_rpc/struct.FullDeps.html\" title=\"struct plasm_rpc::FullDeps\">FullDeps</a>&lt;C, P, SC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SC: Freeze,&nbsp;</span>","synthetic":true,"types":["plasm_rpc::FullDeps"]}];
implementors["plasm_runtime"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.BlockHashCount.html\" title=\"struct plasm_runtime::BlockHashCount\">BlockHashCount</a>","synthetic":true,"types":["plasm_runtime::BlockHashCount"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.MaximumBlockWeight.html\" title=\"struct plasm_runtime::MaximumBlockWeight\">MaximumBlockWeight</a>","synthetic":true,"types":["plasm_runtime::MaximumBlockWeight"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.MaximumBlockLength.html\" title=\"struct plasm_runtime::MaximumBlockLength\">MaximumBlockLength</a>","synthetic":true,"types":["plasm_runtime::MaximumBlockLength"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.Version.html\" title=\"struct plasm_runtime::Version\">Version</a>","synthetic":true,"types":["plasm_runtime::Version"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.AvailableBlockRatio.html\" title=\"struct plasm_runtime::AvailableBlockRatio\">AvailableBlockRatio</a>","synthetic":true,"types":["plasm_runtime::AvailableBlockRatio"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.EpochDuration.html\" title=\"struct plasm_runtime::EpochDuration\">EpochDuration</a>","synthetic":true,"types":["plasm_runtime::EpochDuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ExpectedBlockTime.html\" title=\"struct plasm_runtime::ExpectedBlockTime\">ExpectedBlockTime</a>","synthetic":true,"types":["plasm_runtime::ExpectedBlockTime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.IndexDeposit.html\" title=\"struct plasm_runtime::IndexDeposit\">IndexDeposit</a>","synthetic":true,"types":["plasm_runtime::IndexDeposit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ExistentialDeposit.html\" title=\"struct plasm_runtime::ExistentialDeposit\">ExistentialDeposit</a>","synthetic":true,"types":["plasm_runtime::ExistentialDeposit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.TransactionBaseFee.html\" title=\"struct plasm_runtime::TransactionBaseFee\">TransactionBaseFee</a>","synthetic":true,"types":["plasm_runtime::TransactionBaseFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.TransactionByteFee.html\" title=\"struct plasm_runtime::TransactionByteFee\">TransactionByteFee</a>","synthetic":true,"types":["plasm_runtime::TransactionByteFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.WeightFeeCoefficient.html\" title=\"struct plasm_runtime::WeightFeeCoefficient\">WeightFeeCoefficient</a>","synthetic":true,"types":["plasm_runtime::WeightFeeCoefficient"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.TargetBlockFullness.html\" title=\"struct plasm_runtime::TargetBlockFullness\">TargetBlockFullness</a>","synthetic":true,"types":["plasm_runtime::TargetBlockFullness"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.MinimumPeriod.html\" title=\"struct plasm_runtime::MinimumPeriod\">MinimumPeriod</a>","synthetic":true,"types":["plasm_runtime::MinimumPeriod"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.SessionKeys.html\" title=\"struct plasm_runtime::SessionKeys\">SessionKeys</a>","synthetic":true,"types":["plasm_runtime::SessionKeys"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.SessionsPerEra.html\" title=\"struct plasm_runtime::SessionsPerEra\">SessionsPerEra</a>","synthetic":true,"types":["plasm_runtime::SessionsPerEra"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.BondingDuration.html\" title=\"struct plasm_runtime::BondingDuration\">BondingDuration</a>","synthetic":true,"types":["plasm_runtime::BondingDuration"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ContractTransferFee.html\" title=\"struct plasm_runtime::ContractTransferFee\">ContractTransferFee</a>","synthetic":true,"types":["plasm_runtime::ContractTransferFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ContractCreationFee.html\" title=\"struct plasm_runtime::ContractCreationFee\">ContractCreationFee</a>","synthetic":true,"types":["plasm_runtime::ContractCreationFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ContractTransactionBaseFee.html\" title=\"struct plasm_runtime::ContractTransactionBaseFee\">ContractTransactionBaseFee</a>","synthetic":true,"types":["plasm_runtime::ContractTransactionBaseFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ContractTransactionByteFee.html\" title=\"struct plasm_runtime::ContractTransactionByteFee\">ContractTransactionByteFee</a>","synthetic":true,"types":["plasm_runtime::ContractTransactionByteFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ContractFee.html\" title=\"struct plasm_runtime::ContractFee\">ContractFee</a>","synthetic":true,"types":["plasm_runtime::ContractFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.TombstoneDeposit.html\" title=\"struct plasm_runtime::TombstoneDeposit\">TombstoneDeposit</a>","synthetic":true,"types":["plasm_runtime::TombstoneDeposit"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.RentByteFee.html\" title=\"struct plasm_runtime::RentByteFee\">RentByteFee</a>","synthetic":true,"types":["plasm_runtime::RentByteFee"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.RentDepositOffset.html\" title=\"struct plasm_runtime::RentDepositOffset\">RentDepositOffset</a>","synthetic":true,"types":["plasm_runtime::RentDepositOffset"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.SurchargeReward.html\" title=\"struct plasm_runtime::SurchargeReward\">SurchargeReward</a>","synthetic":true,"types":["plasm_runtime::SurchargeReward"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.WindowSize.html\" title=\"struct plasm_runtime::WindowSize\">WindowSize</a>","synthetic":true,"types":["plasm_runtime::WindowSize"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ReportLatency.html\" title=\"struct plasm_runtime::ReportLatency\">ReportLatency</a>","synthetic":true,"types":["plasm_runtime::ReportLatency"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.BitcoinTickerUri.html\" title=\"struct plasm_runtime::BitcoinTickerUri\">BitcoinTickerUri</a>","synthetic":true,"types":["plasm_runtime::BitcoinTickerUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.EthereumTickerUri.html\" title=\"struct plasm_runtime::EthereumTickerUri\">EthereumTickerUri</a>","synthetic":true,"types":["plasm_runtime::EthereumTickerUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.BitcoinApiUri.html\" title=\"struct plasm_runtime::BitcoinApiUri\">BitcoinApiUri</a>","synthetic":true,"types":["plasm_runtime::BitcoinApiUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.EthereumApiUri.html\" title=\"struct plasm_runtime::EthereumApiUri\">EthereumApiUri</a>","synthetic":true,"types":["plasm_runtime::EthereumApiUri"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.MedianFilterExpire.html\" title=\"struct plasm_runtime::MedianFilterExpire\">MedianFilterExpire</a>","synthetic":true,"types":["plasm_runtime::MedianFilterExpire"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.Runtime.html\" title=\"struct plasm_runtime::Runtime\">Runtime</a>","synthetic":true,"types":["plasm_runtime::Runtime"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.ModuleToIndex.html\" title=\"struct plasm_runtime::ModuleToIndex\">ModuleToIndex</a>","synthetic":true,"types":["plasm_runtime::ModuleToIndex"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.GenesisConfig.html\" title=\"struct plasm_runtime::GenesisConfig\">GenesisConfig</a>","synthetic":true,"types":["plasm_runtime::GenesisConfig"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.RuntimeApi.html\" title=\"struct plasm_runtime::RuntimeApi\">RuntimeApi</a>","synthetic":true,"types":["plasm_runtime::RuntimeApi"]},{"text":"impl&lt;Block, C&gt; !Freeze for <a class=\"struct\" href=\"plasm_runtime/struct.RuntimeApiImpl.html\" title=\"struct plasm_runtime::RuntimeApiImpl\">RuntimeApiImpl</a>&lt;Block, C&gt;","synthetic":true,"types":["plasm_runtime::RuntimeApiImpl"]},{"text":"impl Freeze for <a class=\"enum\" href=\"plasm_runtime/enum.Event.html\" title=\"enum plasm_runtime::Event\">Event</a>","synthetic":true,"types":["plasm_runtime::Event"]},{"text":"impl Freeze for <a class=\"enum\" href=\"plasm_runtime/enum.Origin.html\" title=\"enum plasm_runtime::Origin\">Origin</a>","synthetic":true,"types":["plasm_runtime::Origin"]},{"text":"impl Freeze for <a class=\"enum\" href=\"plasm_runtime/enum.Call.html\" title=\"enum plasm_runtime::Call\">Call</a>","synthetic":true,"types":["plasm_runtime::Call"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"plasm_runtime/impls/struct.LinearWeightToFee.html\" title=\"struct plasm_runtime::impls::LinearWeightToFee\">LinearWeightToFee</a>&lt;C&gt;","synthetic":true,"types":["plasm_runtime::impls::LinearWeightToFee"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"plasm_runtime/impls/struct.TargetedFeeAdjustment.html\" title=\"struct plasm_runtime::impls::TargetedFeeAdjustment\">TargetedFeeAdjustment</a>&lt;T&gt;","synthetic":true,"types":["plasm_runtime::impls::TargetedFeeAdjustment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plasm_runtime/constants/currency/struct.HOLDERS.html\" title=\"struct plasm_runtime::constants::currency::HOLDERS\">HOLDERS</a>","synthetic":true,"types":["plasm_runtime::constants::currency::HOLDERS"]}];
implementors["subkey"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"subkey/struct.Ed25519.html\" title=\"struct subkey::Ed25519\">Ed25519</a>","synthetic":true,"types":["subkey::Ed25519"]},{"text":"impl Freeze for <a class=\"struct\" href=\"subkey/struct.Sr25519.html\" title=\"struct subkey::Sr25519\">Sr25519</a>","synthetic":true,"types":["subkey::Sr25519"]},{"text":"impl Freeze for <a class=\"struct\" href=\"subkey/struct.Ecdsa.html\" title=\"struct subkey::Ecdsa\">Ecdsa</a>","synthetic":true,"types":["subkey::Ecdsa"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"subkey/vanity/struct.KeyPair.html\" title=\"struct subkey::vanity::KeyPair\">KeyPair</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;C as <a class=\"trait\" href=\"subkey/trait.Crypto.html\" title=\"trait subkey::Crypto\">Crypto</a>&gt;::<a class=\"type\" href=\"subkey/trait.Crypto.html#associatedtype.Pair\" title=\"type subkey::Crypto::Pair\">Pair</a>: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;C as <a class=\"trait\" href=\"subkey/trait.Crypto.html\" title=\"trait subkey::Crypto\">Crypto</a>&gt;::<a class=\"type\" href=\"subkey/trait.Crypto.html#associatedtype.Pair\" title=\"type subkey::Crypto::Pair\">Pair</a> as Pair&gt;::Seed: Freeze,&nbsp;</span>","synthetic":true,"types":["subkey::vanity::KeyPair"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()