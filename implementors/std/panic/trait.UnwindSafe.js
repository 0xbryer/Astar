(function() {var implementors = {};
implementors["pallet_custom_signatures"] = [{"text":"impl UnwindSafe for EthereumSignature","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId&gt; UnwindSafe for RawEvent&lt;AccountId&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Module&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::Call: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["pallet_plasm_rewards"] = [{"text":"impl&lt;N&gt; UnwindSafe for FirstPlasmIncentive&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;N&gt; UnwindSafe for CommunityRewards&lt;N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;N: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SimpleComputeTotalPayout","synthetic":true,"types":[]},{"text":"impl&lt;Balance&gt; UnwindSafe for MaintainRatioComputeTotalPayout&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for DefaultForDappsStaking&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Releases","synthetic":true,"types":[]},{"text":"impl&lt;Moment&gt; UnwindSafe for ActiveEraInfo&lt;Moment&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Moment: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ForDappsEraReward&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ForSecurityEraReward&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for HistoryDepth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BondedEras","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CurrentEra","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ActiveEra&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ErasStartSessionIndex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForceEra","synthetic":true,"types":[]},{"text":"impl&lt;Balance&gt; UnwindSafe for RawEvent&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Module&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["pallet_plasm_validator"] = [{"text":"impl&lt;T&gt; UnwindSafe for GenesisConfig&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UntreatedEra","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for ElectedValidators&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Validators&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Module&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; UnwindSafe for RawEvent&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["plasm_cli"] = [{"text":"impl UnwindSafe for Extensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cli","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Subcommand","synthetic":true,"types":[]}];
implementors["plasm_primitives"] = [{"text":"impl UnwindSafe for ReporterAppCrypto","synthetic":true,"types":[]}];
implementors["plasm_rpc"] = [{"text":"impl&lt;C, F, P&gt; !UnwindSafe for LightDeps&lt;C, F, P&gt;","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for BabeDeps","synthetic":true,"types":[]},{"text":"impl&lt;B&gt; !UnwindSafe for GrandpaDeps&lt;B&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C, P, SC, B&gt; !UnwindSafe for FullDeps&lt;C, P, SC, B&gt;","synthetic":true,"types":[]}];
implementors["plasm_runtime"] = [{"text":"impl UnwindSafe for HOLDERS","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeBlockLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeBlockWeights","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpochDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExpectedBlockTime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReportLongevity","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndexDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TargetBlockFullness","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AdjustmentVariable","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumMultiplier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UncleGenerations","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisabledValidatorsThreshold","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxScheduledPerBlock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionsPerEra","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BondingDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TombstoneDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepositPerContract","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepositPerStorageByte","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepositPerStorageItem","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RentFraction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SurchargeReward","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SignedClaimHandicap","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxDepth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxValueSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeletionWeightLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeletionQueueDepth","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxCodeSize","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SessionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ImOnlineUnsignedPriority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OffencesWeightSoftLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EcdsaUnsignedPriority","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NickReservationFee","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinNickLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxNickLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GasWeightMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ChainId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; UnwindSafe for EthereumFindAuthor&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !UnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()