var searchIndex={};
searchIndex["ovmi"] = {"doc":"ovmi This library allows Predicate to be loaded in binary…","i":[[3,"AccountId","ovmi","An opaque 32-byte cryptographic identifier.",null,null],[3,"Range","","An opaque Range(u128, u128).",null,null],[12,"start","","",0,null],[12,"end","","",0,null],[0,"compiled_predicates","","",null,null],[3,"CompiledPredicate","ovmi::compiled_predicates","Compiled Property definition",null,null],[12,"type","","",1,null],[12,"name","","",1,null],[12,"input_defs","","",1,null],[12,"contracts","","",1,null],[12,"constants","","",1,null],[12,"entry_point","","",1,null],[3,"ConstantVariable","","",null,null],[12,"var_type","","",2,null],[12,"name","","",2,null],[3,"IntermediateCompiledPredicate","","IntermediateCompiledPredicate is core of compilation which…",null,null],[12,"type","","",3,null],[12,"name","","",3,null],[12,"original_predicate_name","","",3,null],[12,"connective","","",3,null],[12,"input_defs","","",3,null],[12,"inputs","","",3,null],[12,"property_inputs","","",3,null],[3,"AtomicProposition","","",null,null],[12,"type","","",4,null],[12,"predicate","","",4,null],[12,"inputs","","",4,null],[12,"is_compiled","","",4,null],[3,"AtomicPredicateCall","","e.g. IsValidSignature()",null,null],[12,"type","","",5,null],[12,"source","","",5,null],[3,"InputPredicateCall","","e.g. a() of \"def Foo(a) := a()\"",null,null],[12,"type","","",6,null],[12,"source","","",6,null],[3,"VariablePredicateCall","","e.g. su() of \"def Foo(a) := with SU(a) as su {su()}\"",null,null],[12,"type","","",7,null],[3,"CompiledPredicateCall","","For predicates dynamic linking e.g. Confsig() user defined…",null,null],[12,"type","","",8,null],[12,"source","","",8,null],[3,"ConstantInput","","",null,null],[12,"type","","",9,null],[12,"name","","",9,null],[3,"LabelInput","","",null,null],[12,"type","","",10,null],[12,"label","","",10,null],[3,"NormalInput","","",null,null],[12,"type","","",11,null],[12,"input_index","","",11,null],[12,"children","","",11,null],[3,"VariableInput","","",null,null],[12,"type","","",12,null],[12,"placeholder","","",12,null],[12,"children","","",12,null],[3,"SelfInput","","",null,null],[12,"type","","",13,null],[12,"children","","",13,null],[4,"PredicateType","","",null,null],[13,"CompiledPredicate","","",14,null],[13,"IntermediateCompiledPredicate","","",14,null],[13,"AtomicProposition","","",14,null],[13,"AtomicPredicateCall","","",14,null],[13,"InputPredicateCall","","",14,null],[13,"VariablePredicateCall","","",14,null],[13,"CompiledPredicateCall","","",14,null],[13,"CompiledInput","","",14,null],[13,"ConstantInput","","",14,null],[13,"LabelInput","","",14,null],[13,"NormalInput","","",14,null],[13,"VariableInput","","",14,null],[13,"SelfInput","","",14,null],[4,"VarType","","",null,null],[13,"Address","","",15,null],[13,"Bytes","","",15,null],[4,"CallablePredicate","","",null,null],[13,"CompiledPredicate","","",16,null],[4,"AtomicPropositionOrPlaceholder","","",null,null],[13,"AtomicProposition","","",17,null],[13,"Placeholder","","",17,null],[4,"PredicateCall","","",null,null],[13,"AtomicPredicateCall","","",18,null],[13,"InputPredicateCall","","",18,null],[13,"VariablePredicateCall","","",18,null],[13,"CompiledPredicateCall","","",18,null],[4,"CompiledInput","","CompiledInput indicates which value to pass to…",null,null],[13,"ConstantInput","","",19,null],[13,"LabelInput","","",19,null],[13,"NormalInput","","",19,null],[13,"VariableInput","","",19,null],[13,"SelfInput","","",19,null],[4,"LogicalConnective","","LogicalConnective",null,null],[13,"And","","",20,null],[13,"ForAllSuchThat","","",20,null],[13,"Not","","",20,null],[13,"Or","","",20,null],[13,"ThereExistsSuchThat","","",20,null],[6,"Placeholder","","",null,null],[0,"executor","ovmi","",null,null],[8,"Hasher","ovmi::executor","Trait describing an object that can hash a slice of bytes.…",null,null],[16,"Out","","The output type of the `Hasher`",21,null],[16,"StdHasher","","What to use to build `HashMap`s with this `Hasher`.",21,null],[18,"LENGTH","","The length in bytes of the `Hasher` output.",21,null],[10,"hash","","Compute the hash of the provided slice of bytes returning…",21,[[]]],[3,"BaseAtomicExecutor","","",null,null],[3,"LogicalConnectiveExecutor","","",null,null],[3,"DecidableExecutor","","",null,null],[3,"CompiledExecutor","","",null,null],[4,"ExecError","","",null,null],[13,"Require","","",22,null],[12,"msg","ovmi::executor::ExecError","",22,null],[13,"CallMethod","ovmi::executor","",22,null],[12,"call_method","ovmi::executor::ExecError","",22,null],[12,"expected","","",22,null],[13,"CallAddress","ovmi::executor","",22,null],[12,"address","ovmi::executor::ExecError","",22,null],[13,"CodecError","ovmi::executor","",22,null],[12,"type_name","ovmi::executor::ExecError","",22,null],[13,"Unexpected","ovmi::executor","",22,null],[12,"msg","ovmi::executor::ExecError","",22,null],[13,"Unimplemented","ovmi::executor","",22,null],[6,"ExecResult","","",null,null],[6,"ExecResultT","","",null,null],[6,"AddressOf","","",null,null],[6,"HashOf","","",null,null],[6,"HashingOf","","",null,null],[6,"PropertyOf","","",null,null],[8,"MaybeAddress","","",null,null],[8,"MaybeHash","","",null,null],[8,"ExternalCall","","",null,null],[16,"Address","","",23,null],[16,"Hash","","",23,null],[16,"Hashing","","",23,null],[18,"NOT_ADDRESS","","",23,null],[18,"AND_ADDRESS","","",23,null],[18,"OR_ADDRESS","","",23,null],[18,"FOR_ALL_ADDRESS","","",23,null],[18,"THERE_EXISTS_ADDRESS","","",23,null],[18,"EQUAL_ADDRESS","","",23,null],[18,"IS_CONTAINED_ADDRESS","","",23,null],[18,"IS_LESS_ADDRESS","","",23,null],[18,"IS_STORED_ADDRESS","","",23,null],[18,"IS_VALID_SIGNATURE_ADDRESS","","",23,null],[18,"VERIFY_INCLUAION_ADDRESS","","",23,null],[11,"hash_of","","Produce the hash of some codec-encodable value.",23,[[["s"]]]],[10,"ext_call","","Call (other predicate) into the specified account.",23,[[["predicatecallinputs"],["self"]],["execresult"]]],[10,"ext_caller","","Returns a reference to the account id of the caller.",23,[[["self"]]]],[10,"ext_address","","Returns a reference to the account id of the current…",23,[[["self"]]]],[10,"ext_is_stored","","Notes a call other storage. Only return true or false.…",23,[[["self"]],["bool"]]],[10,"ext_verify_inclusion_with_root","","verifyInclusionWithRoot method verifies inclusion proof in…",23,[[["self"]],["bool"]]],[10,"ext_is_decided","","`is_decided` function of UniversalAdjudication in OVM…",23,[[["self"],["propertyof"]],["bool"]]],[10,"ext_get_property_id","","`get_property_id` function of UniversalAdjudication in OVM…",23,[[["self"],["propertyof"]]]],[10,"ext_set_predicate_decision","","`set_predicate_decision` function of UniversalAdjudication…",23,[[["bool"],["self"]],["execresult"]]],[11,"is_placeholder","","@dev check target is variable or not. A variable has…",23,[[["vec"]],["bool"]]],[11,"is_label","","@dev check target is label or not. A label has prefix L…",23,[[["vec"]],["bool"]]],[11,"sub_bytes","","sub_bytes of [start_idnex, end_idnex).",23,[[["u128"],["vec"]],[["vec",["u8"]],["u8"]]]],[11,"get_input_value","","sub_bytes of [1...).",23,[[["vec"]],[["vec",["u8"]],["u8"]]]],[11,"bytes_to_u128","","Decoded to u128",23,[[["vec"]],[["execresultt",["u128"]],["u128"]]]],[11,"bytes_to_range","","Decoded to range",23,[[["vec"]],[["execresultt",["range"]],["range"]]]],[11,"bytes_to_address","","Decoded to Address",23,[[["vec"]],["execresultt"]]],[8,"OvmExecutor","","",null,null],[16,"ExtCall","","",24,null],[10,"execute","","",24,[[["addressof"],["predicatecallinputs",["addressof"]],["p"]],[["execresult",["addressof"]],["addressof"]]]],[0,"predicates","ovmi","Executable Predicates. Executable Predicates instanced…",null,null],[3,"AndPredicate","ovmi::predicates","",null,null],[12,"ext","","",25,null],[3,"CompiledExecutable","","",null,null],[12,"ext","","",26,null],[12,"payout","","",26,null],[12,"code","","",26,null],[12,"constants","","",26,null],[12,"address_inputs","","",26,null],[12,"bytes_inputs","","",26,null],[3,"ForAllPredicate","","",null,null],[12,"ext","","",27,null],[3,"NotPredicate","","",null,null],[12,"ext","","",28,null],[3,"OrPredicate","","",null,null],[12,"ext","","",29,null],[3,"ThereExistsPredicate","","",null,null],[12,"ext","","",30,null],[3,"EqualPredicate","","",null,null],[12,"ext","","",31,null],[3,"IsContainedPredicate","","",null,null],[12,"ext","","",32,null],[3,"IsLessThanPredicate","","",null,null],[12,"ext","","",33,null],[3,"IsStoredPredicate","","",null,null],[12,"ext","","",34,null],[3,"IsValidSignaturePredicate","","",null,null],[12,"ext","","",35,null],[3,"VerifyInclusionPredicate","","",null,null],[12,"ext","","",36,null],[3,"Property","","Property stands for dispute logic and we can claim every…",null,null],[4,"LogicalConnectiveExecutable","","",null,null],[13,"And","","",37,null],[13,"Not","","",37,null],[13,"Or","","",37,null],[13,"ForAll","","",37,null],[13,"ThereExists","","",37,null],[4,"DecidableExecutable","","",null,null],[13,"And","","",38,null],[13,"Not","","",38,null],[13,"Or","","",38,null],[13,"ForAll","","",38,null],[13,"ThereExists","","",38,null],[13,"Equal","","",38,null],[13,"IsContained","","",38,null],[13,"IsLess","","",38,null],[13,"IsStored","","",38,null],[13,"IsValidSignature","","",38,null],[13,"VerifyInclusion","","",38,null],[4,"BaseAtomicExecutable","","",null,null],[13,"Equal","","",39,null],[13,"IsContained","","",39,null],[13,"IsLess","","",39,null],[13,"IsStored","","",39,null],[13,"IsValidSignature","","",39,null],[13,"VerifyInclusion","","",39,null],[4,"PredicateCallInputs","","",null,null],[13,"AtomicPredicate","","",40,null],[13,"DecidablePredicate","","",40,null],[13,"LogicalConnective","","",40,null],[13,"BaseAtomicPredicate","","",40,null],[13,"CompiledPredicate","","",40,null],[4,"AtomicPredicateCallInputs","","",null,null],[13,"DecideTrue","","",41,null],[12,"inputs","ovmi::predicates::AtomicPredicateCallInputs","",41,null],[13,"Decide","ovmi::predicates","",41,null],[12,"inputs","ovmi::predicates::AtomicPredicateCallInputs","",41,null],[4,"DecidablePredicateCallInputs","ovmi::predicates","",null,null],[13,"DecideWithWitness","","",42,null],[12,"inputs","ovmi::predicates::DecidablePredicateCallInputs","",42,null],[12,"witness","","",42,null],[4,"LogicalConnectiveCallInputs","ovmi::predicates","",null,null],[13,"IsValidChallenge","","",43,null],[12,"inputs","ovmi::predicates::LogicalConnectiveCallInputs","",43,null],[12,"challenge_inputs","","",43,null],[12,"challenge","","",43,null],[4,"BaseAtomicPredicateCallInputs","ovmi::predicates","",null,null],[13,"Decide","","",44,null],[12,"inputs","ovmi::predicates::BaseAtomicPredicateCallInputs","",44,null],[13,"DecideWithWitness","ovmi::predicates","",44,null],[12,"inputs","ovmi::predicates::BaseAtomicPredicateCallInputs","",44,null],[12,"witness","","",44,null],[13,"DecideTrue","ovmi::predicates","",44,null],[12,"inputs","ovmi::predicates::BaseAtomicPredicateCallInputs","",44,null],[4,"CompiledPredicateCallInputs","ovmi::predicates","",null,null],[13,"IsValidChallenge","","",45,null],[12,"inputs","ovmi::predicates::CompiledPredicateCallInputs","",45,null],[12,"challenge_inputs","","",45,null],[12,"challenge","","",45,null],[13,"Decide","ovmi::predicates","",45,null],[12,"inputs","ovmi::predicates::CompiledPredicateCallInputs","",45,null],[12,"witness","","",45,null],[13,"DecideTrue","ovmi::predicates","",45,null],[12,"inputs","ovmi::predicates::CompiledPredicateCallInputs","",45,null],[12,"witness","","",45,null],[13,"DecideWithWitness","ovmi::predicates","",45,null],[12,"inputs","ovmi::predicates::CompiledPredicateCallInputs","",45,null],[12,"witness","","",45,null],[8,"UniversalAdjudication","ovmi::predicates","",null,null],[10,"ext_set_predicate_decision","","",46,[[["hash"],["self"],["bool"]]]],[8,"Utils","","",null,null],[10,"ext_get_property_id","","",47,[[["self"]],["hash"]]],[8,"BaseAtomicPredicateInterface","","",null,null],[8,"AtomicPredicateInterface","","",null,null],[11,"decide","","",48,[[["vec",["u8"]],["self"],["vec",["vec"]]],["execresult"]]],[11,"decide_true","","",48,[[["vec",["u8"]],["self"],["vec",["vec"]]],["execresult"]]],[8,"AtomicHelperInterface","","",null,null],[16,"Hash","","",49,null],[10,"ext_address","","",49,[[["self"]],["address"]]],[10,"ext_set_predicate_decision","","",49,[[["self"],["bool"]],["execresult"]]],[10,"ext_get_property_id","","",49,[[["property"],["self"]]]],[8,"DecidablePredicateInterface","","",null,null],[10,"decide_with_witness","","",50,[[["vec",["vec"]],["vec",["u8"]],["self"]],["execresult"]]],[8,"CompiledPredicateInterface","","",null,null],[10,"payout_contract_address","","",51,[[["self"]],["address"]]],[10,"is_valid_challenge","","",51,[[["vec",["vec"]],["vec",["u8"]],["property"],["self"]],["execresult"]]],[10,"get_child","","@dev get valid child property of game tree with…",51,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresultt",["property"]],["property"]]]],[10,"decide","","",51,[[["vec",["vec"]],["vec",["u8"]],["self"]],["execresult"]]],[10,"decide_true","","",51,[[["vec",["vec"]],["vec",["u8"]],["self"]],["execresult"]]],[10,"decide_with_witness","","",51,[[["vec",["vec"]],["vec",["u8"]],["self"]],["execresult"]]],[8,"LogicalConnectiveInterface","","",null,null],[10,"is_valid_challenge","","",52,[[["vec",["vec"]],["vec",["u8"]],["property"],["self"]],["execresult"]]],[0,"prepare","ovmi","",null,null],[4,"Error","ovmi::prepare","",null,null],[13,"CodecError","","",53,null],[12,"err","ovmi::prepare::Error","",53,null],[13,"LogicError","ovmi::prepare","",53,null],[12,"type","ovmi::prepare::Error","",53,null],[4,"VarValue","ovmi::prepare","",null,null],[13,"Address","","",54,null],[13,"Bytes","","",54,null],[5,"compile_from_json","","",null,[[["str"]],[["result",["compiledpredicate","error"]],["error"],["compiledpredicate"]]]],[5,"validate","","",null,[[["vec",["u8"]],["u8"]],[["result",["error"]],["error"]]]],[5,"executable_from_compiled","","",null,[[["ext"],["addressof"],["btreemap",["hashof","vec"]],["btreemap",["hashof","addressof"]],["compiledpredicate"],["vec",["u8"]],["hashof"],["externalcall"]],[["compiledexecutable"],["externalcall"]]]],[5,"logical_connective_executable_from_address","","",null,[[["ext"],["addressof"]],[["option",["logicalconnectiveexecutable"]],["logicalconnectiveexecutable"]]]],[5,"deciable_executable_from_address","","",null,[[["ext"],["addressof"]],[["decidableexecutable"],["option",["decidableexecutable"]]]]],[5,"base_atomic_executable_from_address","","",null,[[["ext"],["addressof"]],[["baseatomicexecutable"],["option",["baseatomicexecutable"]]]]],[14,"require","ovmi","",null,null],[14,"require_with_message","","",null,null],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"size_hint","","",55,[[["self"]],["usize"]]],[11,"using_encoded","","",55,[[["self"],["f"]],["r"]]],[11,"encode","","",55,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",55,[[["w"],["self"]]]],[11,"decode","","",55,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",55,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",55,[[],[["error"],["result",["error"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"from","ovmi::compiled_predicates","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["error"],["result",["error"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"decode","","",2,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["error"],["result",["error"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",3,[[],[["error"],["result",["error"]]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"size_hint","","",4,[[["self"]],["usize"]]],[11,"using_encoded","","",4,[[["self"],["f"]],["r"]]],[11,"encode","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",4,[[["w"],["self"]]]],[11,"decode","","",4,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",4,[[],[["error"],["result",["error"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"size_hint","","",5,[[["self"]],["usize"]]],[11,"using_encoded","","",5,[[["self"],["f"]],["r"]]],[11,"encode","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",5,[[["w"],["self"]]]],[11,"decode","","",5,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",5,[[],[["error"],["result",["error"]]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"size_hint","","",6,[[["self"]],["usize"]]],[11,"using_encoded","","",6,[[["self"],["f"]],["r"]]],[11,"encode","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",6,[[["w"],["self"]]]],[11,"decode","","",6,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",6,[[],[["error"],["result",["error"]]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"size_hint","","",7,[[["self"]],["usize"]]],[11,"using_encoded","","",7,[[["self"],["f"]],["r"]]],[11,"encode","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",7,[[["w"],["self"]]]],[11,"decode","","",7,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",7,[[],[["error"],["result",["error"]]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"size_hint","","",8,[[["self"]],["usize"]]],[11,"using_encoded","","",8,[[["self"],["f"]],["r"]]],[11,"encode","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",8,[[["w"],["self"]]]],[11,"decode","","",8,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",8,[[],[["error"],["result",["error"]]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"size_hint","","",9,[[["self"]],["usize"]]],[11,"using_encoded","","",9,[[["self"],["f"]],["r"]]],[11,"encode","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",9,[[["w"],["self"]]]],[11,"decode","","",9,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",9,[[],[["error"],["result",["error"]]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"size_hint","","",10,[[["self"]],["usize"]]],[11,"using_encoded","","",10,[[["self"],["f"]],["r"]]],[11,"encode","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",10,[[["w"],["self"]]]],[11,"decode","","",10,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",10,[[],[["error"],["result",["error"]]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"size_hint","","",11,[[["self"]],["usize"]]],[11,"using_encoded","","",11,[[["self"],["f"]],["r"]]],[11,"encode","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",11,[[["w"],["self"]]]],[11,"decode","","",11,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",11,[[],[["error"],["result",["error"]]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"size_hint","","",12,[[["self"]],["usize"]]],[11,"using_encoded","","",12,[[["self"],["f"]],["r"]]],[11,"encode","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",12,[[["w"],["self"]]]],[11,"decode","","",12,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",12,[[],[["error"],["result",["error"]]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"size_hint","","",13,[[["self"]],["usize"]]],[11,"using_encoded","","",13,[[["self"],["f"]],["r"]]],[11,"encode","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",13,[[["w"],["self"]]]],[11,"decode","","",13,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",13,[[],[["error"],["result",["error"]]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"size_hint","","",14,[[["self"]],["usize"]]],[11,"using_encoded","","",14,[[["self"],["f"]],["r"]]],[11,"encode","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",14,[[["w"],["self"]]]],[11,"decode","","",14,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",14,[[],[["error"],["result",["error"]]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"size_hint","","",15,[[["self"]],["usize"]]],[11,"using_encoded","","",15,[[["self"],["f"]],["r"]]],[11,"encode","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",15,[[["w"],["self"]]]],[11,"decode","","",15,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",15,[[],[["error"],["result",["error"]]]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"size_hint","","",17,[[["self"]],["usize"]]],[11,"using_encoded","","",17,[[["self"],["f"]],["r"]]],[11,"encode","","",17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",17,[[["w"],["self"]]]],[11,"decode","","",17,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",17,[[],[["error"],["result",["error"]]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"size_hint","","",18,[[["self"]],["usize"]]],[11,"using_encoded","","",18,[[["self"],["f"]],["r"]]],[11,"encode","","",18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",18,[[["w"],["self"]]]],[11,"decode","","",18,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",18,[[],[["error"],["result",["error"]]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"size_hint","","",19,[[["self"]],["usize"]]],[11,"using_encoded","","",19,[[["self"],["f"]],["r"]]],[11,"encode","","",19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",19,[[["w"],["self"]]]],[11,"decode","","",19,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",19,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",19,[[],[["error"],["result",["error"]]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"size_hint","","",20,[[["self"]],["usize"]]],[11,"using_encoded","","",20,[[["self"],["f"]],["r"]]],[11,"encode","","",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",20,[[["w"],["self"]]]],[11,"decode","","",20,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",20,[[],[["error"],["result",["error"]]]]],[11,"from","ovmi::executor","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"as_error_source","","",22,[[["self"]],["error"]]],[11,"from","ovmi::predicates","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"size_hint","","",60,[[["self"]],["usize"]]],[11,"using_encoded","","",60,[[["self"],["f"]],["r"]]],[11,"encode","","",60,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",60,[[["w"],["self"]]]],[11,"decode","","",60,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",60,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",60,[[],[["error"],["result",["error"]]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"size_hint","","",40,[[["self"]],["usize"]]],[11,"using_encoded","","",40,[[["self"],["f"]],["r"]]],[11,"encode","","",40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",40,[[["w"],["self"]]]],[11,"decode","","",40,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",40,[[],[["error"],["result",["error"]]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"to_string","","",41,[[["self"]],["string"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"size_hint","","",41,[[["self"]],["usize"]]],[11,"using_encoded","","",41,[[["self"],["f"]],["r"]]],[11,"encode","","",41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",41,[[["w"],["self"]]]],[11,"decode","","",41,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",41,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",41,[[],[["error"],["result",["error"]]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"size_hint","","",42,[[["self"]],["usize"]]],[11,"using_encoded","","",42,[[["self"],["f"]],["r"]]],[11,"encode","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",42,[[["w"],["self"]]]],[11,"decode","","",42,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",42,[[],[["error"],["result",["error"]]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"size_hint","","",43,[[["self"]],["usize"]]],[11,"using_encoded","","",43,[[["self"],["f"]],["r"]]],[11,"encode","","",43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",43,[[["w"],["self"]]]],[11,"decode","","",43,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",43,[[],[["error"],["result",["error"]]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"to_string","","",44,[[["self"]],["string"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"size_hint","","",44,[[["self"]],["usize"]]],[11,"using_encoded","","",44,[[["self"],["f"]],["r"]]],[11,"encode","","",44,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",44,[[["w"],["self"]]]],[11,"decode","","",44,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",44,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",44,[[],[["error"],["result",["error"]]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"to_string","","",45,[[["self"]],["string"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"size_hint","","",45,[[["self"]],["usize"]]],[11,"using_encoded","","",45,[[["self"],["f"]],["r"]]],[11,"encode","","",45,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",45,[[["w"],["self"]]]],[11,"decode","","",45,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",45,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",45,[[],[["error"],["result",["error"]]]]],[11,"from","ovmi::prepare","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"as_error_source","","",53,[[["self"]],["error"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"size_hint","","",54,[[["self"]],["usize"]]],[11,"using_encoded","","",54,[[["self"],["f"]],["r"]]],[11,"encode","","",54,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",54,[[["w"],["self"]]]],[11,"decode","","",54,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",54,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",54,[[],[["error"],["result",["error"]]]]],[11,"execute","ovmi::executor","",56,[[["predicatecallinputs",["addressof"]],["addressof"],["p"]],[["execresult",["addressof"]],["addressof"]]]],[11,"execute","","",57,[[["predicatecallinputs",["addressof"]],["addressof"],["p"]],[["execresult",["addressof"]],["addressof"]]]],[11,"execute","","",58,[[["predicatecallinputs",["addressof"]],["addressof"],["p"]],[["execresult",["addressof"]],["addressof"]]]],[11,"execute","","",59,[[["predicatecallinputs",["addressof"]],["addressof"],["p"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide","ovmi::predicates","",31,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide","","",32,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide","","",33,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide","","",34,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide","","",35,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide","","",36,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide","","",39,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_true","","",39,[[["vec",["u8"]],["self"],["vec",["vec"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_address","","",31,[[["self"]],["addressof"]]],[11,"ext_set_predicate_decision","","",31,[[["self"],["bool"]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_get_property_id","","",31,[[["self"],["property"]]]],[11,"ext_address","","",32,[[["self"]],["addressof"]]],[11,"ext_set_predicate_decision","","",32,[[["self"],["bool"]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_get_property_id","","",32,[[["self"],["property"]]]],[11,"ext_address","","",33,[[["self"]],["addressof"]]],[11,"ext_set_predicate_decision","","",33,[[["self"],["bool"]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_get_property_id","","",33,[[["self"],["property"]]]],[11,"ext_address","","",34,[[["self"]],["addressof"]]],[11,"ext_set_predicate_decision","","",34,[[["self"],["bool"]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_get_property_id","","",34,[[["self"],["property"]]]],[11,"ext_address","","",35,[[["self"]],["addressof"]]],[11,"ext_set_predicate_decision","","",35,[[["self"],["bool"]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_get_property_id","","",35,[[["self"],["property"]]]],[11,"ext_address","","",36,[[["self"]],["addressof"]]],[11,"ext_set_predicate_decision","","",36,[[["self"],["bool"]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_get_property_id","","",36,[[["self"],["property"]]]],[11,"ext_address","","",39,[[["self"]],["addressof"]]],[11,"ext_set_predicate_decision","","",39,[[["self"],["bool"]],[["execresult",["addressof"]],["addressof"]]]],[11,"ext_get_property_id","","",39,[[["self"],["property"]]]],[11,"decide_with_witness","","@dev Can decide true when all child properties are decided…",25,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","@dev Can decide true when all child properties are decided…",27,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","@dev Decides true",28,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","@dev Can decide true when all child properties are decided…",29,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","@dev Can decide true when all child properties are decided…",30,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",31,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",32,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",33,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",34,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",35,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",36,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",38,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",39,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"payout_contract_address","","",26,[[["self"]],["addressof"]]],[11,"is_valid_challenge","","",26,[[["addressof"],["vec",["vec"]],["vec",["u8"]],["self"],["property",["addressof"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"get_child","","@dev get valid child property of game tree with…",26,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["property",["addressof"]],["addressof"],["execresultt",["property","addressof"]]]]],[11,"decide","","",26,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_true","","",26,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"decide_with_witness","","",26,[[["vec",["vec"]],["vec",["u8"]],["self"]],[["execresult",["addressof"]],["addressof"]]]],[11,"is_valid_challenge","","@dev Validates a child node of And property in game tree.",25,[[["addressof"],["vec",["vec"]],["vec",["u8"]],["self"],["property",["addressof"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"is_valid_challenge","","@dev Validates a child node of ForAll property in game tree.",27,[[["addressof"],["vec",["vec"]],["vec",["u8"]],["self"],["property",["addressof"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"is_valid_challenge","","@dev Validates a child node of Not property in game tree.",28,[[["addressof"],["vec",["vec"]],["vec",["u8"]],["self"],["property",["addressof"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"is_valid_challenge","","@dev Validates a child node of Or property in game tree.",29,[[["addressof"],["vec",["vec"]],["vec",["u8"]],["self"],["property",["addressof"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"is_valid_challenge","","@dev Validates a child node of ThereExists property in…",30,[[["addressof"],["vec",["vec"]],["vec",["u8"]],["self"],["property",["addressof"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"is_valid_challenge","","",37,[[["addressof"],["vec",["vec"]],["vec",["u8"]],["self"],["property",["addressof"]]],[["execresult",["addressof"]],["addressof"]]]],[11,"clone","ovmi::compiled_predicates","",14,[[["self"]],["predicatetype"]]],[11,"clone","","",15,[[["self"]],["vartype"]]],[11,"clone","","",1,[[["self"]],["compiledpredicate"]]],[11,"clone","","",2,[[["self"]],["constantvariable"]]],[11,"clone","","",3,[[["self"]],["intermediatecompiledpredicate"]]],[11,"clone","","",17,[[["self"]],["atomicpropositionorplaceholder"]]],[11,"clone","","",4,[[["self"]],["atomicproposition"]]],[11,"clone","","",18,[[["self"]],["predicatecall"]]],[11,"clone","","",5,[[["self"]],["atomicpredicatecall"]]],[11,"clone","","",6,[[["self"]],["inputpredicatecall"]]],[11,"clone","","",7,[[["self"]],["variablepredicatecall"]]],[11,"clone","","",8,[[["self"]],["compiledpredicatecall"]]],[11,"clone","","",19,[[["self"]],["compiledinput"]]],[11,"clone","","",9,[[["self"]],["constantinput"]]],[11,"clone","","",10,[[["self"]],["labelinput"]]],[11,"clone","","",11,[[["self"]],["normalinput"]]],[11,"clone","","",12,[[["self"]],["variableinput"]]],[11,"clone","","",13,[[["self"]],["selfinput"]]],[11,"clone","","",20,[[["self"]],["logicalconnective"]]],[11,"clone","ovmi::predicates","",40,[[["self"]],["predicatecallinputs"]]],[11,"clone","","",41,[[["self"]],["atomicpredicatecallinputs"]]],[11,"clone","","",42,[[["self"]],["decidablepredicatecallinputs"]]],[11,"clone","","",43,[[["self"]],["logicalconnectivecallinputs"]]],[11,"clone","","",44,[[["self"]],["baseatomicpredicatecallinputs"]]],[11,"clone","","",45,[[["self"]],["compiledpredicatecallinputs"]]],[11,"clone","","",60,[[["self"]],["property"]]],[11,"clone","ovmi::prepare","",54,[[["self"]],["varvalue"]]],[11,"clone","ovmi","",55,[[["self"]],["accountid"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"default","","",55,[[],["accountid"]]],[11,"default","","",0,[[],["range"]]],[11,"cmp","","",55,[[["accountid"],["self"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["range"]],["ordering"]]],[11,"eq","ovmi::compiled_predicates","",14,[[["self"],["predicatetype"]],["bool"]]],[11,"eq","","",15,[[["vartype"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["compiledpredicate"]],["bool"]]],[11,"ne","","",1,[[["self"],["compiledpredicate"]],["bool"]]],[11,"eq","","",2,[[["constantvariable"],["self"]],["bool"]]],[11,"ne","","",2,[[["constantvariable"],["self"]],["bool"]]],[11,"eq","","",3,[[["intermediatecompiledpredicate"],["self"]],["bool"]]],[11,"ne","","",3,[[["intermediatecompiledpredicate"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["atomicpropositionorplaceholder"]],["bool"]]],[11,"ne","","",17,[[["self"],["atomicpropositionorplaceholder"]],["bool"]]],[11,"eq","","",4,[[["self"],["atomicproposition"]],["bool"]]],[11,"ne","","",4,[[["self"],["atomicproposition"]],["bool"]]],[11,"eq","","",18,[[["predicatecall"],["self"]],["bool"]]],[11,"ne","","",18,[[["predicatecall"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["atomicpredicatecall"]],["bool"]]],[11,"ne","","",5,[[["self"],["atomicpredicatecall"]],["bool"]]],[11,"eq","","",6,[[["inputpredicatecall"],["self"]],["bool"]]],[11,"ne","","",6,[[["inputpredicatecall"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["variablepredicatecall"]],["bool"]]],[11,"ne","","",7,[[["self"],["variablepredicatecall"]],["bool"]]],[11,"eq","","",8,[[["self"],["compiledpredicatecall"]],["bool"]]],[11,"ne","","",8,[[["self"],["compiledpredicatecall"]],["bool"]]],[11,"eq","","",19,[[["compiledinput"],["self"]],["bool"]]],[11,"ne","","",19,[[["compiledinput"],["self"]],["bool"]]],[11,"eq","","",9,[[["constantinput"],["self"]],["bool"]]],[11,"ne","","",9,[[["constantinput"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["labelinput"]],["bool"]]],[11,"ne","","",10,[[["self"],["labelinput"]],["bool"]]],[11,"eq","","",11,[[["normalinput"],["self"]],["bool"]]],[11,"ne","","",11,[[["normalinput"],["self"]],["bool"]]],[11,"eq","","",12,[[["variableinput"],["self"]],["bool"]]],[11,"ne","","",12,[[["variableinput"],["self"]],["bool"]]],[11,"eq","","",13,[[["selfinput"],["self"]],["bool"]]],[11,"ne","","",13,[[["selfinput"],["self"]],["bool"]]],[11,"eq","","",20,[[["logicalconnective"],["self"]],["bool"]]],[11,"eq","ovmi::executor","",22,[[["self"],["execerror"]],["bool"]]],[11,"ne","","",22,[[["self"],["execerror"]],["bool"]]],[11,"eq","ovmi::predicates","",40,[[["predicatecallinputs"],["self"]],["bool"]]],[11,"ne","","",40,[[["predicatecallinputs"],["self"]],["bool"]]],[11,"eq","","",41,[[["self"],["atomicpredicatecallinputs"]],["bool"]]],[11,"ne","","",41,[[["self"],["atomicpredicatecallinputs"]],["bool"]]],[11,"eq","","",42,[[["self"],["decidablepredicatecallinputs"]],["bool"]]],[11,"ne","","",42,[[["self"],["decidablepredicatecallinputs"]],["bool"]]],[11,"eq","","",43,[[["self"],["logicalconnectivecallinputs"]],["bool"]]],[11,"ne","","",43,[[["self"],["logicalconnectivecallinputs"]],["bool"]]],[11,"eq","","",44,[[["baseatomicpredicatecallinputs"],["self"]],["bool"]]],[11,"ne","","",44,[[["baseatomicpredicatecallinputs"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["compiledpredicatecallinputs"]],["bool"]]],[11,"ne","","",45,[[["self"],["compiledpredicatecallinputs"]],["bool"]]],[11,"eq","","",60,[[["property"],["self"]],["bool"]]],[11,"ne","","",60,[[["property"],["self"]],["bool"]]],[11,"eq","ovmi::prepare","",54,[[["varvalue"],["self"]],["bool"]]],[11,"ne","","",54,[[["varvalue"],["self"]],["bool"]]],[11,"eq","ovmi","",55,[[["accountid"],["self"]],["bool"]]],[11,"ne","","",55,[[["accountid"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["range"]],["bool"]]],[11,"ne","","",0,[[["self"],["range"]],["bool"]]],[11,"partial_cmp","","",55,[[["accountid"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",55,[[["accountid"],["self"]],["bool"]]],[11,"le","","",55,[[["accountid"],["self"]],["bool"]]],[11,"gt","","",55,[[["accountid"],["self"]],["bool"]]],[11,"ge","","",55,[[["accountid"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["range"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["range"]],["bool"]]],[11,"le","","",0,[[["self"],["range"]],["bool"]]],[11,"gt","","",0,[[["self"],["range"]],["bool"]]],[11,"ge","","",0,[[["self"],["range"]],["bool"]]],[11,"fmt","ovmi::compiled_predicates","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","ovmi::executor","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","ovmi::predicates","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","ovmi::prepare","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","ovmi::compiled_predicates","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","ovmi::executor","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","ovmi::predicates","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","ovmi::prepare","",53,[[["self"],["formatter"]],["result"]]],[11,"hash","ovmi::compiled_predicates","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","ovmi::predicates","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","ovmi::prepare","",54,[[["self"],["__h"]]]],[11,"hash","ovmi","",55,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"description","ovmi::executor","",22,[[["self"]],["str"]]],[11,"cause","","",22,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","","",22,[[["self"]],[["error"],["option",["error"]]]]],[11,"description","ovmi::prepare","",53,[[["self"]],["str"]]],[11,"cause","","",53,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","","",53,[[["self"]],[["error"],["option",["error"]]]]],[11,"encode_to","ovmi::compiled_predicates","",14,[[["self"],["encout"]]]],[11,"encode_to","","",15,[[["self"],["encout"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",2,[[["self"],["encout"]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"encode_to","","",17,[[["self"],["encout"]]]],[11,"encode_to","","",4,[[["self"],["encout"]]]],[11,"encode_to","","",18,[[["self"],["encout"]]]],[11,"encode_to","","",5,[[["self"],["encout"]]]],[11,"encode_to","","",6,[[["self"],["encout"]]]],[11,"encode_to","","",7,[[["self"],["encout"]]]],[11,"encode","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"using_encoded","","",7,[[["fnonce"],["self"]],["r"]]],[11,"encode_to","","",8,[[["self"],["encout"]]]],[11,"encode_to","","",19,[[["self"],["encout"]]]],[11,"encode_to","","",9,[[["self"],["encout"]]]],[11,"encode_to","","",10,[[["self"],["encout"]]]],[11,"encode_to","","",11,[[["self"],["encout"]]]],[11,"encode_to","","",12,[[["self"],["encout"]]]],[11,"encode_to","","",13,[[["self"],["encout"]]]],[11,"encode_to","","",20,[[["self"],["encout"]]]],[11,"encode_to","ovmi::predicates","",40,[[["self"],["encout"]]]],[11,"encode_to","","",41,[[["self"],["encout"]]]],[11,"encode_to","","",42,[[["self"],["encout"]]]],[11,"encode_to","","",43,[[["self"],["encout"]]]],[11,"encode_to","","",44,[[["self"],["encout"]]]],[11,"encode_to","","",45,[[["self"],["encout"]]]],[11,"encode_to","","",60,[[["self"],["encout"]]]],[11,"encode_to","ovmi::prepare","",54,[[["self"],["encout"]]]],[11,"encode_to","ovmi","",55,[[["self"],["encout"]]]],[11,"encode","","",55,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"using_encoded","","",55,[[["fnonce"],["self"]],["r"]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"decode","ovmi::compiled_predicates","",14,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",15,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",17,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",4,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",18,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",5,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",6,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",7,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",8,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",19,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",9,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",10,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",11,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",12,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",13,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",20,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","ovmi::predicates","",40,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",41,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",42,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",43,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",44,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",45,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",60,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","ovmi::prepare","",54,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","ovmi","",55,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",0,[[["decin"]],[["error"],["result",["error"]]]]],[11,"serialize","ovmi::compiled_predicates","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","ovmi::predicates","",40,[[["self"],["__s"]],["result"]]],[11,"serialize","","",41,[[["self"],["__s"]],["result"]]],[11,"serialize","","",42,[[["self"],["__s"]],["result"]]],[11,"serialize","","",43,[[["self"],["__s"]],["result"]]],[11,"serialize","","",44,[[["self"],["__s"]],["result"]]],[11,"serialize","","",45,[[["self"],["__s"]],["result"]]],[11,"serialize","","",60,[[["self"],["__s"]],["result"]]],[11,"deserialize","ovmi::compiled_predicates","",14,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","ovmi::predicates","",40,[[["__d"]],["result"]]],[11,"deserialize","","",41,[[["__d"]],["result"]]],[11,"deserialize","","",42,[[["__d"]],["result"]]],[11,"deserialize","","",43,[[["__d"]],["result"]]],[11,"deserialize","","",44,[[["__d"]],["result"]]],[11,"deserialize","","",45,[[["__d"]],["result"]]],[11,"deserialize","","",60,[[["__d"]],["result"]]],[11,"backtrace","ovmi::executor","",22,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"backtrace","ovmi::prepare","",53,[[["self"]],[["backtrace"],["option",["backtrace"]]]]]],"p":[[3,"Range"],[3,"CompiledPredicate"],[3,"ConstantVariable"],[3,"IntermediateCompiledPredicate"],[3,"AtomicProposition"],[3,"AtomicPredicateCall"],[3,"InputPredicateCall"],[3,"VariablePredicateCall"],[3,"CompiledPredicateCall"],[3,"ConstantInput"],[3,"LabelInput"],[3,"NormalInput"],[3,"VariableInput"],[3,"SelfInput"],[4,"PredicateType"],[4,"VarType"],[4,"CallablePredicate"],[4,"AtomicPropositionOrPlaceholder"],[4,"PredicateCall"],[4,"CompiledInput"],[4,"LogicalConnective"],[8,"Hasher"],[4,"ExecError"],[8,"ExternalCall"],[8,"OvmExecutor"],[3,"AndPredicate"],[3,"CompiledExecutable"],[3,"ForAllPredicate"],[3,"NotPredicate"],[3,"OrPredicate"],[3,"ThereExistsPredicate"],[3,"EqualPredicate"],[3,"IsContainedPredicate"],[3,"IsLessThanPredicate"],[3,"IsStoredPredicate"],[3,"IsValidSignaturePredicate"],[3,"VerifyInclusionPredicate"],[4,"LogicalConnectiveExecutable"],[4,"DecidableExecutable"],[4,"BaseAtomicExecutable"],[4,"PredicateCallInputs"],[4,"AtomicPredicateCallInputs"],[4,"DecidablePredicateCallInputs"],[4,"LogicalConnectiveCallInputs"],[4,"BaseAtomicPredicateCallInputs"],[4,"CompiledPredicateCallInputs"],[8,"UniversalAdjudication"],[8,"Utils"],[8,"AtomicPredicateInterface"],[8,"AtomicHelperInterface"],[8,"DecidablePredicateInterface"],[8,"CompiledPredicateInterface"],[8,"LogicalConnectiveInterface"],[4,"Error"],[4,"VarValue"],[3,"AccountId"],[3,"BaseAtomicExecutor"],[3,"LogicalConnectiveExecutor"],[3,"DecidableExecutor"],[3,"CompiledExecutor"],[3,"Property"]]};
searchIndex["ovmi_cli"] = {"doc":"","i":[[5,"main","ovmi_cli","",null,[[]]]],"p":[]};
searchIndex["pallet_contract_operator"] = {"doc":"","i":[[3,"OperatorHasContracts","pallet_contract_operator","A mapping from operators to operated contracts by them.",null,null],[3,"ContractHasOperator","","A mapping from operated contract by operator to it.",null,null],[3,"ContractParameters","","A mapping from contract to it's parameters.",null,null],[3,"Module","","",null,null],[4,"Call","","Dispatchable calls.",null,null],[13,"instantiate","","Deploys a contact and insert relation of a contract and an…",0,null],[13,"update_parameters","","Updates parameters for an identified contact. TODO: weight",0,null],[13,"change_operator","","Changes an operator for identified contracts. TODO: weight",0,null],[4,"RawEvent","","Events for this module.",null,null],[13,"SetOperator","","When operator changed, it is issued that 1-st Operator…",1,null],[13,"SetParameters","","When contract's parameters changed, it is issued that 1-st…",1,null],[0,"parameters","","",null,null],[3,"DefaultParameters","pallet_contract_operator::parameters","",null,null],[12,"can_be_nominated","","",2,null],[12,"option_expired","","",2,null],[12,"option_p","","",2,null],[8,"Verifiable","","",null,null],[10,"verify","","",3,[[["self"]],[["result",["dispatcherror"]],["dispatcherror"]]]],[6,"Event","pallet_contract_operator","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"ContractFinder","","",null,null],[10,"is_exists_contract","","",4,[[["accountid"]],["bool"]]],[10,"operator","","",4,[[["accountid"]],["option"]]],[10,"parameters","","",4,[[["accountid"]],["option"]]],[8,"OperatorFinder","","",null,null],[10,"contracts","","",5,[[["accountid"]],["vec"]]],[8,"TransferOperator","","",null,null],[11,"transfer_operator","","Changes an operator for identified contracts with verify.",6,[[["vec"],["accountid"]],[["result",["dispatcherror"]],["dispatcherror"]]]],[11,"verify_transfer_operator","","",6,[[["accountid"],["vec"]],[["result",["dispatcherror"]],["dispatcherror"]]]],[10,"force_transfer_operator","","Force Changes an operator for identified contracts without…",6,[[["vec"],["accountid"]]]],[8,"Trait","","The module's configuration trait.",null,null],[16,"Parameters","","",7,null],[16,"Event","","The overarching event type.",7,null],[11,"operator_has_contracts","","A mapping from operators to operated contracts by them.",8,[[["encodelike"]],["vec"]]],[11,"contract_has_operator","","A mapping from operated contract by operator to it.",8,[[["encodelike"]],["option"]]],[11,"contract_parameters","","A mapping from contract to it's parameters.",8,[[["encodelike"]],["option"]]],[11,"instantiate","","Deploys a contact and insert relation of a contract and an…",8,[[["codehash"],["balanceof"],["gas"],["vec",["u8"]],["u8"]],["dispatchresult"]]],[11,"update_parameters","","Updates parameters for an identified contact. TODO: weight",8,[[],["dispatchresult"]]],[11,"change_operator","","Changes an operator for identified contracts. TODO: weight",8,[[["vec"]],["dispatchresult"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",9,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",9,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",9,[[["keyarg"]],["bool"]]],[11,"get","","",9,[[["keyarg"]]]],[11,"insert","","",9,[[["valarg"],["keyarg"]]]],[11,"remove","","",9,[[["keyarg"]]]],[11,"mutate","","",9,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",9,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",9,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",9,[[["f"],["keyarg"]],["result"]]],[11,"take","","",9,[[["keyarg"]]]],[11,"append","","",9,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",9,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",9,[[]]],[11,"drain","","Enumerate all elements in the map.",9,[[]]],[11,"translate","","",9,[[["f"]]]],[11,"unchecked_into","","",9,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",9,[[],["t"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",10,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",10,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",10,[[["keyarg"]],["bool"]]],[11,"get","","",10,[[["keyarg"]]]],[11,"insert","","",10,[[["valarg"],["keyarg"]]]],[11,"remove","","",10,[[["keyarg"]]]],[11,"mutate","","",10,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",10,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",10,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",10,[[["f"],["keyarg"]],["result"]]],[11,"take","","",10,[[["keyarg"]]]],[11,"append","","",10,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",10,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",10,[[]]],[11,"drain","","Enumerate all elements in the map.",10,[[]]],[11,"translate","","",10,[[["f"]]]],[11,"unchecked_into","","",10,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",10,[[],["t"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",11,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",11,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",11,[[["keyarg"]],["bool"]]],[11,"get","","",11,[[["keyarg"]]]],[11,"insert","","",11,[[["valarg"],["keyarg"]]]],[11,"remove","","",11,[[["keyarg"]]]],[11,"mutate","","",11,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",11,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",11,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",11,[[["f"],["keyarg"]],["result"]]],[11,"take","","",11,[[["keyarg"]]]],[11,"append","","",11,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",11,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",11,[[]]],[11,"drain","","Enumerate all elements in the map.",11,[[]]],[11,"translate","","",11,[[["f"]]]],[11,"unchecked_into","","",11,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",11,[[],["t"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"unchecked_into","","",8,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",8,[[],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"decode","","",0,[[["i"]],[["result",["error"]],["error"]]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["result",["error"]],["error"]]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"decode","","",1,[[["i"]],[["result",["error"]],["error"]]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["result",["error"]],["error"]]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","pallet_contract_operator::parameters","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"decode","","",2,[[["i"]],[["result",["error"]],["error"]]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",2,[[["self"]],["bool"]]],[11,"clear","","",2,[[],["t"]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"verify","","",2,[[["self"]],[["result",["dispatcherror"]],["dispatcherror"]]]],[11,"is_exists_contract","pallet_contract_operator","",8,[[],["bool"]]],[11,"operator","","",8,[[],["option"]]],[11,"parameters","","",8,[[],["option"]]],[11,"contracts","","",8,[[],["vec"]]],[11,"force_transfer_operator","","Force Changes an operator for identified contracts without…",8,[[["vec"]]]],[11,"clone","pallet_contract_operator::parameters","",2,[[["self"]],["defaultparameters"]]],[11,"clone","pallet_contract_operator","",8,[[["self"]],["module"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["rawevent"]]],[11,"default","pallet_contract_operator::parameters","",2,[[],["defaultparameters"]]],[11,"eq","","",2,[[["defaultparameters"],["self"]],["bool"]]],[11,"ne","","",2,[[["defaultparameters"],["self"]],["bool"]]],[11,"eq","pallet_contract_operator","",8,[[["self"],["module"]],["bool"]]],[11,"ne","","",8,[[["self"],["module"]],["bool"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["rawevent"]],["bool"]]],[11,"ne","","",1,[[["self"],["rawevent"]],["bool"]]],[11,"fmt","pallet_contract_operator::parameters","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","pallet_contract_operator","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","pallet_contract_operator::parameters","",2,[[["formatter"],["self"]],["result"]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","pallet_contract_operator","",0,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["error"]]]]],[11,"encode_to","pallet_contract_operator::parameters","",2,[[["self"],["encout"]]]],[11,"encode_to","pallet_contract_operator","",0,[[["self"],["encout"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"metadata","","",8,[[]]],[11,"get_dispatch_info","","",0,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",0,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",0,[[["self"]],["str"]]],[11,"get_call_names","","",0,[[]]],[11,"module_prefix","","",9,[[]]],[11,"storage_prefix","","",9,[[]]],[11,"from_optional_value_to_query","","",9,[[["option",["vec"]],["vec"]]]],[11,"from_query_to_optional_value","","",9,[[],[["option",["vec"]],["vec"]]]],[11,"module_prefix","","",10,[[]]],[11,"storage_prefix","","",10,[[]]],[11,"from_optional_value_to_query","","",10,[[["option"]]]],[11,"from_query_to_optional_value","","",10,[[],["option"]]],[11,"module_prefix","","",11,[[]]],[11,"storage_prefix","","",11,[[]]],[11,"from_optional_value_to_query","","",11,[[["option"]]]],[11,"from_query_to_optional_value","","",11,[[],["option"]]],[11,"module_prefix","","",9,[[]]],[11,"storage_prefix","","",9,[[]]],[11,"module_prefix","","",10,[[]]],[11,"storage_prefix","","",10,[[]]],[11,"module_prefix","","",11,[[]]],[11,"storage_prefix","","",11,[[]]],[11,"serialize","pallet_contract_operator::parameters","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]]],"p":[[4,"Call"],[4,"RawEvent"],[3,"DefaultParameters"],[8,"Verifiable"],[8,"ContractFinder"],[8,"OperatorFinder"],[8,"TransferOperator"],[8,"Trait"],[3,"Module"],[3,"OperatorHasContracts"],[3,"ContractHasOperator"],[3,"ContractParameters"]]};
searchIndex["pallet_dapps_staking"] = {"doc":"Plasm Staking Module","i":[[4,"Forcing","pallet_dapps_staking","Mode of era-forcing.",null,null],[13,"NotForcing","","Not forcing anything - just let whatever happen.",0,null],[13,"ForceNew","","Force a new era, then reset to `NotForcing` as soon as it…",0,null],[13,"ForceNone","","Avoid a new era indefinitely.",0,null],[13,"ForceAlways","","Force a new era at the end of all sessions indefinitely.",0,null],[4,"RewardDestination","","A destination account for payment.",null,null],[13,"Staked","","Pay into the stash account, increasing the amount at stake…",1,null],[13,"Stash","","Pay into the stash account, not increasing the amount at…",1,null],[13,"Controller","","Pay into the controller account.",1,null],[6,"SessionIndex","","Simple index type with which we can count sessions.",null,null],[3,"Nominations","","A record of the nominations made by a specific account.",null,null],[12,"targets","","The targets of nomination and amounts of staking.",2,null],[12,"submitted_in","","The era the nominations were submitted.",2,null],[12,"suppressed","","Whether the nominations have been suppressed.",2,null],[3,"EraStakingPoints","","Reward points of an era. Used to split era total payout…",null,null],[3,"UnlockChunk","","Just a Balance/BlockNumber tuple to encode when a chunk of…",null,null],[3,"StakingLedger","","The ledger of a (bonded) stash.",null,null],[12,"stash","","The stash account whose balance is actually locke,ed and…",3,null],[12,"total","","The total amount of the stash's balance that we are…",3,null],[12,"active","","The total amount of the stash's balance that will be at…",3,null],[12,"unlocking","","Any balance that is becoming free, which may eventually be…",3,null],[12,"last_reward","","The latest and highest era which the staker has claimed…",3,null],[3,"GenesisConfig","","Genesis config for the module, allow to build genesis…",null,null],[3,"UntreatedEra","","The already untreated era is EraIndex.",null,null],[3,"NominatorsUntreatedEra","","",null,null],[3,"OperatorsUntreatedEra","","",null,null],[3,"Bonded","","Map from all locked \"stash\" accounts to the controller…",null,null],[3,"Ledger","","Map from all (unlocked) \"controller\" accounts to the info…",null,null],[3,"Payee","","Where the reward payment should be made. Keyed by stash.",null,null],[3,"ErasContractsParameters","","Similarly to `ErasStakers` this holds the parameters of…",null,null],[3,"ErasStakingPoints","","Rewards of stakers for contracts(called by \"Dapps…",null,null],[3,"ErasTotalStake","","The total amount staked for the last `HISTORY_DEPTH` eras.…",null,null],[3,"Module","","",null,null],[4,"RawEvent","","Events for this module.",null,null],[13,"Reward","","The amount of minted rewards. (for dapps with nominators)",4,null],[13,"Bonded","","An account has bonded this amount.",4,null],[13,"Unbonded","","An account has unbonded this amount.",4,null],[13,"Withdrawn","","An account has called `withdraw_unbonded` and removed…",4,null],[13,"TotalDappsRewards","","The total amount of minted rewards for dapps.",4,null],[13,"Nominate","","Nominate of stash address.",4,null],[4,"Error","","Error for the staking module.",null,null],[13,"NotController","","Not a controller account.",5,null],[13,"NotStash","","Not a stash account.",5,null],[13,"AlreadyBonded","","Stash is already bonded.",5,null],[13,"AlreadyPaired","","Controller is already paired.",5,null],[13,"EmptyTargets","","Targets cannot be empty.",5,null],[13,"DuplicateIndex","","Duplicate index.",5,null],[13,"InvalidSlashIndex","","Slash record index out of bounds.",5,null],[13,"InsufficientValue","","Can not bond with value less than minimum balance.",5,null],[13,"NoMoreChunks","","Can not schedule more unlock chunks.",5,null],[13,"NoUnlockChunk","","Can not rebond without unlocking chunks.",5,null],[13,"FundedTarget","","Attempting to target a stash that still has funds.",5,null],[13,"InvalidEraToReward","","Invalid era to reward.",5,null],[13,"InvalidNumberOfNominations","","Invalid number of nominations.",5,null],[13,"NotSortedAndUnique","","Items are not sorted and unique.",5,null],[13,"EmptyNominateTargets","","Targets must be latest 1.",5,null],[13,"NotOperatedContracts","","Targets must be operated contracts",5,null],[13,"NotEnoughStaking","","The nominations amount more than active staking amount.",5,null],[4,"Call","","Dispatchable calls.",null,null],[13,"bond","","Take the origin account as a stash and lock up `value` of…",6,null],[13,"bond_extra","","Add some extra amount that have appeared in the stash…",6,null],[13,"unbond","","Schedule a portion of the stash to be unlocked ready for…",6,null],[13,"withdraw_unbonded","","Remove any unlocked chunks from the `unlocking` queue from…",6,null],[13,"nominate_contracts","","Declare the desire to nominate `targets` for the origin…",6,null],[13,"chill","","Declare no desire to either validate or nominate.",6,null],[13,"set_payee","","(Re-)set the payment target for a controller.",6,null],[13,"set_controller","","(Re-)set the controller of a stash.",6,null],[13,"claim_for_nominator","","rewards are claimed by the nominator.",6,null],[13,"claim_for_operator","","rewards are claimed by the operator.",6,null],[0,"parameters","","Plasm Staking Parameters",null,null],[3,"StakingParameters","pallet_dapps_staking::parameters","",null,null],[12,"can_be_nominated","","If true, the operated contracts can be nominated else is…",7,null],[12,"option_expired","","Expired of that option can be exercised.",7,null],[12,"option_p","","For calculating option, p.",7,null],[0,"rewards","pallet_dapps_staking","This is explains plasm inflation models. The staking has 2…",null,null],[3,"BasedComputeRewardsForDapps","pallet_dapps_staking::rewards","The based compute rewards for dapps. Following of…",null,null],[8,"ComputeRewardsForDapps","","Compute reards for dapps from total dapps rewards to…",null,null],[10,"compute_rewards_for_dapps","","",8,[[["n"]]]],[6,"BalanceOf","pallet_dapps_staking","",null,null],[6,"MomentOf","","",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"Trait","","",null,null],[16,"Currency","","The staking balance.",9,null],[16,"ContractFinder","","",9,null],[16,"BondingDuration","","Number of eras that staked funds must remain bonded for.",9,null],[16,"RewardRemainder","","Tokens have been minted and are unused for…",9,null],[16,"Reward","","Handler for the unbalanced increment when rewarding a…",9,null],[16,"Time","","Time used for computing era duration.",9,null],[16,"ComputeRewardsForDapps","","",9,null],[16,"EraFinder","","The information of era.",9,null],[16,"ForDappsEraReward","","The rewards for dapps operator.",9,null],[16,"HistoryDepthFinder","","the history depth",9,null],[16,"Event","","The overarching event type.",9,null],[11,"untreated_era","","The already untreated era is EraIndex.",10,[[],["eraindex"]]],[11,"nominators_untreated_era","","",10,[[["encodelike"]],["eraindex"]]],[11,"operators_untreated_era","","",10,[[["encodelike"]],["eraindex"]]],[11,"bonded","","Map from all locked \"stash\" accounts to the controller…",10,[[["encodelike"]],["option"]]],[11,"ledger","","Map from all (unlocked) \"controller\" accounts to the info…",10,[[["encodelike"]],[["option",["stakingledger"]],["stakingledger",["balanceof"]]]]],[11,"payee","","Where the reward payment should be made. Keyed by stash.",10,[[["encodelike"]],["rewarddestination"]]],[11,"dapps_nominations","","The map from nominator stash key to the set of stash keys…",10,[[["encodelike"]],[["option",["nominations"]],["nominations",["balanceof"]]]]],[11,"eras_contracts_parameters","","",10,[[["karg1"],["karg2"]],[["option",["stakingparameters"]],["stakingparameters"]]]],[11,"eras_staking_points","","",10,[[["karg1"],["karg2"]],[["balanceof"],["erastakingpoints",["balanceof"]]]]],[11,"eras_total_stake","","The total amount staked for the last `HISTORY_DEPTH` eras.…",10,[[["eraindex"],["encodelike",["eraindex"]]],["balanceof"]]],[11,"eras_nominate_totals","","",10,[[["karg1"],["karg2"]],["balanceof"]]],[11,"eras_staked_operators","","",10,[[["karg1"],["karg2"]],["balanceof"]]],[11,"build_storage","","Build the storage for this module.",11,[[["self"]],[["string"],["result",["storage","string"]],["storage"]]]],[11,"assimilate_storage","","Assimilate the storage for this module into pre-existing…",11,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",0,[[["self"]],["bool"]]],[11,"clear","","",0,[[],["t"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",1,[[["self"]],["bool"]]],[11,"clear","","",1,[[],["t"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"decode","","",2,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"size_hint","","",12,[[["self"]],["usize"]]],[11,"using_encoded","","",12,[[["self"],["f"]],["r"]]],[11,"encode","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",12,[[["w"],["self"]]]],[11,"decode","","",12,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",12,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",12,[[["self"]]]],[11,"blake2_256","","",12,[[["self"]]]],[11,"blake2_128_concat","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",12,[[["self"]]]],[11,"twox_256","","",12,[[["self"]]]],[11,"twox_64_concat","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",12,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",12,[[],["t"]]],[11,"vzip","","",12,[[],["v"]]],[11,"clear","","",12,[[["self"]]]],[11,"initialize","","",12,[[]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"size_hint","","",13,[[["self"]],["usize"]]],[11,"using_encoded","","",13,[[["self"],["f"]],["r"]]],[11,"encode","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",13,[[["w"],["self"]]]],[11,"decode","","",13,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",13,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",13,[[["self"]]]],[11,"blake2_256","","",13,[[["self"]]]],[11,"blake2_128_concat","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",13,[[["self"]]]],[11,"twox_256","","",13,[[["self"]]]],[11,"twox_64_concat","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",13,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",13,[[],["t"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",3,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",3,[[["self"]]]],[11,"blake2_256","","",3,[[["self"]]]],[11,"blake2_128_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",3,[[["self"]]]],[11,"twox_256","","",3,[[["self"]]]],[11,"twox_64_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"unchecked_into","","",11,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",11,[[],["t"]]],[11,"vzip","","",11,[[],["v"]]],[11,"clear","","",11,[[["self"]]]],[11,"initialize","","",11,[[]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"hashed_key","","",14,[[]]],[11,"exists","","",14,[[],["bool"]]],[11,"get","","",14,[[]]],[11,"try_get","","",14,[[],["result"]]],[11,"translate","","",14,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",14,[[["arg"]]]],[11,"set","","",14,[[]]],[11,"kill","","",14,[[]]],[11,"mutate","","",14,[[["f"]],["r"]]],[11,"try_mutate","","",14,[[["f"]],["result"]]],[11,"take","","",14,[[]]],[11,"append","","",14,[[["encodelikeitem"]]]],[11,"unchecked_into","","",14,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",14,[[],["t"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",15,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",15,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",15,[[["keyarg"]],["bool"]]],[11,"get","","",15,[[["keyarg"]]]],[11,"insert","","",15,[[["valarg"],["keyarg"]]]],[11,"remove","","",15,[[["keyarg"]]]],[11,"mutate","","",15,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",15,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",15,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",15,[[["f"],["keyarg"]],["result"]]],[11,"take","","",15,[[["keyarg"]]]],[11,"append","","",15,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",15,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",15,[[]]],[11,"drain","","Enumerate all elements in the map.",15,[[]]],[11,"translate","","",15,[[["f"]]]],[11,"unchecked_into","","",15,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",15,[[],["t"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",16,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",16,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",16,[[["keyarg"]],["bool"]]],[11,"get","","",16,[[["keyarg"]]]],[11,"insert","","",16,[[["valarg"],["keyarg"]]]],[11,"remove","","",16,[[["keyarg"]]]],[11,"mutate","","",16,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",16,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",16,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",16,[[["f"],["keyarg"]],["result"]]],[11,"take","","",16,[[["keyarg"]]]],[11,"append","","",16,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",16,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",16,[[]]],[11,"drain","","Enumerate all elements in the map.",16,[[]]],[11,"translate","","",16,[[["f"]]]],[11,"unchecked_into","","",16,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",16,[[],["t"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",17,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",17,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",17,[[["keyarg"]],["bool"]]],[11,"get","","",17,[[["keyarg"]]]],[11,"insert","","",17,[[["valarg"],["keyarg"]]]],[11,"remove","","",17,[[["keyarg"]]]],[11,"mutate","","",17,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",17,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",17,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",17,[[["f"],["keyarg"]],["result"]]],[11,"take","","",17,[[["keyarg"]]]],[11,"append","","",17,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",17,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",17,[[]]],[11,"drain","","Enumerate all elements in the map.",17,[[]]],[11,"translate","","",17,[[["f"]]]],[11,"unchecked_into","","",17,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",17,[[],["t"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",18,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",18,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",18,[[["keyarg"]],["bool"]]],[11,"get","","",18,[[["keyarg"]]]],[11,"insert","","",18,[[["valarg"],["keyarg"]]]],[11,"remove","","",18,[[["keyarg"]]]],[11,"mutate","","",18,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",18,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",18,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",18,[[["f"],["keyarg"]],["result"]]],[11,"take","","",18,[[["keyarg"]]]],[11,"append","","",18,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",18,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",18,[[]]],[11,"drain","","Enumerate all elements in the map.",18,[[]]],[11,"translate","","",18,[[["f"]]]],[11,"unchecked_into","","",18,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",18,[[],["t"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",19,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",19,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",19,[[["keyarg"]],["bool"]]],[11,"get","","",19,[[["keyarg"]]]],[11,"insert","","",19,[[["valarg"],["keyarg"]]]],[11,"remove","","",19,[[["keyarg"]]]],[11,"mutate","","",19,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",19,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",19,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",19,[[["f"],["keyarg"]],["result"]]],[11,"take","","",19,[[["keyarg"]]]],[11,"append","","",19,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",19,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",19,[[]]],[11,"drain","","Enumerate all elements in the map.",19,[[]]],[11,"translate","","",19,[[["f"]]]],[11,"unchecked_into","","",19,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",19,[[],["t"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"iter_prefix","","",20,[[]]],[11,"drain_prefix","","",20,[[]]],[11,"iter","","",20,[[]]],[11,"drain","","",20,[[]]],[11,"translate","","",20,[[["f"]]]],[11,"hashed_key_for","","",20,[[["karg1"],["karg2"]],[["vec",["u8"]],["u8"]]]],[11,"contains_key","","",20,[[["karg1"],["karg2"]],["bool"]]],[11,"get","","",20,[[["karg1"],["karg2"]]]],[11,"take","","",20,[[["karg1"],["karg2"]]]],[11,"swap","","",20,[[["xkarg2"],["ykarg1"],["xkarg1"],["ykarg2"]]]],[11,"insert","","",20,[[["karg1"],["varg"],["karg2"]]]],[11,"remove","","",20,[[["karg1"],["karg2"]]]],[11,"remove_prefix","","",20,[[["karg1"]]]],[11,"iter_prefix_values","","",20,[[["karg1"]],["prefixiterator"]]],[11,"mutate","","",20,[[["karg1"],["f"],["karg2"]],["r"]]],[11,"try_mutate","","",20,[[["karg1"],["f"],["karg2"]],["result"]]],[11,"append","","",20,[[["encodelikeitem"],["karg1"],["karg2"]]]],[11,"migrate_keys","","",20,[[["keyarg1"],["keyarg2"]],["option"]]],[11,"unchecked_into","","",20,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",20,[[],["t"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"iter_prefix","","",21,[[]]],[11,"drain_prefix","","",21,[[]]],[11,"iter","","",21,[[]]],[11,"drain","","",21,[[]]],[11,"translate","","",21,[[["f"]]]],[11,"hashed_key_for","","",21,[[["karg1"],["karg2"]],[["vec",["u8"]],["u8"]]]],[11,"contains_key","","",21,[[["karg1"],["karg2"]],["bool"]]],[11,"get","","",21,[[["karg1"],["karg2"]]]],[11,"take","","",21,[[["karg1"],["karg2"]]]],[11,"swap","","",21,[[["xkarg2"],["ykarg1"],["xkarg1"],["ykarg2"]]]],[11,"insert","","",21,[[["karg1"],["varg"],["karg2"]]]],[11,"remove","","",21,[[["karg1"],["karg2"]]]],[11,"remove_prefix","","",21,[[["karg1"]]]],[11,"iter_prefix_values","","",21,[[["karg1"]],["prefixiterator"]]],[11,"mutate","","",21,[[["karg1"],["f"],["karg2"]],["r"]]],[11,"try_mutate","","",21,[[["karg1"],["f"],["karg2"]],["result"]]],[11,"append","","",21,[[["encodelikeitem"],["karg1"],["karg2"]]]],[11,"migrate_keys","","",21,[[["keyarg1"],["keyarg2"]],["option"]]],[11,"unchecked_into","","",21,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",21,[[],["t"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",22,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",22,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",22,[[["keyarg"]],["bool"]]],[11,"get","","",22,[[["keyarg"]]]],[11,"insert","","",22,[[["valarg"],["keyarg"]]]],[11,"remove","","",22,[[["keyarg"]]]],[11,"mutate","","",22,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",22,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",22,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",22,[[["f"],["keyarg"]],["result"]]],[11,"take","","",22,[[["keyarg"]]]],[11,"append","","",22,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",22,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",22,[[]]],[11,"drain","","Enumerate all elements in the map.",22,[[]]],[11,"translate","","",22,[[["f"]]]],[11,"unchecked_into","","",22,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",22,[[],["t"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"unchecked_into","","",10,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",10,[[],["t"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"size_hint","","",4,[[["self"]],["usize"]]],[11,"using_encoded","","",4,[[["self"],["f"]],["r"]]],[11,"encode","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",4,[[["w"],["self"]]]],[11,"decode","","",4,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",4,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",4,[[["self"]]]],[11,"blake2_256","","",4,[[["self"]]]],[11,"blake2_128_concat","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",4,[[["self"]]]],[11,"twox_256","","",4,[[["self"]]]],[11,"twox_64_concat","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"with_weight","","",5,[[["u64"]],[["postdispatchinfo"],["dispatcherrorwithpostinfo",["postdispatchinfo"]]]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"size_hint","","",6,[[["self"]],["usize"]]],[11,"using_encoded","","",6,[[["self"],["f"]],["r"]]],[11,"encode","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",6,[[["w"],["self"]]]],[11,"decode","","",6,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",6,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",6,[[["self"]]]],[11,"blake2_256","","",6,[[["self"]]]],[11,"blake2_128_concat","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",6,[[["self"]]]],[11,"twox_256","","",6,[[["self"]]]],[11,"twox_64_concat","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","pallet_dapps_staking::parameters","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"size_hint","","",7,[[["self"]],["usize"]]],[11,"using_encoded","","",7,[[["self"],["f"]],["r"]]],[11,"encode","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",7,[[["w"],["self"]]]],[11,"decode","","",7,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",7,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",7,[[["self"]]]],[11,"blake2_256","","",7,[[["self"]]]],[11,"blake2_128_concat","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",7,[[["self"]]]],[11,"twox_256","","",7,[[["self"]]]],[11,"twox_64_concat","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",7,[[["self"]],["bool"]]],[11,"clear","","",7,[[],["t"]]],[11,"unchecked_into","","",7,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",7,[[],["t"]]],[11,"vzip","","",7,[[],["v"]]],[11,"clear","","",7,[[["self"]]]],[11,"initialize","","",7,[[]]],[11,"from","pallet_dapps_staking::rewards","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"unchecked_into","","",23,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",23,[[],["t"]]],[11,"vzip","","",23,[[],["v"]]],[11,"clone","pallet_dapps_staking","",0,[[["self"]],["forcing"]]],[11,"clone","","",1,[[["self"]],["rewarddestination"]]],[11,"eq","","",0,[[["forcing"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["rewarddestination"]],["bool"]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["rewarddestination","error"]],["rewarddestination"]]]],[11,"decode","","",0,[[["decin"]],[["result",["forcing","error"]],["error"],["forcing"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"deserialize","","",0,[[["__d"]],[["result",["forcing"]],["forcing"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"default","","",1,[[],["rewarddestination"]]],[11,"default","","",0,[[],["forcing"]]],[11,"compute_rewards_for_dapps","pallet_dapps_staking::rewards","",23,[[["n"]]]],[11,"clone","pallet_dapps_staking::parameters","",7,[[["self"]],["stakingparameters"]]],[11,"clone","pallet_dapps_staking","",2,[[["self"]],["nominations"]]],[11,"clone","","",13,[[["self"]],["unlockchunk"]]],[11,"clone","","",3,[[["self"]],["stakingledger"]]],[11,"clone","","",4,[[["self"]],["rawevent"]]],[11,"clone","","",10,[[["self"]],["module"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"default","pallet_dapps_staking::parameters","",7,[[],["stakingparameters"]]],[11,"default","pallet_dapps_staking","",12,[[],["erastakingpoints"]]],[11,"default","","",11,[[],["self"]]],[11,"eq","pallet_dapps_staking::parameters","",7,[[["self"],["stakingparameters"]],["bool"]]],[11,"ne","","",7,[[["self"],["stakingparameters"]],["bool"]]],[11,"eq","pallet_dapps_staking","",2,[[["nominations"],["self"]],["bool"]]],[11,"ne","","",2,[[["nominations"],["self"]],["bool"]]],[11,"eq","","",12,[[["erastakingpoints"],["self"]],["bool"]]],[11,"ne","","",12,[[["erastakingpoints"],["self"]],["bool"]]],[11,"eq","","",13,[[["self"],["unlockchunk"]],["bool"]]],[11,"ne","","",13,[[["self"],["unlockchunk"]],["bool"]]],[11,"eq","","",3,[[["stakingledger"],["self"]],["bool"]]],[11,"ne","","",3,[[["stakingledger"],["self"]],["bool"]]],[11,"eq","","",4,[[["rawevent"],["self"]],["bool"]]],[11,"ne","","",4,[[["rawevent"],["self"]],["bool"]]],[11,"eq","","",10,[[["module"],["self"]],["bool"]]],[11,"ne","","",10,[[["module"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"]],["bool"]]],[11,"fmt","pallet_dapps_staking::parameters","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","pallet_dapps_staking","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","pallet_dapps_staking::parameters","",7,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"encode_to","","",7,[[["self"],["encout"]]]],[11,"encode_to","pallet_dapps_staking","",2,[[["self"],["encout"]]]],[11,"encode_to","","",12,[[["self"],["encout"]]]],[11,"encode_to","","",13,[[["self"],["encout"]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"encode_to","","",4,[[["self"],["encout"]]]],[11,"encode_to","","",6,[[["self"],["encout"]]]],[11,"decode","pallet_dapps_staking::parameters","",7,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","pallet_dapps_staking","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",12,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",13,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",4,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",6,[[["decin"]],[["error"],["result",["error"]]]]],[11,"serialize","pallet_dapps_staking::parameters","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","pallet_dapps_staking","",11,[[["self"],["__s"]],["result"]]],[11,"deserialize","pallet_dapps_staking::parameters","",7,[[["__d"]],["result"]]],[11,"deserialize","pallet_dapps_staking","",11,[[["__d"]],["result"]]],[11,"metadata","","",5,[[]]],[11,"metadata","","",10,[[]]],[11,"get_dispatch_info","","",6,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",6,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",6,[[["self"]],["str"]]],[11,"get_call_names","","",6,[[]]],[11,"module_prefix","","",15,[[]]],[11,"storage_prefix","","",15,[[]]],[11,"from_optional_value_to_query","","",15,[[["eraindex"],["option",["eraindex"]]]]],[11,"from_query_to_optional_value","","",15,[[],[["eraindex"],["option",["eraindex"]]]]],[11,"module_prefix","","",16,[[]]],[11,"storage_prefix","","",16,[[]]],[11,"from_optional_value_to_query","","",16,[[["eraindex"],["option",["eraindex"]]]]],[11,"from_query_to_optional_value","","",16,[[],[["eraindex"],["option",["eraindex"]]]]],[11,"module_prefix","","",17,[[]]],[11,"storage_prefix","","",17,[[]]],[11,"from_optional_value_to_query","","",17,[[["option"]]]],[11,"from_query_to_optional_value","","",17,[[],["option"]]],[11,"module_prefix","","",18,[[]]],[11,"storage_prefix","","",18,[[]]],[11,"from_optional_value_to_query","","",18,[[["option",["stakingledger"]],["stakingledger",["balanceof"]]]]],[11,"from_query_to_optional_value","","",18,[[],[["option",["stakingledger"]],["stakingledger",["balanceof"]]]]],[11,"module_prefix","","",19,[[]]],[11,"storage_prefix","","",19,[[]]],[11,"from_optional_value_to_query","","",19,[[["rewarddestination"],["option",["rewarddestination"]]]]],[11,"from_query_to_optional_value","","",19,[[],[["rewarddestination"],["option",["rewarddestination"]]]]],[11,"module_prefix","","",22,[[]]],[11,"storage_prefix","","",22,[[]]],[11,"from_optional_value_to_query","","",22,[[["option",["balanceof"]],["balanceof"]]]],[11,"from_query_to_optional_value","","",22,[[],[["option",["balanceof"]],["balanceof"]]]],[11,"module_prefix","","",20,[[]]],[11,"storage_prefix","","",20,[[]]],[11,"from_optional_value_to_query","","",20,[[["option",["stakingparameters"]],["stakingparameters"]]]],[11,"from_query_to_optional_value","","",20,[[],[["option",["stakingparameters"]],["stakingparameters"]]]],[11,"module_prefix","","",21,[[]]],[11,"storage_prefix","","",21,[[]]],[11,"from_optional_value_to_query","","",21,[[["option",["erastakingpoints"]],["erastakingpoints",["balanceof"]]]]],[11,"from_query_to_optional_value","","",21,[[],[["erastakingpoints",["balanceof"]],["option",["erastakingpoints"]]]]],[11,"module_prefix","","",14,[[]]],[11,"storage_prefix","","",14,[[]]],[11,"from_optional_value_to_query","","",14,[[["eraindex"],["option",["eraindex"]]]]],[11,"from_query_to_optional_value","","",14,[[],[["eraindex"],["option",["eraindex"]]]]],[11,"module_prefix","","",15,[[]]],[11,"storage_prefix","","",15,[[]]],[11,"module_prefix","","",16,[[]]],[11,"storage_prefix","","",16,[[]]],[11,"module_prefix","","",17,[[]]],[11,"storage_prefix","","",17,[[]]],[11,"module_prefix","","",18,[[]]],[11,"storage_prefix","","",18,[[]]],[11,"module_prefix","","",19,[[]]],[11,"storage_prefix","","",19,[[]]],[11,"module_prefix","","",20,[[]]],[11,"storage_prefix","","",20,[[]]],[11,"module_prefix","","",21,[[]]],[11,"storage_prefix","","",21,[[]]],[11,"module_prefix","","",22,[[]]],[11,"storage_prefix","","",22,[[]]],[11,"on_runtime_upgrade","","",10,[[],["weight"]]],[11,"build_module_genesis_storage","","",11,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"verify","pallet_dapps_staking::parameters","",7,[[["self"]],[["result",["dispatcherror"]],["dispatcherror"]]]],[11,"compute","pallet_dapps_staking","",10,[[["eraindex"]],["balanceof"]]]],"p":[[4,"Forcing"],[4,"RewardDestination"],[3,"Nominations"],[3,"StakingLedger"],[4,"RawEvent"],[4,"Error"],[4,"Call"],[3,"StakingParameters"],[8,"ComputeRewardsForDapps"],[8,"Trait"],[3,"Module"],[3,"GenesisConfig"],[3,"EraStakingPoints"],[3,"UnlockChunk"],[3,"UntreatedEra"],[3,"NominatorsUntreatedEra"],[3,"OperatorsUntreatedEra"],[3,"Bonded"],[3,"Ledger"],[3,"Payee"],[3,"ErasContractsParameters"],[3,"ErasStakingPoints"],[3,"ErasTotalStake"],[3,"BasedComputeRewardsForDapps"]]};
searchIndex["pallet_operator_trading"] = {"doc":"","i":[[3,"Offer","pallet_operator_trading","",null,null],[12,"buyer","","",0,null],[12,"sender","","",0,null],[12,"contracts","","",0,null],[12,"amount","","",0,null],[12,"expired","","",0,null],[12,"state","","",0,null],[3,"Offers","","A mapping from the offering account id to Offer",null,null],[3,"Module","","The module declaration.",null,null],[4,"OfferState","","",null,null],[13,"Waiting","","",1,null],[13,"Reject","","",1,null],[13,"Accept","","",1,null],[4,"Call","","Dispatchable calls.",null,null],[13,"offer","","Offer is an easy contract to trade. If the sender `accept`…",2,null],[13,"reject","","Reject the target offer. the offer's buyer or sender can…",2,null],[13,"accept","","Accept the target offer. Only the offer's sender can…",2,null],[13,"remove","","Remove the offer. The offer's owner can remove the offer.…",2,null],[4,"RawEvent","","Events for this module.",null,null],[13,"Offer","","When call offer, it is issued arguments: 1: New…",3,null],[13,"Reject","","When call reject, it is issued arguments: 1: Rejector…",3,null],[13,"Accept","","When call reject, it is issued arguments: 1: Acceptor…",3,null],[13,"Remove","","When call remove, it is issued arguments: 1: the remover",3,null],[6,"BalanceOf","","",null,null],[6,"OfferOf","","",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"Trait","","The module's configuration trait.",null,null],[16,"Currency","","",4,null],[16,"OperatorFinder","","The helper of checking the state of operators.",4,null],[16,"TransferOperator","","The helper of transfering operator's authorities.",4,null],[16,"Event","","The overarching event type.",4,null],[11,"offer","","Offer is an easy contract to trade. If the sender `accept`…",5,[[["balanceof"],["vec"]],["dispatchresult"]]],[11,"reject","","Reject the target offer. the offer's buyer or sender can…",5,[[],["dispatchresult"]]],[11,"accept","","Accept the target offer. Only the offer's sender can…",5,[[],["dispatchresult"]]],[11,"remove","","Remove the offer. The offer's owner can remove the offer.…",5,[[],["dispatchresult"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",0,[[["self"]],["bool"]]],[11,"clear","","",0,[[],["t"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",6,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",6,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",6,[[["keyarg"]],["bool"]]],[11,"get","","",6,[[["keyarg"]]]],[11,"insert","","",6,[[["valarg"],["keyarg"]]]],[11,"remove","","",6,[[["keyarg"]]]],[11,"mutate","","",6,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",6,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",6,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",6,[[["f"],["keyarg"]],["result"]]],[11,"take","","",6,[[["keyarg"]]]],[11,"append","","",6,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",6,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",6,[[]]],[11,"drain","","Enumerate all elements in the map.",6,[[]]],[11,"translate","","",6,[[["f"]]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",1,[[["self"]],["bool"]]],[11,"clear","","",1,[[],["t"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"decode","","",2,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",3,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",3,[[["self"]]]],[11,"blake2_256","","",3,[[["self"]]]],[11,"blake2_128_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",3,[[["self"]]]],[11,"twox_256","","",3,[[["self"]]]],[11,"twox_64_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clone","","",1,[[["self"]],["offerstate"]]],[11,"clone","","",0,[[["self"]],["offer"]]],[11,"clone","","",5,[[["self"]],["module"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["rawevent"]]],[11,"default","","",1,[[],["offerstate"]]],[11,"default","","",0,[[],["offer"]]],[11,"eq","","",1,[[["self"],["offerstate"]],["bool"]]],[11,"eq","","",0,[[["offer"],["self"]],["bool"]]],[11,"ne","","",0,[[["offer"],["self"]],["bool"]]],[11,"eq","","",5,[[["module"],["self"]],["bool"]]],[11,"ne","","",5,[[["module"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"]],["bool"]]],[11,"eq","","",3,[[["rawevent"],["self"]],["bool"]]],[11,"ne","","",3,[[["rawevent"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"encode_to","","",2,[[["self"],["encout"]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",0,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"metadata","","",5,[[]]],[11,"get_dispatch_info","","",2,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",2,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",2,[[["self"]],["str"]]],[11,"get_call_names","","",2,[[]]],[11,"module_prefix","","",6,[[]]],[11,"storage_prefix","","",6,[[]]],[11,"from_optional_value_to_query","","",6,[[["option",["offerof"]],["offerof"]]]],[11,"from_query_to_optional_value","","",6,[[],[["option",["offerof"]],["offerof"]]]],[11,"module_prefix","","",6,[[]]],[11,"storage_prefix","","",6,[[]]]],"p":[[3,"Offer"],[4,"OfferState"],[4,"Call"],[4,"RawEvent"],[8,"Trait"],[3,"Module"],[3,"Offers"]]};
searchIndex["pallet_ovm"] = {"doc":"Ovm Module","i":[[3,"PredicateContract","pallet_ovm","PredicateContract wrapped Predicate and initial arguments.",null,null],[12,"predicate_hash","","",0,null],[12,"inputs","","",0,null],[3,"Property","","Property stands for dispute logic and we can claim every…",null,null],[12,"predicate_address","","Indicates the address of Predicate.",1,null],[12,"inputs","","Every input are bytes. Each Atomic Predicate decode inputs…",1,null],[3,"ChallengeGame","","ChallengeGame is a part of L2 dispute. It's instantiated…",null,null],[3,"Schedule","","Definition of the cost schedule and other…",null,null],[12,"version","","Version of the schedule.",2,null],[12,"put_code_per_byte_cost","","Cost of putting a byte of code into storage.",2,null],[12,"max_stack_height","","Maximum allowed stack height.",2,null],[12,"max_memory_pages","","Maximum number of memory pages allowed for a contract.",2,null],[12,"max_table_size","","Maximum allowed size of a declared table.",2,null],[3,"Config","","In-memory cache of configuration values.",null,null],[12,"schedule","","",3,null],[12,"max_depth","","",3,null],[3,"GenesisConfig","","Genesis config for the module, allow to build genesis…",null,null],[12,"current_schedule","","Current cost schedule for contracts.",4,null],[3,"CurrentSchedule","","Current cost schedule for contracts.",null,null],[3,"PredicateCodes","","A mapping from an original code hash to the original code,…",null,null],[3,"PredicateCache","","A mapping between an original code hash and instrumented…",null,null],[3,"Predicates","","Mapping the predicate address to Predicate. Predicate is…",null,null],[3,"InstantiatedGames","","Mapping the game id to Challenge Game.",null,null],[3,"Module","","",null,null],[4,"Decision","","The game decision by predicates.",null,null],[13,"Undecided","","",5,null],[13,"True","","",5,null],[13,"False","","",5,null],[4,"RawEvent","","Events for this module.",null,null],[13,"PutPredicate","","(predicate_address: AccountId);",6,null],[13,"InstantiatePredicate","","(predicate_address: AccountId);",6,null],[13,"AtomicPropositionDecided","","(gameId: Hash, decision: bool)",6,null],[13,"NewPropertyClaimed","","(game_id: Hash, property: Property, createdBlock:…",6,null],[13,"ClaimChallenged","","(game_id: Hash, challengeGameId: Hash)",6,null],[13,"ClaimDecided","","(game_id: Hash, decision: bool)",6,null],[13,"ChallengeRemoved","","(game_id: Hash, challengeGameId: Hash)",6,null],[4,"Error","","Error for the staking module.",null,null],[13,"DuplicateIndex","","Duplicate index.",7,null],[13,"CiamIsNotEmpty","","claim isn't empty",7,null],[13,"DoesNotExistGame","","Does not exist game",7,null],[13,"DoesNotExistPredicate","","Does not exist predicate",7,null],[13,"ClaimShouldBeDecidable","","claim should be decidable",7,null],[13,"ChallengeIsNotValid","","challenge isn't valid",7,null],[13,"ChallengingGameNotTrue","","challenging game haven't been decided true",7,null],[13,"DecisionMustBeUndecided","","Decision must be undecided",7,null],[13,"ThereMustBeNoChallenge","","There must be no challenge",7,null],[13,"PropertyMustBeTrue","","property must be true with given witness",7,null],[13,"ChallengingGameNotFalse","","challenging game haven't been decided false",7,null],[13,"MustBeCalledFromPredicate","","setPredicateDecision must be called from predicate",7,null],[4,"Call","","Dispatchable calls.",null,null],[13,"put_code","","Stores the given binary Wasm code into the chain's storage…",8,null],[13,"instantiate","","Deploy predicate and made predicate address as AccountId.…",8,null],[13,"claim_property","","Claims property and create new game. Id of game is hash of…",8,null],[13,"decide_claim_to_true","","Sets the game decision true when its dispute period has…",8,null],[13,"decide_claim_to_false","","Sets the game decision false when its challenge has been…",8,null],[13,"decide_claim_with_witness","","Decide the game decision with given witness. TODO: weight",8,null],[13,"remove_challenge","","Removes a challenge when its decision has been evaluated…",8,null],[13,"set_predicate_decision","","Set a predicate decision by called from Predicate itself.",8,null],[13,"challenge","","Challenge a game specified by gameId with a…",8,null],[0,"predicate","","",null,null],[3,"ExecError","pallet_ovm::predicate","An error indicating some failure to execute a contract…",null,null],[12,"reason","","",9,null],[12,"buffer","","This is an allocated buffer that may be reused. The buffer…",9,null],[3,"PrefabOvmModule","","A prepared wasm module ready for execution.",null,null],[3,"OvmExecutable","","Ovm executable loaded by `OvmLoader` and executed by…",null,null],[3,"PredicateLoader","","Loader which fetches `OvmExecutable` from the code cache.",null,null],[3,"ExecutionContext","","",null,null],[12,"caller","","",10,null],[12,"self_account","","",10,null],[12,"depth","","",10,null],[12,"config","","",10,null],[12,"vm","","",10,null],[12,"loader","","",10,null],[3,"CallContext","","",null,null],[3,"PredicateOvm","","Implementation of `Vm` that takes `PredicateOvm` and…",null,null],[4,"PredicateError","","Reason why a predicate call failed",null,null],[13,"Other","","Some error occurred.",11,null],[5,"save_code","","Put code in the storage. The hash of code is used as a key…",null,[[["vec",["u8"]],["schedule"],["u8"]],[["str"],["result",["str"]]]]],[6,"ExecResult","","",null,null],[11,"new","","",12,[[["schedule"]],["self"]]],[11,"top_level","","Create the top level execution context.",10,[[["config"],["v"],["l"]],["self"]]],[11,"call","","Make a call to the specified address, optionally…",10,[[["vec",["u8"]],["self"],["u8"]],["execresult"]]],[11,"new","","",13,[[["schedule"]],["self"]]],[0,"traits","pallet_ovm","",null,null],[8,"PredicateAddressFor","pallet_ovm::traits","A function that generates an `AccountId` for a predicate…",null,null],[10,"predicate_address_for","","",14,[[["predicatehash"],["accountid"]],["accountid"]]],[8,"Loader","","Loader is a companion of the `Vm` trait. It loads an…",null,null],[16,"Executable","","",15,null],[10,"load_main","","Load the main portion of the code specified by the…",15,[[["self"]],[["result",["str"]],["str"]]]],[8,"Ext","","An interface that provides access to the external…",null,null],[16,"T","","",16,null],[10,"call","","Call (possibly other predicate) into the specified account.",16,[[["u8"],["vec",["u8"]],["self"]],["execresult"]]],[10,"caller","","Returns a reference to the account id of the caller.",16,[[["self"]]]],[10,"address","","Returns a reference to the account id of the current…",16,[[["self"]]]],[8,"Vm","","A trait that represent an optimistic virtual machine.",null,null],[16,"Executable","","",17,null],[10,"execute","","",17,[[["u8"],["vec",["u8"]],["self"],["ext"]],["execresult"]]],[6,"PropertyOf","pallet_ovm","",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"Trait","","",null,null],[16,"MaxDepth","","The maximum nesting level of a call/instantiate stack.",18,null],[16,"DisputePeriod","","During the dispute period defined here, the user can…",18,null],[16,"DeterminePredicateAddress","","A function type to get the contract address given the…",18,null],[16,"Event","","The overarching event type.",18,null],[11,"current_schedule","","Current cost schedule for contracts.",19,[[],["schedule"]]],[11,"predicate_codes","","A mapping from an original code hash to the original code,…",19,[[["encodelike"]],[["vec",["u8"]],["option",["vec"]]]]],[11,"predicate_cache","","A mapping between an original code hash and instrumented…",19,[[["encodelike"]],[["prefabovmmodule"],["option",["prefabovmmodule"]]]]],[11,"predicates","","Mapping the predicate address to Predicate. Predicate is…",19,[[["encodelike"]],[["option",["predicatecontract"]],["predicatecontract"]]]],[11,"instantiated_games","","Mapping the game id to Challenge Game.",19,[[["encodelike"]],[["option",["challengegame"]],["challengegame"]]]],[11,"build_storage","","Build the storage for this module.",4,[[["self"]],[["string"],["result",["storage","string"]],["storage"]]]],[11,"assimilate_storage","","Assimilate the storage for this module into pre-existing…",4,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"put_code","","Stores the given binary Wasm code into the chain's storage…",19,[[["vec",["u8"]],["u8"]],["dispatchresult"]]],[11,"instantiate","","Deploy predicate and made predicate address as AccountId.…",19,[[["vec",["u8"]],["u8"]],["dispatchresult"]]],[11,"bare_call","","Perform a call to a specified contract.",19,[[["vec",["u8"]],["u8"]],["execresult"]]],[11,"is_decided","","Get of true/false the decision of property.",19,[[["propertyof"]],["decision"]]],[11,"get_game","","Get of the instatiated challenge game from claim_id.",19,[[],[["option",["challengegame"]],["challengegame"]]]],[11,"get_property_id","","Get of the property id from the propaty itself.",19,[[["propertyof"]]]],[11,"block_number","","",19,[[]]],[11,"is_decidable","","",19,[[],["bool"]]],[14,"try_or_exec_error","","Evaluate an expression of type Result<_, &'static str> and…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",0,[[["self"]],["bool"]]],[11,"clear","","",0,[[],["t"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",1,[[["self"]],["bool"]]],[11,"clear","","",1,[[],["t"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"size_hint","","",20,[[["self"]],["usize"]]],[11,"using_encoded","","",20,[[["self"],["f"]],["r"]]],[11,"encode","","",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",20,[[["w"],["self"]]]],[11,"decode","","",20,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",20,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",20,[[["self"]]]],[11,"blake2_256","","",20,[[["self"]]]],[11,"blake2_128_concat","","",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",20,[[["self"]]]],[11,"twox_256","","",20,[[["self"]]]],[11,"twox_64_concat","","",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",20,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",20,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",20,[[],["t"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"decode","","",2,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",2,[[["self"]],["bool"]]],[11,"clear","","",2,[[],["t"]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"hashed_key","","",21,[[]]],[11,"exists","","",21,[[],["bool"]]],[11,"get","","",21,[[]]],[11,"try_get","","",21,[[],["result"]]],[11,"translate","","",21,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",21,[[["arg"]]]],[11,"set","","",21,[[]]],[11,"kill","","",21,[[]]],[11,"mutate","","",21,[[["f"]],["r"]]],[11,"try_mutate","","",21,[[["f"]],["result"]]],[11,"take","","",21,[[]]],[11,"append","","",21,[[["encodelikeitem"]]]],[11,"unchecked_into","","",21,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",21,[[],["t"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",22,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",22,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",22,[[["keyarg"]],["bool"]]],[11,"get","","",22,[[["keyarg"]]]],[11,"insert","","",22,[[["valarg"],["keyarg"]]]],[11,"remove","","",22,[[["keyarg"]]]],[11,"mutate","","",22,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",22,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",22,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",22,[[["f"],["keyarg"]],["result"]]],[11,"take","","",22,[[["keyarg"]]]],[11,"append","","",22,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",22,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",22,[[]]],[11,"drain","","Enumerate all elements in the map.",22,[[]]],[11,"translate","","",22,[[["f"]]]],[11,"unchecked_into","","",22,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",22,[[],["t"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",23,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",23,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",23,[[["keyarg"]],["bool"]]],[11,"get","","",23,[[["keyarg"]]]],[11,"insert","","",23,[[["valarg"],["keyarg"]]]],[11,"remove","","",23,[[["keyarg"]]]],[11,"mutate","","",23,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",23,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",23,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",23,[[["f"],["keyarg"]],["result"]]],[11,"take","","",23,[[["keyarg"]]]],[11,"append","","",23,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",23,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",23,[[]]],[11,"drain","","Enumerate all elements in the map.",23,[[]]],[11,"translate","","",23,[[["f"]]]],[11,"unchecked_into","","",23,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",23,[[],["t"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",24,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",24,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",24,[[["keyarg"]],["bool"]]],[11,"get","","",24,[[["keyarg"]]]],[11,"insert","","",24,[[["valarg"],["keyarg"]]]],[11,"remove","","",24,[[["keyarg"]]]],[11,"mutate","","",24,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",24,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",24,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",24,[[["f"],["keyarg"]],["result"]]],[11,"take","","",24,[[["keyarg"]]]],[11,"append","","",24,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",24,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",24,[[]]],[11,"drain","","Enumerate all elements in the map.",24,[[]]],[11,"translate","","",24,[[["f"]]]],[11,"unchecked_into","","",24,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",24,[[],["t"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",25,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",25,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",25,[[["keyarg"]],["bool"]]],[11,"get","","",25,[[["keyarg"]]]],[11,"insert","","",25,[[["valarg"],["keyarg"]]]],[11,"remove","","",25,[[["keyarg"]]]],[11,"mutate","","",25,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",25,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",25,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",25,[[["f"],["keyarg"]],["result"]]],[11,"take","","",25,[[["keyarg"]]]],[11,"append","","",25,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",25,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",25,[[]]],[11,"drain","","Enumerate all elements in the map.",25,[[]]],[11,"translate","","",25,[[["f"]]]],[11,"unchecked_into","","",25,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",25,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",25,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",25,[[],["t"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"unchecked_into","","",19,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",19,[[],["t"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"size_hint","","",5,[[["self"]],["usize"]]],[11,"using_encoded","","",5,[[["self"],["f"]],["r"]]],[11,"encode","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",5,[[["w"],["self"]]]],[11,"decode","","",5,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",5,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",5,[[["self"]]]],[11,"blake2_256","","",5,[[["self"]]]],[11,"blake2_128_concat","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",5,[[["self"]]]],[11,"twox_256","","",5,[[["self"]]]],[11,"twox_64_concat","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"size_hint","","",6,[[["self"]],["usize"]]],[11,"using_encoded","","",6,[[["self"],["f"]],["r"]]],[11,"encode","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",6,[[["w"],["self"]]]],[11,"decode","","",6,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",6,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",6,[[["self"]]]],[11,"blake2_256","","",6,[[["self"]]]],[11,"blake2_128_concat","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",6,[[["self"]]]],[11,"twox_256","","",6,[[["self"]]]],[11,"twox_64_concat","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"with_weight","","",7,[[["u64"]],[["postdispatchinfo"],["dispatcherrorwithpostinfo",["postdispatchinfo"]]]]],[11,"unchecked_into","","",7,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",7,[[],["t"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"size_hint","","",8,[[["self"]],["usize"]]],[11,"using_encoded","","",8,[[["self"],["f"]],["r"]]],[11,"encode","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",8,[[["w"],["self"]]]],[11,"decode","","",8,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",8,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",8,[[["self"]]]],[11,"blake2_256","","",8,[[["self"]]]],[11,"blake2_128_concat","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",8,[[["self"]]]],[11,"twox_256","","",8,[[["self"]]]],[11,"twox_64_concat","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",8,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",8,[[],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","pallet_ovm::predicate","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"unchecked_into","","",9,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",9,[[],["t"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"size_hint","","",26,[[["self"]],["usize"]]],[11,"using_encoded","","",26,[[["self"],["f"]],["r"]]],[11,"encode","","",26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",26,[[["w"],["self"]]]],[11,"decode","","",26,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",26,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",26,[[["self"]]]],[11,"blake2_256","","",26,[[["self"]]]],[11,"blake2_128_concat","","",26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",26,[[["self"]]]],[11,"twox_256","","",26,[[["self"]]]],[11,"twox_64_concat","","",26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",26,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",26,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",26,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",26,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",26,[[],["t"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"unchecked_into","","",27,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",27,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",27,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",27,[[],["t"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"unchecked_into","","",12,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",12,[[],["t"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"unchecked_into","","",10,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",10,[[],["t"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"unchecked_into","","",28,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",28,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",28,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",28,[[],["t"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"unchecked_into","","",13,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",13,[[],["t"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"size_hint","","",11,[[["self"]],["usize"]]],[11,"using_encoded","","",11,[[["self"],["f"]],["r"]]],[11,"encode","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",11,[[["w"],["self"]]]],[11,"decode","","",11,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",11,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",11,[[["self"]]]],[11,"blake2_256","","",11,[[["self"]]]],[11,"blake2_128_concat","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",11,[[["self"]]]],[11,"twox_256","","",11,[[["self"]]]],[11,"twox_64_concat","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",11,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",11,[[],["t"]]],[11,"vzip","","",11,[[],["v"]]],[11,"load_main","","",12,[[["self"]],[["ovmexecutable"],["str"],["result",["ovmexecutable","str"]]]]],[11,"call","","Call (possibly other predicate) into the specified account.",28,[[["u8"],["vec",["u8"]],["self"]],["execresult"]]],[11,"caller","","Returns a reference to the account id of the caller.",28,[[["self"]]]],[11,"address","","Returns a reference to the account id of the current…",28,[[["self"]]]],[11,"execute","","",13,[[["u8"],["vec",["u8"]],["self"],["ext"]],["execresult"]]],[11,"from","","",11,[[["str"]],["predicateerror"]]],[11,"clone","","",11,[[["self"]],["predicateerror"]]],[11,"clone","","",26,[[["self"]],["prefabovmmodule"]]],[11,"clone","pallet_ovm","",0,[[["self"]],["predicatecontract"]]],[11,"clone","","",1,[[["self"]],["property"]]],[11,"clone","","",2,[[["self"]],["schedule"]]],[11,"clone","","",6,[[["self"]],["rawevent"]]],[11,"clone","","",19,[[["self"]],["module"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"default","","",0,[[],["predicatecontract"]]],[11,"default","","",1,[[],["property"]]],[11,"default","","",2,[[],["schedule"]]],[11,"default","","",4,[[],["self"]]],[11,"eq","pallet_ovm::predicate","",11,[[["self"],["predicateerror"]],["bool"]]],[11,"ne","","",11,[[["self"],["predicateerror"]],["bool"]]],[11,"eq","pallet_ovm","",0,[[["self"],["predicatecontract"]],["bool"]]],[11,"ne","","",0,[[["self"],["predicatecontract"]],["bool"]]],[11,"eq","","",1,[[["property"],["self"]],["bool"]]],[11,"ne","","",1,[[["property"],["self"]],["bool"]]],[11,"eq","","",5,[[["decision"],["self"]],["bool"]]],[11,"eq","","",20,[[["challengegame"],["self"]],["bool"]]],[11,"ne","","",20,[[["challengegame"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["schedule"]],["bool"]]],[11,"ne","","",2,[[["self"],["schedule"]],["bool"]]],[11,"eq","","",6,[[["self"],["rawevent"]],["bool"]]],[11,"ne","","",6,[[["self"],["rawevent"]],["bool"]]],[11,"eq","","",19,[[["module"],["self"]],["bool"]]],[11,"ne","","",19,[[["module"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"]],["bool"]]],[11,"fmt","pallet_ovm::predicate","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","pallet_ovm","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"encode_to","pallet_ovm::predicate","",11,[[["self"],["encout"]]]],[11,"encode_to","","",26,[[["self"],["encout"]]]],[11,"encode_to","pallet_ovm","",0,[[["self"],["encout"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",5,[[["self"],["encout"]]]],[11,"encode_to","","",20,[[["self"],["encout"]]]],[11,"encode_to","","",2,[[["self"],["encout"]]]],[11,"encode_to","","",6,[[["self"],["encout"]]]],[11,"encode_to","","",8,[[["self"],["encout"]]]],[11,"decode","pallet_ovm::predicate","",11,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",26,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","pallet_ovm","",0,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",5,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",20,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",6,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",8,[[["decin"]],[["error"],["result",["error"]]]]],[11,"serialize","pallet_ovm::predicate","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","pallet_ovm","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"metadata","","",7,[[]]],[11,"metadata","","",19,[[]]],[11,"get_dispatch_info","","",8,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",8,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",8,[[["self"]],["str"]]],[11,"get_call_names","","",8,[[]]],[11,"module_prefix","","",22,[[]]],[11,"storage_prefix","","",22,[[]]],[11,"from_optional_value_to_query","","",22,[[["vec",["u8"]],["option",["vec"]]]]],[11,"from_query_to_optional_value","","",22,[[],[["vec",["u8"]],["option",["vec"]]]]],[11,"module_prefix","","",23,[[]]],[11,"storage_prefix","","",23,[[]]],[11,"from_optional_value_to_query","","",23,[[["option",["prefabovmmodule"]],["prefabovmmodule"]]]],[11,"from_query_to_optional_value","","",23,[[],[["prefabovmmodule"],["option",["prefabovmmodule"]]]]],[11,"module_prefix","","",24,[[]]],[11,"storage_prefix","","",24,[[]]],[11,"from_optional_value_to_query","","",24,[[["option",["predicatecontract"]],["predicatecontract"]]]],[11,"from_query_to_optional_value","","",24,[[],[["option",["predicatecontract"]],["predicatecontract"]]]],[11,"module_prefix","","",25,[[]]],[11,"storage_prefix","","",25,[[]]],[11,"from_optional_value_to_query","","",25,[[["option",["challengegame"]],["challengegame"]]]],[11,"from_query_to_optional_value","","",25,[[],[["option",["challengegame"]],["challengegame"]]]],[11,"module_prefix","","",21,[[]]],[11,"storage_prefix","","",21,[[]]],[11,"from_optional_value_to_query","","",21,[[["schedule"],["option",["schedule"]]]]],[11,"from_query_to_optional_value","","",21,[[],[["schedule"],["option",["schedule"]]]]],[11,"module_prefix","","",22,[[]]],[11,"storage_prefix","","",22,[[]]],[11,"module_prefix","","",23,[[]]],[11,"storage_prefix","","",23,[[]]],[11,"module_prefix","","",24,[[]]],[11,"storage_prefix","","",24,[[]]],[11,"module_prefix","","",25,[[]]],[11,"storage_prefix","","",25,[[]]],[11,"on_runtime_upgrade","","",19,[[],["weight"]]],[11,"build_module_genesis_storage","","",4,[[["storage"],["self"]],[["string"],["result",["string"]]]]]],"p":[[3,"PredicateContract"],[3,"Property"],[3,"Schedule"],[3,"Config"],[3,"GenesisConfig"],[4,"Decision"],[4,"RawEvent"],[4,"Error"],[4,"Call"],[3,"ExecError"],[3,"ExecutionContext"],[4,"PredicateError"],[3,"PredicateLoader"],[3,"PredicateOvm"],[8,"PredicateAddressFor"],[8,"Loader"],[8,"Ext"],[8,"Vm"],[8,"Trait"],[3,"Module"],[3,"ChallengeGame"],[3,"CurrentSchedule"],[3,"PredicateCodes"],[3,"PredicateCache"],[3,"Predicates"],[3,"InstantiatedGames"],[3,"PrefabOvmModule"],[3,"OvmExecutable"],[3,"CallContext"]]};
searchIndex["pallet_ovm_rpc_runtime_api"] = {"doc":"Runtime API definition required by Ovm RPC extensions.","i":[[8,"OvmApi","pallet_ovm_rpc_runtime_api","The API to interact with contracts without using executive.",null,null],[11,"is_decided","","",0,[[["blockid"],["self"],["property"]],["result"]]],[11,"is_decided_with_context","","",0,[[["property"],["blockid"],["executioncontext"],["self"]],["result"]]],[11,"get_game","","",0,[[["blockid"],["hash"],["self"]],[["result",["option"]],["option"]]]],[11,"get_game_with_context","","",0,[[["blockid"],["executioncontext"],["self"],["hash"]],[["result",["option"]],["option"]]]],[11,"get_property_id","","",0,[[["blockid"],["self"],["property"]],[["option"],["result",["option"]]]]],[11,"get_property_id_with_context","","",0,[[["property"],["blockid"],["executioncontext"],["self"]],[["option"],["result",["option"]]]]]],"p":[[8,"OvmApi"]]};
searchIndex["pallet_plasm_lockdrop"] = {"doc":"Plasm Lockdrop Module This module held lockdrop event on…","i":[[3,"BitcoinPrice","pallet_plasm_lockdrop","BTC price oracle.",null,null],[3,"EthereumPrice","","ETH price oracle.",null,null],[3,"Transaction","","Common transaction type.",null,null],[12,"sender","","Transaction sender address.",0,null],[12,"recipient","","Transaction recipient address.",0,null],[12,"value","","Value in currency units.",0,null],[12,"script","","Execution script (for Ethereum it's `data` field).",0,null],[12,"confirmations","","Confirmations in blocks",0,null],[3,"BitcoinChain","","Bitcoin chain transactions oracle.",null,null],[3,"EthereumChain","","Ethereum chain transactions oracle.",null,null],[3,"Claim","","Lockdrop claim request description.",null,null],[3,"ClaimVote","","Lockdrop claim vote.",null,null],[3,"TickerRate","","Oracle dollar rate ticker.",null,null],[3,"GenesisConfig","","Genesis config for the module, allow to build genesis…",null,null],[12,"alpha","","Lockdrop alpha parameter, where α ∈ [0; 1]",1,null],[12,"dollar_rate","","Lockdrop dollar rate parameter: BTC, ETH.",1,null],[12,"vote_threshold","","How much authority votes module should receive to decide…",1,null],[12,"positive_votes","","How much positive votes requered to approve claim.…",1,null],[12,"ethereum_contract","","Ethereum lockdrop contract address.",1,null],[12,"lockdrop_end","","Timestamp of finishing lockdrop.",1,null],[3,"Module","","",null,null],[4,"Lockdrop","","Plasm Lockdrop parameters.",null,null],[13,"Bitcoin","","Bitcoin lockdrop is pretty simple: transaction sended with…",2,null],[12,"public","pallet_plasm_lockdrop::Lockdrop","",2,null],[12,"value","","",2,null],[12,"duration","","",2,null],[12,"transaction_hash","","",2,null],[13,"Ethereum","pallet_plasm_lockdrop","Ethereum lockdrop transactions is sended to pre-deployed…",2,null],[12,"public","pallet_plasm_lockdrop::Lockdrop","",2,null],[12,"value","","",2,null],[12,"duration","","",2,null],[12,"transaction_hash","","",2,null],[4,"RawEvent","pallet_plasm_lockdrop","Events for this module.",null,null],[13,"ClaimRequest","","Lockdrop token claims requested by user",3,null],[13,"ClaimResponse","","Lockdrop token claims response by authority",3,null],[13,"ClaimComplete","","Lockdrop token claim paid",3,null],[13,"NewDollarRate","","Dollar rate updated by oracle: BTC, ETH.",3,null],[13,"NewAuthorities","","New authority list registered",3,null],[4,"Error","","",null,null],[4,"Call","","Dispatchable calls.",null,null],[13,"request","","Request authorities to check locking transaction. TODO:…",4,null],[13,"claim","","Claim tokens according to lockdrop procedure. TODO: weight",4,null],[13,"vote","","Vote for claim request according to check results. (for…",4,null],[13,"set_dollar_rate","","Dollar Rate oracle entrypoint. (for authorities only)…",4,null],[0,"sr25519","","SR25519 keys support",null,null],[6,"AuthorityPair","pallet_plasm_lockdrop::sr25519","An authority keypair using sr25519 as its crypto.",null,null],[6,"AuthoritySignature","","An authority signature using sr25519 as its crypto.",null,null],[6,"AuthorityId","","An authority identifier using sr25519 as its crypto.",null,null],[0,"ed25519","pallet_plasm_lockdrop","ED25519 keys support",null,null],[6,"AuthorityPair","pallet_plasm_lockdrop::ed25519","An authority keypair using ed25519 as its crypto.",null,null],[6,"AuthoritySignature","","An authority signature using ed25519 as its crypto.",null,null],[6,"AuthorityId","","An authority identifier using ed25519 as its crypto.",null,null],[6,"BalanceOf","pallet_plasm_lockdrop","",null,null],[6,"ClaimId","","Claim id is a hash of claim parameters.",null,null],[6,"AuthorityVote","","Type for enumerating claim proof votes.",null,null],[6,"AuthorityIndex","","Type for enumerating authorities in list (2^16 authorities…",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[17,"KEY_TYPE","","Plasm Lockdrop Authority local KeyType.",null,null],[8,"PriceOracle","","HTTP source of currency price.",null,null],[10,"uri","","HTTP request URI",5,[[],["str"]]],[11,"fetch","","Fetch price data, parse it and return raw dollar rate.…",5,[[],["result"]]],[8,"ChainOracle","","HTTP source of blockchain transactions.",null,null],[10,"uri","","HTTP request URI",6,[[],["str"]]],[11,"fetch","","Fetch transaction data from source by given hash. Note:…",6,[[["asref"]],[["result",["transaction"]],["transaction"]]]],[8,"Trait","","The module's main configuration trait.",null,null],[16,"Currency","","The lockdrop balance.",7,null],[16,"MedianFilterExpire","","How long dollar rate parameters valid in secs.",7,null],[16,"MedianFilterWidth","","Median filter window size.",7,null],[16,"AuthorityId","","The identifier type for an authority.",7,null],[16,"Account","","System level account type. This used for resolving account…",7,null],[16,"Time","","Module that could provide timestamp.",7,null],[16,"Moment","","Timestamp type.",7,null],[16,"DollarRate","","Dollar rate number data type.",7,null],[16,"BalanceConvert","","",7,null],[16,"Event","","The regular events type.",7,null],[16,"UnsignedPriority","","Base priority for unsigned transactions.",7,null],[11,"requests","","Offchain lock check requests made within this block…",8,[[],[["vec",["claimid"]],["claimid"]]]],[11,"keys","","List of lockdrop authority id's.",8,[[],["vec"]]],[11,"claims","","Token claim requests.",8,[[["claimid"],["encodelike",["claimid"]]],["claim"]]],[11,"has_vote","","",8,[[["karg1"],["karg2"]],["bool"]]],[11,"alpha","","Lockdrop alpha parameter, where α ∈ [0; 1]",8,[[],["perbill"]]],[11,"dollar_rate","","Lockdrop dollar rate parameter: BTC, ETH.",8,[[]]],[11,"dollar_rate_f","","Lockdrop dollar rate median filter table: Time, BTC, ETH.",8,[[["encodelike"]]]],[11,"vote_threshold","","How much authority votes module should receive to decide…",8,[[],["authorityvote"]]],[11,"positive_votes","","How much positive votes requered to approve claim.…",8,[[],["authorityvote"]]],[11,"ethereum_contract","","Ethereum lockdrop contract address.",8,[[]]],[11,"lockdrop_end","","Timestamp of finishing lockdrop.",8,[[]]],[11,"build_storage","","Build the storage for this module.",1,[[["self"]],[["string"],["result",["storage","string"]],["storage"]]]],[11,"assimilate_storage","","Assimilate the storage for this module into pre-existing…",1,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"unchecked_into","","",9,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",9,[[],["t"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"unchecked_into","","",10,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",10,[[],["t"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"unchecked_into","","",11,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",11,[[],["t"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"unchecked_into","","",12,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",12,[[],["t"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"size_hint","","",13,[[["self"]],["usize"]]],[11,"using_encoded","","",13,[[["self"],["f"]],["r"]]],[11,"encode","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",13,[[["w"],["self"]]]],[11,"decode","","",13,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",13,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",13,[[["self"]]]],[11,"blake2_256","","",13,[[["self"]]]],[11,"blake2_128_concat","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",13,[[["self"]]]],[11,"twox_256","","",13,[[["self"]]]],[11,"twox_64_concat","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",13,[[["self"]],["bool"]]],[11,"clear","","",13,[[],["t"]]],[11,"unchecked_into","","",13,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",13,[[],["t"]]],[11,"vzip","","",13,[[],["v"]]],[11,"clear","","",13,[[["self"]]]],[11,"initialize","","",13,[[]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"size_hint","","",14,[[["self"]],["usize"]]],[11,"using_encoded","","",14,[[["self"],["f"]],["r"]]],[11,"encode","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",14,[[["w"],["self"]]]],[11,"decode","","",14,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",14,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",14,[[["self"]]]],[11,"blake2_256","","",14,[[["self"]]]],[11,"blake2_128_concat","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",14,[[["self"]]]],[11,"twox_256","","",14,[[["self"]]]],[11,"twox_64_concat","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",14,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",14,[[],["t"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"size_hint","","",15,[[["self"]],["usize"]]],[11,"using_encoded","","",15,[[["self"],["f"]],["r"]]],[11,"encode","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",15,[[["w"],["self"]]]],[11,"decode","","",15,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",15,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",15,[[["self"]]]],[11,"blake2_256","","",15,[[["self"]]]],[11,"blake2_128_concat","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",15,[[["self"]]]],[11,"twox_256","","",15,[[["self"]]]],[11,"twox_64_concat","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",15,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",15,[[],["t"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"unchecked_into","","",8,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",8,[[],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"decode","","",2,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",2,[[["self"]],["bool"]]],[11,"clear","","",2,[[],["t"]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",3,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",3,[[["self"]]]],[11,"blake2_256","","",3,[[["self"]]]],[11,"blake2_128_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",3,[[["self"]]]],[11,"twox_256","","",3,[[["self"]]]],[11,"twox_64_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"with_weight","","",16,[[["u64"]],[["postdispatchinfo"],["dispatcherrorwithpostinfo",["postdispatchinfo"]]]]],[11,"unchecked_into","","",16,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",16,[[],["t"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"size_hint","","",4,[[["self"]],["usize"]]],[11,"using_encoded","","",4,[[["self"],["f"]],["r"]]],[11,"encode","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",4,[[["w"],["self"]]]],[11,"decode","","",4,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",4,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",4,[[["self"]]]],[11,"blake2_256","","",4,[[["self"]]]],[11,"blake2_128_concat","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",4,[[["self"]]]],[11,"twox_256","","",4,[[["self"]]]],[11,"twox_64_concat","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"uri","","",9,[[],["str"]]],[11,"uri","","",10,[[],["str"]]],[11,"uri","","",11,[[],["str"]]],[11,"uri","","",12,[[],["str"]]],[11,"clone","","",0,[[["self"]],["transaction"]]],[11,"clone","","",2,[[["self"]],["lockdrop"]]],[11,"clone","","",13,[[["self"]],["claim"]]],[11,"clone","","",14,[[["self"]],["claimvote"]]],[11,"clone","","",15,[[["self"]],["tickerrate"]]],[11,"clone","","",3,[[["self"]],["rawevent"]]],[11,"clone","","",8,[[["self"]],["module"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"default","","",13,[[],["claim"]]],[11,"default","","",1,[[],["self"]]],[11,"eq","","",0,[[["transaction"],["self"]],["bool"]]],[11,"ne","","",0,[[["transaction"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["lockdrop"]],["bool"]]],[11,"ne","","",2,[[["self"],["lockdrop"]],["bool"]]],[11,"eq","","",13,[[["self"],["claim"]],["bool"]]],[11,"ne","","",13,[[["self"],["claim"]],["bool"]]],[11,"eq","","",14,[[["claimvote"],["self"]],["bool"]]],[11,"ne","","",14,[[["claimvote"],["self"]],["bool"]]],[11,"eq","","",15,[[["self"],["tickerrate"]],["bool"]]],[11,"ne","","",15,[[["self"],["tickerrate"]],["bool"]]],[11,"eq","","",3,[[["self"],["rawevent"]],["bool"]]],[11,"ne","","",3,[[["self"],["rawevent"]],["bool"]]],[11,"eq","","",8,[[["module"],["self"]],["bool"]]],[11,"ne","","",8,[[["module"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"encode_to","","",2,[[["self"],["encout"]]]],[11,"encode_to","","",13,[[["self"],["encout"]]]],[11,"encode_to","","",14,[[["self"],["encout"]]]],[11,"encode_to","","",15,[[["self"],["encout"]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"encode_to","","",4,[[["self"],["encout"]]]],[11,"decode","","",0,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",13,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",14,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",15,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",4,[[["decin"]],[["error"],["result",["error"]]]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"metadata","","",16,[[]]],[11,"metadata","","",8,[[]]],[11,"get_dispatch_info","","",4,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",4,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",4,[[["self"]],["str"]]],[11,"get_call_names","","",4,[[]]],[11,"validate_unsigned","","",8,[[["transactionsource"]],["transactionvalidity"]]],[11,"on_initialize","","",8,[[],["weight"]]],[11,"offchain_worker","","",8,[[]]],[11,"build_module_genesis_storage","","",1,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"on_genesis_session","","",8,[[["i"]]]],[11,"on_new_session","","",8,[[["i"],["bool"]]]],[11,"on_before_session_ending","","",8,[[]]],[11,"on_disabled","","",8,[[["usize"]]]],[11,"fetch","","Fetch price data, parse it and return raw dollar rate.…",5,[[],["result"]]],[11,"fetch","","Fetch transaction data from source by given hash. Note:…",6,[[["asref"]],[["result",["transaction"]],["transaction"]]]]],"p":[[3,"Transaction"],[3,"GenesisConfig"],[4,"Lockdrop"],[4,"RawEvent"],[4,"Call"],[8,"PriceOracle"],[8,"ChainOracle"],[8,"Trait"],[3,"Module"],[3,"BitcoinPrice"],[3,"EthereumPrice"],[3,"BitcoinChain"],[3,"EthereumChain"],[3,"Claim"],[3,"ClaimVote"],[3,"TickerRate"],[4,"Error"]]};
searchIndex["pallet_plasm_rewards"] = {"doc":"Plasm rewards Module","i":[[4,"Forcing","pallet_plasm_rewards","Mode of era-forcing.",null,null],[13,"NotForcing","","Not forcing anything - just let whatever happen.",0,null],[13,"ForceNew","","Force a new era, then reset to `NotForcing` as soon as it…",0,null],[13,"ForceNone","","Avoid a new era indefinitely.",0,null],[13,"ForceAlways","","Force a new era at the end of all sessions indefinitely.",0,null],[6,"SessionIndex","","Simple index type with which we can count sessions.",null,null],[3,"ActiveEraInfo","","Information regarding the active era (era in used in…",null,null],[12,"index","","Index of era.",1,null],[12,"start","","Moment of start",1,null],[3,"GenesisConfig","","Genesis config for the module, allow to build genesis…",null,null],[12,"history_depth","","Number of era to keep in history.",2,null],[12,"force_era","","True if the next session change will be a new era…",2,null],[3,"ForDappsEraReward","","This is the compensation paid for the dapps operator of…",null,null],[3,"ForSecurityEraReward","","This is the compensation paid for the security of the…",null,null],[3,"HistoryDepth","","Number of era to keep in history.",null,null],[3,"BondedEras","","A mapping from still-bonded eras to the first session…",null,null],[3,"CurrentEra","","The current era index.",null,null],[3,"ActiveEra","","The active era information, it holds index and start.",null,null],[3,"ErasStartSessionIndex","","The session index at which the era start for the last…",null,null],[3,"ForceEra","","True if the next session change will be a new era…",null,null],[3,"Module","","",null,null],[4,"Releases","","",null,null],[13,"V1_0_0","","",3,null],[4,"RawEvent","","Events for this module.",null,null],[13,"WholeEraReward","","The whole reward issued in that Era. (era_index: EraIndex,…",4,null],[4,"Error","","Error for the staking module.",null,null],[13,"DuplicateIndex","","Duplicate index.",5,null],[13,"InvalidEraToReward","","Invalid era to reward.",5,null],[4,"Call","","Dispatchable calls.",null,null],[13,"force_no_eras","","Force there to be no new eras indefinitely.",6,null],[13,"force_new_era","","Force there to be a new era at the end of the next…",6,null],[13,"force_new_era_always","","Force there to be a new era at the end of sessions…",6,null],[13,"set_history_depth","","Set history_depth value.",6,null],[0,"inflation","","This is explains plasm inflation models. The staking has 2…",null,null],[3,"FirstPlasmIncentive","pallet_plasm_rewards::inflation","",null,null],[3,"SimpleComputeTotalPayout","","",null,null],[3,"MaintainRatioComputeTotalPayout","","",null,null],[0,"traits","pallet_plasm_rewards","",null,null],[3,"DefaultForDappsStaking","pallet_plasm_rewards::traits","",null,null],[8,"ComputeEraWithParam","","Get the amount of staking per Era in a module in the Plasm…",null,null],[16,"Param","","",7,null],[10,"compute","","",7,[[["eraindex"]]]],[8,"ComputeTotalPayout","","The reward is allocated from the total supply of tokens,…",null,null],[10,"compute","","",8,[[["validatorparam"],["n"],["dappsparam"],["m"]]]],[8,"MaybeValidators","","Returns the next validator candidate.",null,null],[10,"compute","","",9,[[["eraindex"]],[["vec"],["option",["vec"]]]]],[8,"EraFinder","","Get the era for validator and dapps staking module.",null,null],[10,"current","","The current era index.",10,[[],["option"]]],[10,"active","","The active era information, it holds index and start.",10,[[],[["activeerainfo"],["option",["activeerainfo"]]]]],[10,"start_session_index","","The session index at which the era start for the last…",10,[[["eraindex"]],["option"]]],[8,"ForSecurityEraRewardFinder","","Get the security rewards for validator module.",null,null],[10,"get","","",11,[[["eraindex"]],["option"]]],[8,"ForDappsEraRewardFinder","","Get the dapps rewards for dapps staking module.",null,null],[10,"get","","",12,[[["eraindex"]],["option"]]],[8,"HistoryDepthFinder","","Get the history depth",null,null],[10,"get","","",13,[[],["u32"]]],[6,"EraIndex","pallet_plasm_rewards","",null,null],[6,"BalanceOf","","",null,null],[6,"MomentOf","","",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"Trait","","",null,null],[16,"Currency","","The staking balance.",14,null],[16,"Time","","Time used for computing era duration.",14,null],[16,"SessionsPerEra","","Number of sessions per era.",14,null],[16,"BondingDuration","","Number of eras that staked funds must remain bonded for.",14,null],[16,"ComputeEraForDapps","","Get the amount of staking for dapps per era.",14,null],[16,"ComputeEraForSecurity","","Get the amount of staking for security per era.",14,null],[16,"ComputeTotalPayout","","How to compute total issue PLM for rewards.",14,null],[16,"MaybeValidators","","Maybe next validators.",14,null],[16,"Event","","The overarching event type.",14,null],[11,"for_dapps_era_reward","","This is the compensation paid for the dapps operator of…",15,[[["eraindex"],["encodelike",["eraindex"]]],[["balanceof"],["option",["balanceof"]]]]],[11,"for_security_era_reward","","This is the compensation paid for the security of the…",15,[[["eraindex"],["encodelike",["eraindex"]]],[["balanceof"],["option",["balanceof"]]]]],[11,"history_depth","","Number of era to keep in history.",15,[[],["u32"]]],[11,"current_era","","The current era index.",15,[[],[["option",["eraindex"]],["eraindex"]]]],[11,"active_era","","The active era information, it holds index and start.",15,[[],[["option",["activeerainfo"]],["activeerainfo",["momentof"]]]]],[11,"eras_start_session_index","","The session index at which the era start for the last…",15,[[["eraindex"],["encodelike",["eraindex"]]],[["sessionindex"],["option",["sessionindex"]]]]],[11,"force_era","","True if the next session change will be a new era…",15,[[],["forcing"]]],[11,"build_storage","","Build the storage for this module.",2,[[["self"]],[["string"],["result",["storage","string"]],["storage"]]]],[11,"assimilate_storage","","Assimilate the storage for this module into pre-existing…",2,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",0,[[["self"]],["bool"]]],[11,"clear","","",0,[[],["t"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",16,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",16,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",16,[[["keyarg"]],["bool"]]],[11,"get","","",16,[[["keyarg"]]]],[11,"insert","","",16,[[["valarg"],["keyarg"]]]],[11,"remove","","",16,[[["keyarg"]]]],[11,"mutate","","",16,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",16,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",16,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",16,[[["f"],["keyarg"]],["result"]]],[11,"take","","",16,[[["keyarg"]]]],[11,"append","","",16,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",16,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",16,[[]]],[11,"drain","","Enumerate all elements in the map.",16,[[]]],[11,"translate","","",16,[[["f"]]]],[11,"unchecked_into","","",16,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",16,[[],["t"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",17,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",17,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",17,[[["keyarg"]],["bool"]]],[11,"get","","",17,[[["keyarg"]]]],[11,"insert","","",17,[[["valarg"],["keyarg"]]]],[11,"remove","","",17,[[["keyarg"]]]],[11,"mutate","","",17,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",17,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",17,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",17,[[["f"],["keyarg"]],["result"]]],[11,"take","","",17,[[["keyarg"]]]],[11,"append","","",17,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",17,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",17,[[]]],[11,"drain","","Enumerate all elements in the map.",17,[[]]],[11,"translate","","",17,[[["f"]]]],[11,"unchecked_into","","",17,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",17,[[],["t"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"hashed_key","","",18,[[]]],[11,"exists","","",18,[[],["bool"]]],[11,"get","","",18,[[]]],[11,"try_get","","",18,[[],["result"]]],[11,"translate","","",18,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",18,[[["arg"]]]],[11,"set","","",18,[[]]],[11,"kill","","",18,[[]]],[11,"mutate","","",18,[[["f"]],["r"]]],[11,"try_mutate","","",18,[[["f"]],["result"]]],[11,"take","","",18,[[]]],[11,"append","","",18,[[["encodelikeitem"]]]],[11,"unchecked_into","","",18,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",18,[[],["t"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"hashed_key","","",19,[[]]],[11,"exists","","",19,[[],["bool"]]],[11,"get","","",19,[[]]],[11,"try_get","","",19,[[],["result"]]],[11,"translate","","",19,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",19,[[["arg"]]]],[11,"set","","",19,[[]]],[11,"kill","","",19,[[]]],[11,"mutate","","",19,[[["f"]],["r"]]],[11,"try_mutate","","",19,[[["f"]],["result"]]],[11,"take","","",19,[[]]],[11,"append","","",19,[[["encodelikeitem"]]]],[11,"unchecked_into","","",19,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",19,[[],["t"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"hashed_key","","",20,[[]]],[11,"exists","","",20,[[],["bool"]]],[11,"get","","",20,[[]]],[11,"try_get","","",20,[[],["result"]]],[11,"translate","","",20,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",20,[[["arg"]]]],[11,"set","","",20,[[]]],[11,"kill","","",20,[[]]],[11,"mutate","","",20,[[["f"]],["r"]]],[11,"try_mutate","","",20,[[["f"]],["result"]]],[11,"take","","",20,[[]]],[11,"append","","",20,[[["encodelikeitem"]]]],[11,"unchecked_into","","",20,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",20,[[],["t"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"hashed_key","","",21,[[]]],[11,"exists","","",21,[[],["bool"]]],[11,"get","","",21,[[]]],[11,"try_get","","",21,[[],["result"]]],[11,"translate","","",21,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",21,[[["arg"]]]],[11,"set","","",21,[[]]],[11,"kill","","",21,[[]]],[11,"mutate","","",21,[[["f"]],["r"]]],[11,"try_mutate","","",21,[[["f"]],["result"]]],[11,"take","","",21,[[]]],[11,"append","","",21,[[["encodelikeitem"]]]],[11,"unchecked_into","","",21,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",21,[[],["t"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",22,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",22,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",22,[[["keyarg"]],["bool"]]],[11,"get","","",22,[[["keyarg"]]]],[11,"insert","","",22,[[["valarg"],["keyarg"]]]],[11,"remove","","",22,[[["keyarg"]]]],[11,"mutate","","",22,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",22,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",22,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",22,[[["f"],["keyarg"]],["result"]]],[11,"take","","",22,[[["keyarg"]]]],[11,"append","","",22,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",22,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",22,[[]]],[11,"drain","","Enumerate all elements in the map.",22,[[]]],[11,"translate","","",22,[[["f"]]]],[11,"unchecked_into","","",22,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",22,[[],["t"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"hashed_key","","",23,[[]]],[11,"exists","","",23,[[],["bool"]]],[11,"get","","",23,[[]]],[11,"try_get","","",23,[[],["result"]]],[11,"translate","","",23,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",23,[[["arg"]]]],[11,"set","","",23,[[]]],[11,"kill","","",23,[[]]],[11,"mutate","","",23,[[["f"]],["r"]]],[11,"try_mutate","","",23,[[["f"]],["result"]]],[11,"take","","",23,[[]]],[11,"append","","",23,[[["encodelikeitem"]]]],[11,"unchecked_into","","",23,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",23,[[],["t"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"unchecked_into","","",15,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",15,[[],["t"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",3,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",3,[[["self"]]]],[11,"blake2_256","","",3,[[["self"]]]],[11,"blake2_128_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",3,[[["self"]]]],[11,"twox_256","","",3,[[["self"]]]],[11,"twox_64_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",3,[[["self"]],["bool"]]],[11,"clear","","",3,[[],["t"]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"size_hint","","",4,[[["self"]],["usize"]]],[11,"using_encoded","","",4,[[["self"],["f"]],["r"]]],[11,"encode","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",4,[[["w"],["self"]]]],[11,"decode","","",4,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",4,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",4,[[["self"]]]],[11,"blake2_256","","",4,[[["self"]]]],[11,"blake2_128_concat","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",4,[[["self"]]]],[11,"twox_256","","",4,[[["self"]]]],[11,"twox_64_concat","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"with_weight","","",5,[[["u64"]],[["postdispatchinfo"],["dispatcherrorwithpostinfo",["postdispatchinfo"]]]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"size_hint","","",6,[[["self"]],["usize"]]],[11,"using_encoded","","",6,[[["self"],["f"]],["r"]]],[11,"encode","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",6,[[["w"],["self"]]]],[11,"decode","","",6,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",6,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",6,[[["self"]]]],[11,"blake2_256","","",6,[[["self"]]]],[11,"blake2_128_concat","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",6,[[["self"]]]],[11,"twox_256","","",6,[[["self"]]]],[11,"twox_64_concat","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","pallet_plasm_rewards::inflation","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"unchecked_into","","",24,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",24,[[],["t"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"unchecked_into","","",25,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",25,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",25,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",25,[[],["t"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"unchecked_into","","",26,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",26,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",26,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",26,[[],["t"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","pallet_plasm_rewards::traits","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"unchecked_into","","",27,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",27,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",27,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",27,[[],["t"]]],[11,"vzip","","",27,[[],["v"]]],[11,"clone","pallet_plasm_rewards","",0,[[["self"]],["forcing"]]],[11,"eq","","",0,[[["forcing"],["self"]],["bool"]]],[11,"decode","","",0,[[["decin"]],[["error"],["result",["forcing","error"]],["forcing"]]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"deserialize","","",0,[[["__d"]],[["forcing"],["result",["forcing"]]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"default","","",0,[[],["forcing"]]],[11,"compute","pallet_plasm_rewards::traits","",27,[[["eraindex"]],["balanceof"]]],[11,"compute","pallet_plasm_rewards::inflation","",24,[[["n"],["m"],["d"],["l"]]]],[11,"compute","","",25,[[["n"],["m"],["d"],["v"]]]],[11,"compute","","",26,[[["m"],["balance"],["n"]]]],[11,"current","pallet_plasm_rewards","",15,[[],[["option",["eraindex"]],["eraindex"]]]],[11,"active","","",15,[[],[["option",["activeerainfo"]],["activeerainfo",["momentof"]]]]],[11,"start_session_index","","",15,[[["eraindex"]],[["sessionindex"],["option",["sessionindex"]]]]],[11,"get","","",15,[[["eraindex"]],[["balanceof"],["option",["balanceof"]]]]],[11,"get","","",15,[[["eraindex"]],[["balanceof"],["option",["balanceof"]]]]],[11,"get","","",15,[[],["u32"]]],[11,"clone","","",3,[[["self"]],["releases"]]],[11,"clone","","",4,[[["self"]],["rawevent"]]],[11,"clone","","",15,[[["self"]],["module"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",2,[[],["self"]]],[11,"eq","","",3,[[["releases"],["self"]],["bool"]]],[11,"eq","","",1,[[["activeerainfo"],["self"]],["bool"]]],[11,"ne","","",1,[[["activeerainfo"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["rawevent"]],["bool"]]],[11,"ne","","",4,[[["self"],["rawevent"]],["bool"]]],[11,"eq","","",15,[[["self"],["module"]],["bool"]]],[11,"ne","","",15,[[["self"],["module"]],["bool"]]],[11,"eq","","",6,[[["self"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",4,[[["self"],["encout"]]]],[11,"encode_to","","",6,[[["self"],["encout"]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",4,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",6,[[["decin"]],[["error"],["result",["error"]]]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"metadata","","",5,[[]]],[11,"metadata","","",15,[[]]],[11,"get_dispatch_info","","",6,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",6,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",6,[[["self"]],["str"]]],[11,"get_call_names","","",6,[[]]],[11,"module_prefix","","",16,[[]]],[11,"storage_prefix","","",16,[[]]],[11,"from_optional_value_to_query","","",16,[[["balanceof"],["option",["balanceof"]]]]],[11,"from_query_to_optional_value","","",16,[[],[["balanceof"],["option",["balanceof"]]]]],[11,"module_prefix","","",17,[[]]],[11,"storage_prefix","","",17,[[]]],[11,"from_optional_value_to_query","","",17,[[["balanceof"],["option",["balanceof"]]]]],[11,"from_query_to_optional_value","","",17,[[],[["balanceof"],["option",["balanceof"]]]]],[11,"module_prefix","","",22,[[]]],[11,"storage_prefix","","",22,[[]]],[11,"from_optional_value_to_query","","",22,[[["option",["sessionindex"]],["sessionindex"]]]],[11,"from_query_to_optional_value","","",22,[[],[["sessionindex"],["option",["sessionindex"]]]]],[11,"module_prefix","","",18,[[]]],[11,"storage_prefix","","",18,[[]]],[11,"from_optional_value_to_query","","",18,[[["u32"],["option",["u32"]]]]],[11,"from_query_to_optional_value","","",18,[[],[["u32"],["option",["u32"]]]]],[11,"module_prefix","","",19,[[]]],[11,"storage_prefix","","",19,[[]]],[11,"from_optional_value_to_query","","",19,[[["option",["vec"]],["vec"]]]],[11,"from_query_to_optional_value","","",19,[[],[["vec"],["option",["vec"]]]]],[11,"module_prefix","","",20,[[]]],[11,"storage_prefix","","",20,[[]]],[11,"from_optional_value_to_query","","",20,[[["option",["eraindex"]],["eraindex"]]]],[11,"from_query_to_optional_value","","",20,[[],[["option",["eraindex"]],["eraindex"]]]],[11,"module_prefix","","",21,[[]]],[11,"storage_prefix","","",21,[[]]],[11,"from_optional_value_to_query","","",21,[[["option",["activeerainfo"]],["activeerainfo",["momentof"]]]]],[11,"from_query_to_optional_value","","",21,[[],[["option",["activeerainfo"]],["activeerainfo",["momentof"]]]]],[11,"module_prefix","","",23,[[]]],[11,"storage_prefix","","",23,[[]]],[11,"from_optional_value_to_query","","",23,[[["option",["forcing"]],["forcing"]]]],[11,"from_query_to_optional_value","","",23,[[],[["option",["forcing"]],["forcing"]]]],[11,"module_prefix","","",16,[[]]],[11,"storage_prefix","","",16,[[]]],[11,"module_prefix","","",17,[[]]],[11,"storage_prefix","","",17,[[]]],[11,"module_prefix","","",22,[[]]],[11,"storage_prefix","","",22,[[]]],[11,"on_finalize","","",15,[[]]],[11,"on_runtime_upgrade","","",15,[[],["weight"]]],[11,"build_module_genesis_storage","","",2,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"new_session","","",15,[[["sessionindex"]],[["option",["vec"]],["vec"]]]],[11,"start_session","","",15,[[["sessionindex"]]]],[11,"end_session","","",15,[[["sessionindex"]]]]],"p":[[4,"Forcing"],[3,"ActiveEraInfo"],[3,"GenesisConfig"],[4,"Releases"],[4,"RawEvent"],[4,"Error"],[4,"Call"],[8,"ComputeEraWithParam"],[8,"ComputeTotalPayout"],[8,"MaybeValidators"],[8,"EraFinder"],[8,"ForSecurityEraRewardFinder"],[8,"ForDappsEraRewardFinder"],[8,"HistoryDepthFinder"],[8,"Trait"],[3,"Module"],[3,"ForDappsEraReward"],[3,"ForSecurityEraReward"],[3,"HistoryDepth"],[3,"BondedEras"],[3,"CurrentEra"],[3,"ActiveEra"],[3,"ErasStartSessionIndex"],[3,"ForceEra"],[3,"FirstPlasmIncentive"],[3,"SimpleComputeTotalPayout"],[3,"MaintainRatioComputeTotalPayout"],[3,"DefaultForDappsStaking"]]};
searchIndex["pallet_plasm_validator"] = {"doc":"Plasm Staking Module","i":[[6,"SessionIndex","pallet_plasm_validator","Simple index type with which we can count sessions.",null,null],[3,"GenesisConfig","","Genesis config for the module, allow to build genesis…",null,null],[12,"validators","","Set of next era accounts that can validate blocks.",0,null],[3,"UntreatedEra","","The already untreated era is EraIndex.",null,null],[3,"ElectedValidators","","The currently elected validator set keyed by stash account…",null,null],[3,"Validators","","Set of next era accounts that can validate blocks.",null,null],[3,"Module","","",null,null],[4,"Call","","Dispatchable calls.",null,null],[13,"set_validators","","Manually set new validators.",1,null],[4,"RawEvent","","Events for this module.",null,null],[13,"NewValidators","","Validator set changed.",2,null],[13,"ValidatorReward","","The amount of minted rewards for validators.",2,null],[13,"TotalValidatorRewards","","The total amount of minted rewards for validators.",2,null],[6,"BalanceOf","","",null,null],[6,"MomentOf","","",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"ComputeEraOnModule","","",null,null],[10,"compute","","",3,[[["eraindex"]],["param"]]],[8,"Trait","","",null,null],[16,"Currency","","The staking balance.",4,null],[16,"Time","","Time used for computing era duration.",4,null],[16,"RewardRemainder","","Tokens have been minted and are unused for…",4,null],[16,"Reward","","Handler for the unbalanced increment when rewarding a…",4,null],[16,"EraFinder","","The information of era.",4,null],[16,"ForSecurityEraReward","","The rewards for validators.",4,null],[16,"ComputeEraParam","","The return type of ComputeEraWithParam.",4,null],[16,"ComputeEra","","Acutually computing of ComputeEraWithParam.",4,null],[16,"Event","","The overarching event type.",4,null],[11,"untreated_era","","The already untreated era is EraIndex.",5,[[],["eraindex"]]],[11,"elected_validators","","The currently elected validator set keyed by stash account…",5,[[["eraindex"],["encodelike",["eraindex"]]],[["option",["vec"]],["vec"]]]],[11,"validators","","Set of next era accounts that can validate blocks.",5,[[],["vec"]]],[11,"build_storage","","Build the storage for this module.",0,[[["self"]],[["string"],["result",["storage","string"]],["storage"]]]],[11,"assimilate_storage","","Assimilate the storage for this module into pre-existing…",0,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"reward_to_validators","","",5,[[["eraindex"],["balanceof"]],["balanceof"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"hashed_key","","",6,[[]]],[11,"exists","","",6,[[],["bool"]]],[11,"get","","",6,[[]]],[11,"try_get","","",6,[[],["result"]]],[11,"translate","","",6,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",6,[[["arg"]]]],[11,"set","","",6,[[]]],[11,"kill","","",6,[[]]],[11,"mutate","","",6,[[["f"]],["r"]]],[11,"try_mutate","","",6,[[["f"]],["result"]]],[11,"take","","",6,[[]]],[11,"append","","",6,[[["encodelikeitem"]]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"hashed_key_for","","",7,[[["keyarg"]],[["vec",["u8"]],["u8"]]]],[11,"swap","","",7,[[["keyarg1"],["keyarg2"]]]],[11,"contains_key","","",7,[[["keyarg"]],["bool"]]],[11,"get","","",7,[[["keyarg"]]]],[11,"insert","","",7,[[["valarg"],["keyarg"]]]],[11,"remove","","",7,[[["keyarg"]]]],[11,"mutate","","",7,[[["f"],["keyarg"]],["r"]]],[11,"mutate_exists","","",7,[[["f"],["keyarg"]],["r"]]],[11,"try_mutate","","",7,[[["f"],["keyarg"]],["result"]]],[11,"try_mutate_exists","","",7,[[["f"],["keyarg"]],["result"]]],[11,"take","","",7,[[["keyarg"]]]],[11,"append","","",7,[[["encodelikeitem"],["encodelikekey"]]]],[11,"migrate_key","","",7,[[["keyarg"]],["option"]]],[11,"iter","","Enumerate all elements in the map.",7,[[]]],[11,"drain","","Enumerate all elements in the map.",7,[[]]],[11,"translate","","",7,[[["f"]]]],[11,"unchecked_into","","",7,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",7,[[],["t"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"hashed_key","","",8,[[]]],[11,"exists","","",8,[[],["bool"]]],[11,"get","","",8,[[]]],[11,"try_get","","",8,[[],["result"]]],[11,"translate","","",8,[[["f"]],[["option"],["result",["option"]]]]],[11,"put","","",8,[[["arg"]]]],[11,"set","","",8,[[]]],[11,"kill","","",8,[[]]],[11,"mutate","","",8,[[["f"]],["r"]]],[11,"try_mutate","","",8,[[["f"]],["result"]]],[11,"take","","",8,[[]]],[11,"append","","",8,[[["encodelikeitem"]]]],[11,"unchecked_into","","",8,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",8,[[],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"decode","","",1,[[["i"]],[["result",["error"]],["error"]]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["result",["error"]],["error"]]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"decode","","",2,[[["i"]],[["result",["error"]],["error"]]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["result",["error"]],["error"]]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"compute","","",5,[[["eraindex"]],["u32"]]],[11,"clone","","",5,[[["self"]],["module"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["rawevent"]]],[11,"default","","",0,[[],["self"]]],[11,"eq","","",5,[[["module"],["self"]],["bool"]]],[11,"ne","","",5,[[["module"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["rawevent"]],["bool"]]],[11,"ne","","",2,[[["self"],["rawevent"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",2,[[["self"],["encout"]]]],[11,"metadata","","",5,[[]]],[11,"get_dispatch_info","","",1,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",1,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",1,[[["self"]],["str"]]],[11,"get_call_names","","",1,[[]]],[11,"module_prefix","","",7,[[]]],[11,"storage_prefix","","",7,[[]]],[11,"from_optional_value_to_query","","",7,[[["option",["vec"]],["vec"]]]],[11,"from_query_to_optional_value","","",7,[[],[["option",["vec"]],["vec"]]]],[11,"module_prefix","","",6,[[]]],[11,"storage_prefix","","",6,[[]]],[11,"from_optional_value_to_query","","",6,[[["option",["eraindex"]],["eraindex"]]]],[11,"from_query_to_optional_value","","",6,[[],[["option",["eraindex"]],["eraindex"]]]],[11,"module_prefix","","",8,[[]]],[11,"storage_prefix","","",8,[[]]],[11,"from_optional_value_to_query","","",8,[[["option",["vec"]],["vec"]]]],[11,"from_query_to_optional_value","","",8,[[],[["option",["vec"]],["vec"]]]],[11,"module_prefix","","",7,[[]]],[11,"storage_prefix","","",7,[[]]],[11,"on_finalize","","",5,[[]]],[11,"serialize","","",0,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",0,[[["__d"]],["result"]]],[11,"build_module_genesis_storage","","",0,[[["storage"],["self"]],[["string"],["result",["string"]]]]],[11,"compute","","",5,[[["eraindex"]]]],[11,"compute","","",5,[[["eraindex"]],[["option",["vec"]],["vec"]]]]],"p":[[3,"GenesisConfig"],[4,"Call"],[4,"RawEvent"],[8,"ComputeEraOnModule"],[8,"Trait"],[3,"Module"],[3,"UntreatedEra"],[3,"ElectedValidators"],[3,"Validators"]]};
searchIndex["pallet_plasma"] = {"doc":"Plasma Module","i":[[4,"Decision","pallet_plasma","The game decision by predicates.",null,null],[13,"Undecided","","",0,null],[13,"True","","",0,null],[13,"False","","",0,null],[3,"Property","","Property stands for dispute logic and we can claim every…",null,null],[12,"predicate_address","","Indicates the address of Predicate.",1,null],[12,"inputs","","Every input are bytes. Each Atomic Predicate decode inputs…",1,null],[6,"PropertyOf","","",null,null],[3,"Deserializer","","",null,null],[3,"Range","","",null,null],[3,"StateUpdate","","",null,null],[3,"Checkpoint","","",null,null],[3,"Exit","","",null,null],[3,"InclusionProof","","",null,null],[3,"IntervalInclusionProof","","",null,null],[3,"AddressInclusionProof","","",null,null],[3,"IntervalTreeNode","","",null,null],[3,"AddressTreeNode","","",null,null],[3,"ExitDeposit","","",null,null],[3,"SimpleAddressDeterminer","","Simple plapps address determiner.",null,null],[3,"Module","","",null,null],[4,"RawEvent","","Events for this module.",null,null],[13,"Deploy","","Deplpoyed Plapps. (creator: AccountId, plapps_id: AccountId)",2,null],[13,"BlockSubmitted","","Event definitions (AccountID: PlappsAddress, BlockNumber,…",2,null],[13,"CheckpointFinalized","","(AccountID: PlappsAddress, checkpointId: Hash, checkpoint:…",2,null],[13,"ExitFinalized","","(AccountID: PlappsAddress, exit_id: Hash)",2,null],[13,"DepositedRangeExtended","","(AccountID: PlappsAddress, new_range: Range)",2,null],[13,"DepositedRangeRemoved","","(AccountID: PlappsAddress, removed_range: Range)",2,null],[4,"Call","","Dispatchable calls.",null,null],[13,"deploy","","Commitment constructor + Deposit constructor TODO: weight",3,null],[13,"submit_root","","Submit root hash of Plasma chain. TODO: weight",3,null],[13,"deposit","","deposit ERC20 token to deposit contract with initial…",3,null],[13,"extend_deposited_ranges","","TODO: weight, not external",3,null],[13,"remove_deposited_range","","TODO: weight, not external",3,null],[13,"finalize_checkpoint","","finalizeCheckpoint - @param _checkpointProperty A property…",3,null],[13,"finalize_exit","","finalizeExit - @param _exitProperty A property which is…",3,null],[4,"Error","","Error for the staking module.",null,null],[13,"IsNotAggregator","","Sender isn't valid aggregator.",4,null],[13,"BlockNumberShouldBeNextBlock","","blkNumber should be next block.",4,null],[13,"LeftMustBeLessThanRight","","leftStart must be less than _rightStart",4,null],[13,"FirstRightMustBeGreaterThanSibling","","firstRightSiblingStart must be greater than siblingStart",4,null],[13,"RangeMustNotExceedTheImplicitRange","","required range must not exceed the implicit range",4,null],[13,"AddressMustNotExceedTheImplicitAddress","","required address must not exceed the implicit address",4,null],[13,"TotalDepositedExceedMaxBalance","","DepositContract: totalDeposited exceed max uint256",4,null],[13,"MustApproved","","must approved",4,null],[13,"RangeMustBeOfDepositedRange","","range must be of a depostied range (the one that has not…",4,null],[13,"ClaimMustBeDecided","","Checkpointing claim must be decied",4,null],[13,"MustBeDecodable","","Must decode from checkpointInputs[0] to Property.",4,null],[13,"ExitMustBeDecided","","Exit must be decided after this block",4,null],[13,"FinalizeExitMustBeCalledFromPayout","","finalizeExit must be called from payout contract",4,null],[13,"OriginMustBeOwner","","origin must be owner",4,null],[13,"CheckpointMustBeFinalized","","checkpoint must be finalized",4,null],[13,"DepositContractAddressMustBeSame","","depositContractAddress must be same",4,null],[13,"BlockNumberMustBeSame","","blockNumber must be same,",4,null],[13,"RangeMustBeSubrangeOfCheckpoint","","range must be subrange of checkpoint",4,null],[13,"DepositContractAddressMustBePlappsId","","StateUpdate.depositContractAddress must be this contract…",4,null],[11,"deserialize_exit","","@dev deserialize property to Exit instance",5,[[["propertyof"]],[["dispatchresultt",["exitof"]],["exitof"]]]],[11,"deserialize_exit_deposit","","@dev deserialize property to Exit_deposit instance",5,[[["propertyof"]],[["dispatchresultt",["exitdepositof"]],["exitdepositof"]]]],[11,"deserialize_state_update","","@dev deserialize property to State_update instance",5,[[["propertyof"]],[["stateupdateof"],["dispatchresultt",["stateupdateof"]]]]],[11,"deserialize_checkpoint","","",5,[[["propertyof"]],[["dispatchresultt",["checkpointof"]],["checkpointof"]]]],[6,"DispatchResultT","","",null,null],[6,"BalanceOf","","",null,null],[6,"CheckpointOf","","",null,null],[6,"ExitDepositOf","","",null,null],[6,"RangeOf","","",null,null],[6,"ExitOf","","",null,null],[6,"StateUpdateOf","","",null,null],[6,"InclusionProofOf","","",null,null],[6,"IntervalInclusionProofOf","","",null,null],[6,"IntervalTreeNodeOf","","",null,null],[6,"AddressInclusionProofOf","","",null,null],[6,"AddressTreeNodeOf","","",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"PlappsAddressFor","","",null,null],[10,"plapps_address_for","","",6,[[["accountid"],["hash"]],["accountid"]]],[8,"Trait","","",null,null],[16,"Currency","","Plasma Range's currency.",7,null],[16,"DeterminePlappsAddress","","A function type to get the contract address given the…",7,null],[16,"MaximumTokenAddress","","The using initial right over token address.",7,null],[16,"PlasmaHashing","","The hashing system (algorithm) being used in the Plasma…",7,null],[16,"Event","","The overarching event type.",7,null],[11,"aggregator_address","","Single aggregator address: AggregatorId",8,[[["encodelike"]]]],[11,"current_block","","Current block number of commitment chain: BlockNumber",8,[[["encodelike"]]]],[11,"blocks","","",8,[[["karg1"],["karg2"]]]],[11,"erc20","","mapping from Plapps address to ERC20 based contract address.",8,[[["encodelike"]]]],[11,"state_update_predicate","","mapping from Plapps address to StateUpdate predicate…",8,[[["encodelike"]]]],[11,"exit_predicate","","mapping from Plapps address to Exit predicate address.",8,[[["encodelike"]]]],[11,"exit_deposit_predicate","","mapping from Plapps address to ExitDeposit predicate…",8,[[["encodelike"]]]],[11,"total_deposited","","TotalDeposited is the most right coin id which has been…",8,[[["encodelike"]],["balanceof"]]],[11,"deposited_ranges","","",8,[[["karg1"],["karg2"]],["rangeof"]]],[11,"checkpoints","","",8,[[["karg1"],["karg2"]],["bool"]]],[11,"payout","","predicate address => payout address",8,[[["encodelike"]]]],[11,"retrieve","","",8,[[]]],[11,"verify_inclusion","","verifyInclusion method verifies inclusion of message in…",8,[[["inclusionproofof"],["rangeof"]],[["bool"],["dispatchresultt",["bool"]]]]],[11,"verify_inclusion_with_root","","",8,[[["inclusionproofof"],["rangeof"]],[["bool"],["dispatchresultt",["bool"]]]]],[11,"bare_extend_deposited_ranges","","",8,[[["balanceof"]]]],[11,"bare_remove_deposited_range","","",8,[[["rangeof"],["balanceof"]],["dispatchresult"]]],[11,"bare_finalize_exit","","bare_finalize_exit called by this module. - @param…",8,[[["balanceof"],["propertyof"]],[["stateupdateof"],["dispatchresultt",["stateupdateof"]]]]],[11,"verify_exit_property","","@dev verify StateUpdate in Exit property. _exitProperty…",8,[[["propertyof"]],[["stateupdateof"],["dispatchresultt",["stateupdateof"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",1,[[["self"]],["bool"]]],[11,"clear","","",1,[[],["t"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"size_hint","","",9,[[["self"]],["usize"]]],[11,"using_encoded","","",9,[[["self"],["f"]],["r"]]],[11,"encode","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",9,[[["w"],["self"]]]],[11,"decode","","",9,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",9,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",9,[[["self"]]]],[11,"blake2_256","","",9,[[["self"]]]],[11,"blake2_128_concat","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",9,[[["self"]]]],[11,"twox_256","","",9,[[["self"]]]],[11,"twox_64_concat","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",9,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",9,[[["self"]],["bool"]]],[11,"clear","","",9,[[],["t"]]],[11,"unchecked_into","","",9,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",9,[[],["t"]]],[11,"vzip","","",9,[[],["v"]]],[11,"clear","","",9,[[["self"]]]],[11,"initialize","","",9,[[]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"size_hint","","",10,[[["self"]],["usize"]]],[11,"using_encoded","","",10,[[["self"],["f"]],["r"]]],[11,"encode","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",10,[[["w"],["self"]]]],[11,"decode","","",10,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",10,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",10,[[["self"]]]],[11,"blake2_256","","",10,[[["self"]]]],[11,"blake2_128_concat","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",10,[[["self"]]]],[11,"twox_256","","",10,[[["self"]]]],[11,"twox_64_concat","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",10,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",10,[[["self"]],["bool"]]],[11,"clear","","",10,[[],["t"]]],[11,"unchecked_into","","",10,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",10,[[],["t"]]],[11,"vzip","","",10,[[],["v"]]],[11,"clear","","",10,[[["self"]]]],[11,"initialize","","",10,[[]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"size_hint","","",11,[[["self"]],["usize"]]],[11,"using_encoded","","",11,[[["self"],["f"]],["r"]]],[11,"encode","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",11,[[["w"],["self"]]]],[11,"decode","","",11,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",11,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",11,[[["self"]]]],[11,"blake2_256","","",11,[[["self"]]]],[11,"blake2_128_concat","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",11,[[["self"]]]],[11,"twox_256","","",11,[[["self"]]]],[11,"twox_64_concat","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",11,[[["self"]],["bool"]]],[11,"clear","","",11,[[],["t"]]],[11,"unchecked_into","","",11,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",11,[[],["t"]]],[11,"vzip","","",11,[[],["v"]]],[11,"clear","","",11,[[["self"]]]],[11,"initialize","","",11,[[]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"size_hint","","",12,[[["self"]],["usize"]]],[11,"using_encoded","","",12,[[["self"],["f"]],["r"]]],[11,"encode","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",12,[[["w"],["self"]]]],[11,"decode","","",12,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",12,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",12,[[["self"]]]],[11,"blake2_256","","",12,[[["self"]]]],[11,"blake2_128_concat","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",12,[[["self"]]]],[11,"twox_256","","",12,[[["self"]]]],[11,"twox_64_concat","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",12,[[["self"]],["bool"]]],[11,"clear","","",12,[[],["t"]]],[11,"unchecked_into","","",12,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",12,[[],["t"]]],[11,"vzip","","",12,[[],["v"]]],[11,"clear","","",12,[[["self"]]]],[11,"initialize","","",12,[[]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"size_hint","","",13,[[["self"]],["usize"]]],[11,"using_encoded","","",13,[[["self"],["f"]],["r"]]],[11,"encode","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",13,[[["w"],["self"]]]],[11,"decode","","",13,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",13,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",13,[[["self"]]]],[11,"blake2_256","","",13,[[["self"]]]],[11,"blake2_128_concat","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",13,[[["self"]]]],[11,"twox_256","","",13,[[["self"]]]],[11,"twox_64_concat","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",13,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",13,[[["self"]],["bool"]]],[11,"clear","","",13,[[],["t"]]],[11,"unchecked_into","","",13,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",13,[[],["t"]]],[11,"vzip","","",13,[[],["v"]]],[11,"clear","","",13,[[["self"]]]],[11,"initialize","","",13,[[]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"size_hint","","",14,[[["self"]],["usize"]]],[11,"using_encoded","","",14,[[["self"],["f"]],["r"]]],[11,"encode","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",14,[[["w"],["self"]]]],[11,"decode","","",14,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",14,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",14,[[["self"]]]],[11,"blake2_256","","",14,[[["self"]]]],[11,"blake2_128_concat","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",14,[[["self"]]]],[11,"twox_256","","",14,[[["self"]]]],[11,"twox_64_concat","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",14,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",14,[[["self"]],["bool"]]],[11,"clear","","",14,[[],["t"]]],[11,"unchecked_into","","",14,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",14,[[],["t"]]],[11,"vzip","","",14,[[],["v"]]],[11,"clear","","",14,[[["self"]]]],[11,"initialize","","",14,[[]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"size_hint","","",15,[[["self"]],["usize"]]],[11,"using_encoded","","",15,[[["self"],["f"]],["r"]]],[11,"encode","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",15,[[["w"],["self"]]]],[11,"decode","","",15,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",15,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",15,[[["self"]]]],[11,"blake2_256","","",15,[[["self"]]]],[11,"blake2_128_concat","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",15,[[["self"]]]],[11,"twox_256","","",15,[[["self"]]]],[11,"twox_64_concat","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",15,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",15,[[["self"]],["bool"]]],[11,"clear","","",15,[[],["t"]]],[11,"unchecked_into","","",15,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",15,[[],["t"]]],[11,"vzip","","",15,[[],["v"]]],[11,"clear","","",15,[[["self"]]]],[11,"initialize","","",15,[[]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"size_hint","","",16,[[["self"]],["usize"]]],[11,"using_encoded","","",16,[[["self"],["f"]],["r"]]],[11,"encode","","",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",16,[[["w"],["self"]]]],[11,"decode","","",16,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",16,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",16,[[["self"]]]],[11,"blake2_256","","",16,[[["self"]]]],[11,"blake2_128_concat","","",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",16,[[["self"]]]],[11,"twox_256","","",16,[[["self"]]]],[11,"twox_64_concat","","",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",16,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",16,[[["self"]],["bool"]]],[11,"clear","","",16,[[],["t"]]],[11,"unchecked_into","","",16,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",16,[[],["t"]]],[11,"vzip","","",16,[[],["v"]]],[11,"clear","","",16,[[["self"]]]],[11,"initialize","","",16,[[]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"size_hint","","",17,[[["self"]],["usize"]]],[11,"using_encoded","","",17,[[["self"],["f"]],["r"]]],[11,"encode","","",17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",17,[[["w"],["self"]]]],[11,"decode","","",17,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",17,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",17,[[["self"]]]],[11,"blake2_256","","",17,[[["self"]]]],[11,"blake2_128_concat","","",17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",17,[[["self"]]]],[11,"twox_256","","",17,[[["self"]]]],[11,"twox_64_concat","","",17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",17,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",17,[[["self"]],["bool"]]],[11,"clear","","",17,[[],["t"]]],[11,"unchecked_into","","",17,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",17,[[],["t"]]],[11,"vzip","","",17,[[],["v"]]],[11,"clear","","",17,[[["self"]]]],[11,"initialize","","",17,[[]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"size_hint","","",18,[[["self"]],["usize"]]],[11,"using_encoded","","",18,[[["self"],["f"]],["r"]]],[11,"encode","","",18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",18,[[["w"],["self"]]]],[11,"decode","","",18,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",18,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",18,[[["self"]]]],[11,"blake2_256","","",18,[[["self"]]]],[11,"blake2_128_concat","","",18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",18,[[["self"]]]],[11,"twox_256","","",18,[[["self"]]]],[11,"twox_64_concat","","",18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",18,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",18,[[["self"]],["bool"]]],[11,"clear","","",18,[[],["t"]]],[11,"unchecked_into","","",18,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",18,[[],["t"]]],[11,"vzip","","",18,[[],["v"]]],[11,"clear","","",18,[[["self"]]]],[11,"initialize","","",18,[[]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"unchecked_into","","",19,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",19,[[],["t"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"unchecked_into","","",8,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",8,[[],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"decode","","",2,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",2,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",3,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",3,[[["self"]]]],[11,"blake2_256","","",3,[[["self"]]]],[11,"blake2_128_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",3,[[["self"]]]],[11,"twox_256","","",3,[[["self"]]]],[11,"twox_64_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"with_weight","","",4,[[["u64"]],[["postdispatchinfo"],["dispatcherrorwithpostinfo",["postdispatchinfo"]]]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clone","","",1,[[["self"]],["property"]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"eq","","",1,[[["self"],["property"]],["bool"]]],[11,"ne","","",1,[[["self"],["property"]],["bool"]]],[11,"eq","","",0,[[["self"],["decision"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"default","","",1,[[],["property"]]],[11,"decode","","",0,[[["decin"]],[["result",["decision","error"]],["decision"],["error"]]]],[11,"decode","","",1,[[["decin"]],[["property"],["error"],["result",["property","error"]]]]],[11,"plapps_address_for","","",19,[[]]],[11,"clone","","",9,[[["self"]],["range"]]],[11,"clone","","",10,[[["self"]],["stateupdate"]]],[11,"clone","","",11,[[["self"]],["checkpoint"]]],[11,"clone","","",12,[[["self"]],["exit"]]],[11,"clone","","",13,[[["self"]],["inclusionproof"]]],[11,"clone","","",14,[[["self"]],["intervalinclusionproof"]]],[11,"clone","","",15,[[["self"]],["addressinclusionproof"]]],[11,"clone","","",16,[[["self"]],["intervaltreenode"]]],[11,"clone","","",17,[[["self"]],["addresstreenode"]]],[11,"clone","","",18,[[["self"]],["exitdeposit"]]],[11,"clone","","",2,[[["self"]],["rawevent"]]],[11,"clone","","",8,[[["self"]],["module"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"default","","",9,[[],["range"]]],[11,"default","","",10,[[],["stateupdate"]]],[11,"default","","",11,[[],["checkpoint"]]],[11,"default","","",12,[[],["exit"]]],[11,"default","","",13,[[],["inclusionproof"]]],[11,"default","","",14,[[],["intervalinclusionproof"]]],[11,"default","","",15,[[],["addressinclusionproof"]]],[11,"default","","",16,[[],["intervaltreenode"]]],[11,"default","","",17,[[],["addresstreenode"]]],[11,"default","","",18,[[],["exitdeposit"]]],[11,"eq","","",9,[[["self"],["range"]],["bool"]]],[11,"ne","","",9,[[["self"],["range"]],["bool"]]],[11,"eq","","",10,[[["self"],["stateupdate"]],["bool"]]],[11,"ne","","",10,[[["self"],["stateupdate"]],["bool"]]],[11,"eq","","",11,[[["self"],["checkpoint"]],["bool"]]],[11,"ne","","",11,[[["self"],["checkpoint"]],["bool"]]],[11,"eq","","",12,[[["exit"],["self"]],["bool"]]],[11,"ne","","",12,[[["exit"],["self"]],["bool"]]],[11,"eq","","",13,[[["inclusionproof"],["self"]],["bool"]]],[11,"ne","","",13,[[["inclusionproof"],["self"]],["bool"]]],[11,"eq","","",14,[[["intervalinclusionproof"],["self"]],["bool"]]],[11,"ne","","",14,[[["intervalinclusionproof"],["self"]],["bool"]]],[11,"eq","","",15,[[["addressinclusionproof"],["self"]],["bool"]]],[11,"ne","","",15,[[["addressinclusionproof"],["self"]],["bool"]]],[11,"eq","","",16,[[["intervaltreenode"],["self"]],["bool"]]],[11,"ne","","",16,[[["intervaltreenode"],["self"]],["bool"]]],[11,"eq","","",17,[[["addresstreenode"],["self"]],["bool"]]],[11,"ne","","",17,[[["addresstreenode"],["self"]],["bool"]]],[11,"eq","","",18,[[["exitdeposit"],["self"]],["bool"]]],[11,"ne","","",18,[[["exitdeposit"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["rawevent"]],["bool"]]],[11,"ne","","",2,[[["self"],["rawevent"]],["bool"]]],[11,"eq","","",8,[[["module"],["self"]],["bool"]]],[11,"ne","","",8,[[["module"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"encode_to","","",9,[[["self"],["encout"]]]],[11,"encode_to","","",10,[[["self"],["encout"]]]],[11,"encode_to","","",11,[[["self"],["encout"]]]],[11,"encode","","",11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"using_encoded","","",11,[[["fnonce"],["self"]],["r"]]],[11,"encode_to","","",12,[[["self"],["encout"]]]],[11,"encode_to","","",13,[[["self"],["encout"]]]],[11,"encode_to","","",14,[[["self"],["encout"]]]],[11,"encode_to","","",15,[[["self"],["encout"]]]],[11,"encode_to","","",16,[[["self"],["encout"]]]],[11,"encode_to","","",17,[[["self"],["encout"]]]],[11,"encode_to","","",18,[[["self"],["encout"]]]],[11,"encode_to","","",2,[[["self"],["encout"]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"decode","","",9,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",10,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",11,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",12,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",13,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",14,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",15,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",16,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",17,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",18,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"metadata","","",8,[[]]],[11,"metadata","","",4,[[]]],[11,"get_dispatch_info","","",3,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",3,[[],["dispatchresultwithpostinfo"]]],[11,"get_call_name","","",3,[[["self"]],["str"]]],[11,"get_call_names","","",3,[[]]],[11,"on_runtime_upgrade","","",8,[[],["weight"]]]],"p":[[4,"Decision"],[3,"Property"],[4,"RawEvent"],[4,"Call"],[4,"Error"],[3,"Deserializer"],[8,"PlappsAddressFor"],[8,"Trait"],[3,"Module"],[3,"Range"],[3,"StateUpdate"],[3,"Checkpoint"],[3,"Exit"],[3,"InclusionProof"],[3,"IntervalInclusionProof"],[3,"AddressInclusionProof"],[3,"IntervalTreeNode"],[3,"AddressTreeNode"],[3,"ExitDeposit"],[3,"SimpleAddressDeterminer"]]};
searchIndex["pallet_plasma_rpc_runtime_api"] = {"doc":"Runtime API definition required by Plasma RPC extensions.","i":[[8,"PlasmaApi","pallet_plasma_rpc_runtime_api","The API to interact with contracts without using executive.",null,null],[11,"retrieve","","",0,[[["blockid"],["blocknumber"],["self"],["accountid"]],["result"]]],[11,"retrieve_with_context","","",0,[[["blocknumber"],["blockid"],["executioncontext"],["self"],["accountid"]],["result"]]],[11,"verify_inclusion","","",0,[[["range"],["blocknumber"],["inclusionproof"],["blockid"],["hash"],["self"],["accountid"]],[["bool"],["result",["bool"]]]]],[11,"verify_inclusion_with_context","","",0,[[["blockid"],["hash"],["range"],["accountid"],["blocknumber"],["inclusionproof"],["executioncontext"],["self"]],[["bool"],["result",["bool"]]]]],[11,"verify_inclusion_with_root","","",0,[[["range"],["inclusionproof"],["blockid"],["hash"],["self"],["accountid"]],[["bool"],["result",["bool"]]]]],[11,"verify_inclusion_with_root_with_context","","",0,[[["accountid"],["range"],["inclusionproof"],["blockid"],["executioncontext"],["self"],["hash"]],[["bool"],["result",["bool"]]]]]],"p":[[8,"PlasmaApi"]]};
searchIndex["plasm_cli"] = {"doc":"Plasm CLI library.","i":[[3,"Cli","plasm_cli","An overarching CLI command definition.",null,null],[12,"subcommand","","Possible subcommand with parameters.",0,null],[12,"run","","",0,null],[4,"Subcommand","","Possible subcommands of the main binary.",null,null],[13,"Base","","A set of base subcommands handled by `sc_cli`.",1,null],[13,"Benchmark","","The custom benchmark subcommmand benchmarking runtime…",1,null],[5,"run","","Parse command line arguments into service configuration.",null,[[],["result"]]],[0,"chain_spec","","Plasm chain specification. Chain specification.",null,null],[3,"Extensions","plasm_cli::chain_spec","Node `ChainSpec` extensions.",null,null],[12,"fork_blocks","","Block numbers with known hashes.",2,null],[12,"bad_blocks","","Known bad block hashes.",2,null],[5,"get_from_seed","","Helper function to generate a crypto pair from seed",null,[[["str"]]]],[5,"get_account_id_from_seed","","Helper function to generate an account ID from seed",null,[[["str"]],["accountid"]]],[5,"get_authority_keys_from_seed","","Helper function to generate controller and session key…",null,[[["str"]]]],[5,"dusty_config","","Plasm testnet file config.",null,[[],["chainspec"]]],[5,"plasm_config","","Plasm mainnet file config.",null,[[],["chainspec"]]],[5,"development_config","","Development config (single validator Alice)",null,[[],["chainspec"]]],[5,"local_testnet_config","","Local testnet config (multivalidator Alice + Bob)",null,[[],["chainspec"]]],[6,"ChainSpec","","Specialized `ChainSpec`.",null,null],[11,"from","plasm_cli","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"to_subset","","",0,[[["self"]],["option"]]],[11,"is_in_subset","","",0,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",0,[[["self"]],["ss"]]],[11,"from_subset","","",0,[[["ss"]],["sp"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"to_subset","","",1,[[["self"]],["option"]]],[11,"is_in_subset","","",1,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",1,[[["self"]],["ss"]]],[11,"from_subset","","",1,[[["ss"]],["sp"]]],[11,"from","plasm_cli::chain_spec","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"get_any","","",2,[[["typeid"],["self"]],["any"]]],[11,"erased_serialize","","",2,[[["self"],["serializer"]],[["result",["ok","error"]],["ok"],["error"]]]],[11,"to_subset","","",2,[[["self"]],["option"]]],[11,"is_in_subset","","",2,[[["self"]],["bool"]]],[11,"to_subset_unchecked","","",2,[[["self"]],["ss"]]],[11,"from_subset","","",2,[[["ss"]],["sp"]]],[11,"clone","","",2,[[["self"]],["extensions"]]],[11,"clone","plasm_cli","",0,[[["self"]],["cli"]]],[11,"clone","","",1,[[["self"]],["subcommand"]]],[11,"default","plasm_cli::chain_spec","",2,[[],["extensions"]]],[11,"fmt","plasm_cli","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"serialize","plasm_cli::chain_spec","",2,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",2,[[["__d"]],["result"]]],[11,"get","","",2,[[["self"]],[["option"],["t"]]]],[11,"get_any","","",2,[[["self"],["typeid"]],["any"]]],[11,"clap","plasm_cli","",0,[[],["app"]]],[11,"from_clap","","",0,[[["argmatches"]],["self"]]],[11,"clap","","",1,[[],["app"]]],[11,"from_clap","","",1,[[["argmatches"]],["self"]]],[11,"impl_name","","",0,[[],["str"]]],[11,"impl_version","","",0,[[],["str"]]],[11,"description","","",0,[[],["str"]]],[11,"author","","",0,[[],["str"]]],[11,"support_url","","",0,[[],["str"]]],[11,"copyright_start_year","","",0,[[],["i32"]]],[11,"executable_name","","",0,[[],["str"]]],[11,"load_spec","","",0,[[["str"],["self"]],[["string"],["result",["box","string"]],["box",["chainspec"]]]]],[11,"augment_clap","","",0,[[["app"]],["app"]]],[11,"is_subcommand","","",0,[[],["bool"]]],[11,"augment_clap","","",1,[[["app"]],["app"]]],[11,"from_subcommand","","",1,[[],["option"]]],[11,"is_subcommand","","",1,[[],["bool"]]]],"p":[[3,"Cli"],[4,"Subcommand"],[3,"Extensions"]]};
searchIndex["plasm_node"] = {"doc":"Plasm Node CLI","i":[[5,"main","plasm_node","",null,[[],[["result",["error"]],["error"]]]]],"p":[]};
searchIndex["plasm_primitives"] = {"doc":"Low-level types used throughout the node code.","i":[[0,"report","plasm_primitives","App-specific crypto used for reporting…",null,null],[3,"ReporterAppCrypto","plasm_primitives::report","An `AppCrypto` type to allow submitting signed…",null,null],[6,"ReporterId","","Identity of the equivocation/misbehavior reporter.",null,null],[17,"KEY_TYPE","","Key type for the reporting module. Used for reporting BABE…",null,null],[6,"BlockNumber","plasm_primitives","An index to a block.",null,null],[6,"Signature","","Alias to 512-bit hash when used in the context of a…",null,null],[6,"AccountId","","Some way of identifying an account on the chain. We…",null,null],[6,"AccountIndex","","The type for looking up accounts. We don't expect more…",null,null],[6,"Balance","","Balance of an account.",null,null],[6,"Moment","","Type used for expressing timestamp.",null,null],[6,"Index","","Index of a transaction in the chain.",null,null],[6,"Hash","","A hash of some data used by the chain.",null,null],[6,"Timestamp","","A timestamp: milliseconds since the unix epoch. `u64` is…",null,null],[6,"DigestItem","","Digest item type.",null,null],[6,"Header","","Header type.",null,null],[6,"Block","","Block type.",null,null],[6,"BlockId","","Block ID.",null,null],[11,"from","plasm_primitives::report","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]]],"p":[[3,"ReporterAppCrypto"]]};
searchIndex["plasm_rpc"] = {"doc":"A collection of node-specific RPC methods.","i":[[3,"LightDeps","plasm_rpc","Light client extra dependencies.",null,null],[12,"client","","The client instance to use.",0,null],[12,"pool","","Transaction pool instance.",0,null],[12,"remote_blockchain","","Remote access to the blockchain (async).",0,null],[12,"fetcher","","Fetcher instance.",0,null],[3,"BabeDeps","","Extra dependencies for BABE.",null,null],[12,"babe_config","","BABE protocol config.",1,null],[12,"shared_epoch_changes","","BABE pending epoch changes.",1,null],[12,"keystore","","The keystore that manages the keys of the node.",1,null],[3,"GrandpaDeps","","Extra dependencies for GRANDPA",null,null],[12,"shared_voter_state","","Voting round info.",2,null],[12,"shared_authority_set","","Authority set info.",2,null],[3,"FullDeps","","Full client dependencies.",null,null],[12,"client","","The client instance to use.",3,null],[12,"pool","","Transaction pool instance.",3,null],[12,"select_chain","","The SelectChain Strategy",3,null],[12,"deny_unsafe","","Whether to deny unsafe calls",3,null],[12,"babe","","BABE specific dependencies.",3,null],[12,"grandpa","","GRANDPA specific dependencies.",3,null],[5,"create_full","","Instantiate all Full RPC extensions.",null,[[["fulldeps"]],["iohandler"]]],[5,"create_light","","Instantiate all Light RPC extensions.",null,[[["lightdeps"]],["iohandler"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]]],"p":[[3,"LightDeps"],[3,"BabeDeps"],[3,"GrandpaDeps"],[3,"FullDeps"]]};
searchIndex["plasm_runtime"] = {"doc":"The Substrate runtime. This can be compiled with…","i":[[4,"BalancesCall","plasm_runtime","Dispatchable calls.",null,null],[13,"transfer","","Transfer some liquid free balance to another account.",0,null],[13,"set_balance","","Set the balances of a given account.",0,null],[13,"force_transfer","","Exactly as `transfer`, except the origin must be root and…",0,null],[13,"transfer_keep_alive","","Same as the [`transfer`] call, but with a check that the…",0,null],[6,"Gas","","",null,null],[4,"TimestampCall","","Dispatchable calls.",null,null],[13,"set","","Set the current time.",1,null],[8,"BuildStorage","","Complex storage builder stuff.",null,null],[11,"build_storage","","Build the storage out of this builder.",2,[[["self"]],[["string"],["storage"],["result",["storage","string"]]]]],[10,"assimilate_storage","","Assimilate the storage for this module into pre-existing…",2,[[["self"],["storage"]],[["result",["string"]],["string"]]]],[3,"BlockHashCount","","",null,null],[3,"MaximumBlockWeight","","We allow for 3 seconds of compute with a 10 second average…",null,null],[3,"MaximumBlockLength","","",null,null],[3,"AvailableBlockRatio","","",null,null],[3,"MaximumExtrinsicWeight","","Assume 10% of weight for average on_initialize calls",null,null],[3,"Version","","",null,null],[3,"EpochDuration","","",null,null],[3,"ExpectedBlockTime","","",null,null],[3,"IndexDeposit","","",null,null],[3,"ExistentialDeposit","","",null,null],[3,"TransactionByteFee","","",null,null],[3,"WeightFeeCoefficient","","",null,null],[3,"TargetBlockFullness","","",null,null],[3,"MinimumPeriod","","",null,null],[3,"SessionKeys","","",null,null],[12,"babe","","",3,null],[12,"grandpa","","",3,null],[3,"SessionsPerEra","","",null,null],[3,"BondingDuration","","",null,null],[3,"ContractTransferFee","","",null,null],[3,"ContractCreationFee","","",null,null],[3,"ContractTransactionBaseFee","","",null,null],[3,"ContractTransactionByteFee","","",null,null],[3,"ContractFee","","",null,null],[3,"TombstoneDeposit","","",null,null],[3,"RentByteFee","","",null,null],[3,"RentDepositOffset","","",null,null],[3,"SurchargeReward","","",null,null],[3,"WindowSize","","",null,null],[3,"ReportLatency","","",null,null],[3,"Runtime","","",null,null],[3,"ModuleToIndex","","Provides an implementation of `ModuleToIndex` to map a…",null,null],[3,"GenesisConfig","","",null,null],[12,"frame_system","","",4,null],[12,"pallet_indices","","",4,null],[12,"pallet_balances","","",4,null],[12,"pallet_contracts","","",4,null],[12,"pallet_plasm_validator","","",4,null],[12,"pallet_plasm_rewards","","",4,null],[12,"pallet_session","","",4,null],[12,"pallet_babe","","",4,null],[12,"pallet_grandpa","","",4,null],[12,"pallet_sudo","","",4,null],[3,"RuntimeApi","","",null,null],[3,"RuntimeApiImpl","","Implements all runtime apis for the client side.",null,null],[4,"Event","","",null,null],[13,"frame_system","","",5,null],[13,"pallet_indices","","",5,null],[13,"pallet_balances","","",5,null],[13,"pallet_contracts","","",5,null],[13,"pallet_plasm_validator","","",5,null],[13,"pallet_plasm_rewards","","",5,null],[13,"pallet_session","","",5,null],[13,"pallet_grandpa","","",5,null],[13,"pallet_contract_operator","","",5,null],[13,"pallet_operator_trading","","",5,null],[13,"pallet_sudo","","",5,null],[4,"Origin","","",null,null],[13,"system","","",6,null],[13,"Void","","",6,null],[4,"Call","","",null,null],[13,"System","","",7,null],[13,"Timestamp","","",7,null],[13,"Indices","","",7,null],[13,"Balances","","",7,null],[13,"Contracts","","",7,null],[13,"PlasmValidator","","",7,null],[13,"PlasmRewards","","",7,null],[13,"Session","","",7,null],[13,"Babe","","",7,null],[13,"Grandpa","","",7,null],[13,"FinalityTracker","","",7,null],[13,"Operator","","",7,null],[13,"Trading","","",7,null],[13,"RandomnessCollectiveFlip","","",7,null],[13,"Sudo","","",7,null],[5,"native_version","","Native version.",null,[[],["nativeversion"]]],[0,"impls","","Implementations of some helper traits passed into runtime…",null,null],[3,"CurrencyToVoteHandler","plasm_runtime::impls","Struct that handles the conversion of Balance -> `u64`.…",null,null],[3,"TargetedFeeAdjustment","","Update the given multiplier based on the following formula",null,null],[0,"constants","plasm_runtime","Constant values used within the runtime. A set of constant…",null,null],[0,"currency","plasm_runtime::constants","Money matters.",null,null],[3,"HOLDERS","plasm_runtime::constants::currency","PLASM GENESIS TOKEN HODERS",null,null],[17,"MILLIPLM","","",null,null],[17,"PLM","","",null,null],[0,"time","plasm_runtime::constants","Time.",null,null],[17,"MILLISECS_PER_BLOCK","plasm_runtime::constants::time","Since BABE is probabilistic this is the average expected…",null,null],[17,"SECS_PER_BLOCK","","",null,null],[17,"SLOT_DURATION","","",null,null],[17,"PRIMARY_PROBABILITY","","",null,null],[17,"EPOCH_DURATION_IN_BLOCKS","","",null,null],[17,"MINUTES","","",null,null],[17,"HOURS","","",null,null],[17,"DAYS","","",null,null],[0,"fee","plasm_runtime::constants","Fee-related.",null,null],[3,"Perbill","plasm_runtime::constants::fee","A fixed point representation of a number in the range [0,…",null,null],[17,"TARGET_BLOCK_FULLNESS","","The block saturation level. Fees will be updates based on…",null,null],[0,"api","plasm_runtime","",null,null],[5,"dispatch","plasm_runtime::api","",null,[[["str"]],[["vec",["u8"]],["option",["vec"]]]]],[6,"System","plasm_runtime","",null,null],[6,"Timestamp","","",null,null],[6,"TransactionPayment","","",null,null],[6,"Indices","","",null,null],[6,"Balances","","",null,null],[6,"Contracts","","",null,null],[6,"PlasmValidator","","",null,null],[6,"PlasmRewards","","",null,null],[6,"Session","","",null,null],[6,"Historical","","",null,null],[6,"Babe","","",null,null],[6,"Grandpa","","",null,null],[6,"FinalityTracker","","",null,null],[6,"Operator","","",null,null],[6,"Trading","","",null,null],[6,"RandomnessCollectiveFlip","","",null,null],[6,"Sudo","","",null,null],[6,"SystemConfig","","",null,null],[6,"IndicesConfig","","",null,null],[6,"BalancesConfig","","",null,null],[6,"ContractsConfig","","",null,null],[6,"PlasmValidatorConfig","","",null,null],[6,"PlasmRewardsConfig","","",null,null],[6,"SessionConfig","","",null,null],[6,"BabeConfig","","",null,null],[6,"GrandpaConfig","","",null,null],[6,"SudoConfig","","",null,null],[6,"Address","","The address format for describing accounts.",null,null],[6,"Header","","Block header type as expected by this runtime.",null,null],[6,"Block","","Block type as expected by this runtime.",null,null],[6,"SignedBlock","","A Block signed with a Justification",null,null],[6,"BlockId","","BlockId type as expected by this runtime.",null,null],[6,"SignedExtra","","The SignedExtension to the basic transaction logic.",null,null],[6,"UncheckedExtrinsic","","Unchecked extrinsic type as expected by this runtime.",null,null],[6,"SignedPayload","","The payload being signed in transactions.",null,null],[6,"CheckedExtrinsic","","Extrinsic type that has already been checked.",null,null],[6,"Executive","","Executive: handles dispatch to the various modules.",null,null],[17,"WASM_BINARY","","",null,null],[17,"WASM_BINARY_BLOATY","","",null,null],[17,"VERSION","","Runtime version.",null,null],[11,"get","","",8,[[],["blocknumber"]]],[11,"get","","",9,[[],["weight"]]],[11,"get","","",10,[[],["u32"]]],[11,"get","","",11,[[],["perbill"]]],[11,"get","","",12,[[],["weight"]]],[11,"get","","",13,[[],["runtimeversion"]]],[11,"get","","",14,[[],["u64"]]],[11,"get","","",15,[[],["moment"]]],[11,"get","","",16,[[],["balance"]]],[11,"get","","",17,[[],["balance"]]],[11,"get","","",18,[[],["balance"]]],[11,"get","","",19,[[],["balance"]]],[11,"get","","",20,[[],["perquintill"]]],[11,"get","","",21,[[],["moment"]]],[11,"generate","","Generate a set of keys with optionally using the given seed.",3,[[["option",["vec"]],["vec",["u8"]]],[["vec",["u8"]],["u8"]]]],[11,"into_raw_public_keys","","Converts `Self` into a `Vec` of `(raw public key,…",3,[[],["vec"]]],[11,"decode_into_raw_public_keys","","Decode `Self` from the given `encoded` slice and convert…",3,[[],[["vec"],["option",["vec"]]]]],[11,"get","","",22,[[],["sessionindex"]]],[11,"get","","",23,[[],["eraindex"]]],[11,"get","","",24,[[],["balance"]]],[11,"get","","",25,[[],["balance"]]],[11,"get","","",26,[[],["balance"]]],[11,"get","","",27,[[],["balance"]]],[11,"get","","",28,[[],["balance"]]],[11,"get","","",29,[[],["balance"]]],[11,"get","","",30,[[],["balance"]]],[11,"get","","",31,[[],["balance"]]],[11,"get","","",32,[[],["balance"]]],[11,"get","","",33,[[],["blocknumber"]]],[11,"get","","",34,[[],["blocknumber"]]],[11,"outer_event_metadata","","",35,[[],["outereventmetadata"]]],[11,"__module_events_frame_system","","",35,[[]]],[11,"__module_events_pallet_indices","","",35,[[]]],[11,"__module_events_pallet_balances","","",35,[[]]],[11,"__module_events_pallet_contracts","","",35,[[]]],[11,"__module_events_pallet_plasm_validator","","",35,[[]]],[11,"__module_events_pallet_plasm_rewards","","",35,[[]]],[11,"__module_events_pallet_session","","",35,[[]]],[11,"__module_events_pallet_grandpa","","",35,[[]]],[11,"__module_events_pallet_contract_operator","","",35,[[]]],[11,"__module_events_pallet_operator_trading","","",35,[[]]],[11,"__module_events_pallet_sudo","","",35,[[]]],[18,"NONE","","",6,null],[18,"ROOT","","",6,null],[11,"signed","","",6,[[],["self"]]],[11,"metadata","","",35,[[],["runtimemetadataprefixed"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",0,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",1,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"unchecked_into","","",8,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",8,[[],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"unchecked_into","","",9,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",9,[[],["t"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"unchecked_into","","",10,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",10,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",10,[[],["t"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"unchecked_into","","",11,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",11,[[],["t"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"unchecked_into","","",12,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",12,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",12,[[],["t"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"unchecked_into","","",13,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",13,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",13,[[],["t"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"unchecked_into","","",14,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",14,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",14,[[],["t"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"unchecked_into","","",15,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",15,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",15,[[],["t"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"unchecked_into","","",16,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",16,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",16,[[],["t"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"unchecked_into","","",17,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",17,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",17,[[],["t"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"unchecked_into","","",18,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",18,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",18,[[],["t"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"unchecked_into","","",19,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",19,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",19,[[],["t"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"unchecked_into","","",20,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",20,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",20,[[],["t"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"unchecked_into","","",21,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",21,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",21,[[],["t"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",3,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",3,[[["self"]]]],[11,"blake2_256","","",3,[[["self"]]]],[11,"blake2_128_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",3,[[["self"]]]],[11,"twox_256","","",3,[[["self"]]]],[11,"twox_64_concat","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"is_clear","","",3,[[["self"]],["bool"]]],[11,"clear","","",3,[[],["t"]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"unchecked_into","","",22,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",22,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",22,[[],["t"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"unchecked_into","","",23,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",23,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",23,[[],["t"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"unchecked_into","","",24,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",24,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",24,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",24,[[],["t"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"unchecked_into","","",25,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",25,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",25,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",25,[[],["t"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"unchecked_into","","",26,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",26,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",26,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",26,[[],["t"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"unchecked_into","","",27,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",27,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",27,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",27,[[],["t"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"unchecked_into","","",28,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",28,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",28,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",28,[[],["t"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"unchecked_into","","",29,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",29,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",29,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",29,[[],["t"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"unchecked_into","","",30,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",30,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",30,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",30,[[],["t"]]],[11,"vzip","","",30,[[],["v"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"unchecked_into","","",31,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",31,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",31,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",31,[[],["t"]]],[11,"vzip","","",31,[[],["v"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"unchecked_into","","",32,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",32,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",32,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",32,[[],["t"]]],[11,"vzip","","",32,[[],["v"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"unchecked_into","","",33,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",33,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",33,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",33,[[],["t"]]],[11,"vzip","","",33,[[],["v"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"unchecked_into","","",34,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",34,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",34,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",34,[[],["t"]]],[11,"vzip","","",34,[[],["v"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"unchecked_into","","",35,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",35,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",35,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",35,[[],["t"]]],[11,"vzip","","",35,[[],["v"]]],[11,"equivalent","","",35,[[["k"],["self"]],["bool"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"unchecked_into","","",36,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",36,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",36,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",36,[[],["t"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"unchecked_into","","",37,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",37,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",37,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",37,[[],["t"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"unchecked_into","","",38,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",38,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",38,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",38,[[],["t"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"size_hint","","",5,[[["self"]],["usize"]]],[11,"using_encoded","","",5,[[["self"],["f"]],["r"]]],[11,"encode","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",5,[[["w"],["self"]]]],[11,"decode","","",5,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",5,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",5,[[["self"]]]],[11,"blake2_256","","",5,[[["self"]]]],[11,"blake2_128_concat","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",5,[[["self"]]]],[11,"twox_256","","",5,[[["self"]]]],[11,"twox_64_concat","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",5,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"equivalent","","",6,[[["k"],["self"]],["bool"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"size_hint","","",7,[[["self"]],["usize"]]],[11,"using_encoded","","",7,[[["self"],["f"]],["r"]]],[11,"encode","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",7,[[["w"],["self"]]]],[11,"decode","","",7,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",7,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",7,[[["self"]]]],[11,"blake2_256","","",7,[[["self"]]]],[11,"blake2_128_concat","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",7,[[["self"]]]],[11,"twox_256","","",7,[[["self"]]]],[11,"twox_64_concat","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"unchecked_into","","",7,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",7,[[],["t"]]],[11,"vzip","","",7,[[],["v"]]],[11,"equivalent","","",7,[[["k"],["self"]],["bool"]]],[11,"from","plasm_runtime::impls","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"unchecked_into","","",39,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",39,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",39,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",39,[[],["t"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"unchecked_into","","",40,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",40,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",40,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",40,[[],["t"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","plasm_runtime::constants::currency","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"unchecked_into","","",41,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",41,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",41,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",41,[[],["t"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","plasm_runtime::constants::fee","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"size_hint","","",42,[[["self"]],["usize"]]],[11,"using_encoded","","",42,[[["self"],["f"]],["r"]]],[11,"encode","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"encode_to","","",42,[[["w"],["self"]]]],[11,"decode","","",42,[[["i"]],[["error"],["result",["error"]]]]],[11,"to_keyed_vec","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"decode_all","","",42,[[],[["error"],["result",["error"]]]]],[11,"blake2_128","","",42,[[["self"]]]],[11,"blake2_256","","",42,[[["self"]]]],[11,"blake2_128_concat","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"twox_128","","",42,[[["self"]]]],[11,"twox_256","","",42,[[["self"]]]],[11,"twox_64_concat","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"identity","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"saturating_add","","",42,[[["t"]],["t"]]],[11,"saturating_sub","","",42,[[["t"]],["t"]]],[11,"saturating_mul","","",42,[[["t"]],["t"]]],[11,"saturating_pow","","",42,[[["usize"]],["t"]]],[11,"is_clear","","",42,[[["self"]],["bool"]]],[11,"clear","","",42,[[],["t"]]],[11,"unchecked_into","","",42,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",42,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",42,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",42,[[],["t"]]],[11,"unique_saturated_from","","",42,[[["t"]],["s"]]],[11,"vzip","","",42,[[],["v"]]],[11,"clear","","",42,[[["self"]]]],[11,"initialize","","",42,[[]]],[11,"equivalent","","",42,[[["k"],["self"]],["bool"]]],[11,"serialize","","",42,[[["self"],["__s"]],["result"]]],[11,"clone","","",42,[[["self"]],["perbill"]]],[11,"eq","","",42,[[["self"],["perbill"]],["bool"]]],[11,"ne","","",42,[[["self"],["perbill"]],["bool"]]],[11,"cmp","","",42,[[["self"],["perbill"]],["ordering"]]],[11,"mul","","",42,[[["n"]]]],[11,"min_value","","",42,[[],["perbill"]]],[11,"max_value","","",42,[[],["perbill"]]],[11,"div","","",42,[[["perbill"]]]],[11,"deserialize","","",42,[[["__d"]],[["perbill"],["result",["perbill"]]]]],[11,"decode","","",42,[[["i"]],[["error"],["result",["perbill","error"]],["perbill"]]]],[11,"fmt","","",42,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"deconstruct","","Consume self and return the number of parts per thing.",42,[[]]],[11,"from_parts","","Build this type from a number of parts per thing.",42,[[],["perbill"]]],[11,"from_fraction","","",42,[[["f64"]],["perbill"]]],[11,"from_rational_approximation","","",42,[[["n"]],["perbill"]]],[11,"partial_cmp","","",42,[[["self"],["perbill"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",42,[[["self"],["perbill"]],["bool"]]],[11,"le","","",42,[[["self"],["perbill"]],["bool"]]],[11,"gt","","",42,[[["self"],["perbill"]],["bool"]]],[11,"ge","","",42,[[["self"],["perbill"]],["bool"]]],[11,"default","","",42,[[],["perbill"]]],[11,"from","","",42,[[["compact",["perbill"]],["perbill"]],["perbill"]]],[11,"encode_as","","",42,[[["self"]],["u32"]]],[11,"decode_from","","",42,[[["u32"]],["perbill"]]],[11,"saturating_add","","Saturating addition. Compute `self + rhs`, saturating at…",42,[[["perbill"]],["perbill"]]],[11,"saturating_sub","","Saturating subtraction. Compute `self - rhs`, saturating…",42,[[["perbill"]],["perbill"]]],[11,"saturating_mul","","Saturating multiply. Compute `self * rhs`, saturating at…",42,[[["perbill"]],["perbill"]]],[11,"saturating_pow","","Saturating exponentiation. Computes `self.pow(exp)`,…",42,[[["usize"]],["perbill"]]],[11,"encode_to","","",42,[[["self"],["encout"]]]],[11,"encode","","",42,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"using_encoded","","",42,[[["self"],["f"]],["r"]]],[11,"dispatch","plasm_runtime","",0,[[],[["result",["postdispatchinfo","dispatcherrorwithpostinfo"]],["dispatcherrorwithpostinfo",["postdispatchinfo"]],["postdispatchinfo"]]]],[11,"clone","","",0,[[["self"]],["call"]]],[11,"get_dispatch_info","","",0,[[["self"]],["dispatchinfo"]]],[11,"eq","","",0,[[["self"],["call"]],["bool"]]],[11,"get_call_name","","",0,[[["self"]],["str"]]],[11,"get_call_names","","",0,[[]]],[11,"decode","","",0,[[["decin"]],[["call"],["result",["call","error"]],["error"]]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","","",1,[[["self"]],["call"]]],[11,"get_call_name","","",1,[[["self"]],["str"]]],[11,"get_call_names","","",1,[[]]],[11,"eq","","",1,[[["self"],["call"]],["bool"]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["call","error"]],["call"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"get_dispatch_info","","",1,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",1,[[],[["result",["postdispatchinfo","dispatcherrorwithpostinfo"]],["dispatcherrorwithpostinfo",["postdispatchinfo"]],["postdispatchinfo"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",5,[[["event",["runtime"]],["runtime"]],["self"]]],[11,"from","","",5,[[["event"]],["self"]]],[11,"from","","",5,[[["event"]],["self"]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",5,[[["runtime"],["event",["runtime"]]],["self"]]],[11,"from","","",6,[[["runtime"],["origin",["runtime"]]],["self"]]],[11,"from","","",6,[[["option"]],["self"]]],[11,"from","","",7,[[["system"],["runtime"],["callablecallfor",["system","runtime"]]],["self"]]],[11,"from","","",7,[[["runtime"],["timestamp"],["callablecallfor",["timestamp","runtime"]]],["self"]]],[11,"from","","",7,[[["callablecallfor",["indices","runtime"]],["indices"],["runtime"]],["self"]]],[11,"from","","",7,[[["runtime"],["callablecallfor",["balances","runtime"]],["balances"]],["self"]]],[11,"from","","",7,[[["contracts"],["runtime"],["callablecallfor",["contracts","runtime"]]],["self"]]],[11,"from","","",7,[[["runtime"],["callablecallfor",["plasmvalidator","runtime"]],["plasmvalidator"]],["self"]]],[11,"from","","",7,[[["callablecallfor",["plasmrewards","runtime"]],["runtime"],["plasmrewards"]],["self"]]],[11,"from","","",7,[[["callablecallfor",["session","runtime"]],["runtime"],["session"]],["self"]]],[11,"from","","",7,[[["runtime"],["callablecallfor",["babe","runtime"]],["babe"]],["self"]]],[11,"from","","",7,[[["runtime"],["grandpa"],["callablecallfor",["grandpa","runtime"]]],["self"]]],[11,"from","","",7,[[["runtime"],["callablecallfor",["finalitytracker","runtime"]],["finalitytracker"]],["self"]]],[11,"from","","",7,[[["callablecallfor",["operator","runtime"]],["operator"],["runtime"]],["self"]]],[11,"from","","",7,[[["runtime"],["trading"],["callablecallfor",["trading","runtime"]]],["self"]]],[11,"from","","",7,[[["randomnesscollectiveflip"],["runtime"],["callablecallfor",["randomnesscollectiveflip","runtime"]]],["self"]]],[11,"from","","",7,[[["runtime"],["callablecallfor",["sudo","runtime"]],["sudo"]],["self"]]],[11,"into","","",6,[[],[["result",["origin"]],["origin",["runtime"]]]]],[11,"clone","","",3,[[["self"]],["sessionkeys"]]],[11,"clone","","",35,[[["self"]],["runtime"]]],[11,"clone","","",5,[[["self"]],["event"]]],[11,"clone","","",6,[[["self"]],["origin"]]],[11,"clone","","",7,[[["self"]],["call"]]],[11,"default","","",3,[[],["sessionkeys"]]],[11,"eq","","",3,[[["self"],["sessionkeys"]],["bool"]]],[11,"ne","","",3,[[["self"],["sessionkeys"]],["bool"]]],[11,"eq","","",35,[[["runtime"],["self"]],["bool"]]],[11,"eq","","",5,[[["event"],["self"]],["bool"]]],[11,"ne","","",5,[[["event"],["self"]],["bool"]]],[11,"eq","","",6,[[["origin"],["self"]],["bool"]]],[11,"ne","","",6,[[["origin"],["self"]],["bool"]]],[11,"eq","","",7,[[["self"],["call"]],["bool"]]],[11,"ne","","",7,[[["self"],["call"]],["bool"]]],[11,"deref","plasm_runtime::constants::currency","",41,[[["self"]],["vec"]]],[11,"fmt","plasm_runtime","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"try_into","","",5,[[],[["event",["runtime"]],["result",["event"]]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event",["runtime"]]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event",["runtime"]]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event",["runtime"]]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event",["runtime"]]]]],[11,"try_into","","",5,[[],[["event",["runtime"]],["result",["event"]]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event"]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event"]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event",["runtime"]]]]],[11,"try_into","","",5,[[],[["event",["runtime"]],["result",["event"]]]]],[11,"try_into","","",5,[[],[["result",["event"]],["event",["runtime"]]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"encode_to","","",5,[[["self"],["encout"]]]],[11,"encode_to","","",7,[[["self"],["encout"]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",5,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",7,[[["decin"]],[["error"],["result",["error"]]]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["callablecallfor"],["option",["callablecallfor"]]]]],[11,"is_sub_type","","",7,[[["self"]],[["callablecallfor"],["option",["callablecallfor"]]]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["callablecallfor"],["option",["callablecallfor"]]]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["callablecallfor"],["option",["callablecallfor"]]]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["option",["callablecallfor"]],["callablecallfor"]]]],[11,"is_sub_type","","",7,[[["self"]],[["callablecallfor"],["option",["callablecallfor"]]]]],[11,"is_sub_type","","",7,[[["self"]],[["callablecallfor"],["option",["callablecallfor"]]]]],[11,"is_sub_type","","",7,[[["self"]],[["callablecallfor"],["option",["callablecallfor"]]]]],[11,"get_dispatch_info","","",7,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",7,[[["origin"]],["dispatchresultwithpostinfo"]]],[11,"get_call_metadata","","",7,[[["self"]],["callmetadata"]]],[11,"get_module_names","","",7,[[]]],[11,"get_call_names","","",7,[[["str"]]]],[11,"pre_dispatch","","",35,[[],[["result",["transactionvalidityerror"]],["transactionvalidityerror"]]]],[11,"validate_unsigned","","",35,[[["transactionsource"]],["transactionvalidity"]]],[11,"get","","",8,[[],["i"]]],[11,"get","","",9,[[],["i"]]],[11,"get","","",10,[[],["i"]]],[11,"get","","",11,[[],["i"]]],[11,"get","","",12,[[],["i"]]],[11,"get","","",13,[[],["i"]]],[11,"get","","",14,[[],["i"]]],[11,"get","","",15,[[],["i"]]],[11,"get","","",16,[[],["i"]]],[11,"get","","",17,[[],["i"]]],[11,"get","","",18,[[],["i"]]],[11,"get","","",19,[[],["i"]]],[11,"get","","",20,[[],["i"]]],[11,"get","","",21,[[],["i"]]],[11,"get","","",22,[[],["i"]]],[11,"get","","",23,[[],["i"]]],[11,"get","","",24,[[],["i"]]],[11,"get","","",25,[[],["i"]]],[11,"get","","",26,[[],["i"]]],[11,"get","","",27,[[],["i"]]],[11,"get","","",28,[[],["i"]]],[11,"get","","",29,[[],["i"]]],[11,"get","","",30,[[],["i"]]],[11,"get","","",31,[[],["i"]]],[11,"get","","",32,[[],["i"]]],[11,"get","","",33,[[],["i"]]],[11,"get","","",34,[[],["i"]]],[11,"module_to_index","","",36,[[],[["option",["usize"]],["usize"]]]],[11,"convert","plasm_runtime::impls","",39,[[["balance"]],["u64"]]],[11,"convert","","",39,[[["u128"]],["balance"]]],[11,"convert","","",40,[[["fixed128"]],["fixed128"]]],[11,"key_ids","plasm_runtime","",3,[[]]],[11,"get_raw","","",3,[[["self"],["keytypeid"]]]],[11,"assimilate_storage","","",4,[[["self"],["storage"]],[["string"],["result",["string"]]]]],[11,"initialize","plasm_runtime::constants::currency","",41,[[["self"]]]],[11,"construct_runtime_api","plasm_runtime","",37,[[["c"]],["apiref"]]],[11,"map_api_result","","",38,[[["fnonce"],["self"]],["result"]]],[11,"has_api","","",38,[[["blockid"],["self"]],[["result",["bool"]],["bool"]]]],[11,"has_api_with","","",38,[[["blockid"],["self"],["fn"]],[["result",["bool"]],["bool"]]]],[11,"record_proof","","",38,[[["self"]]]],[11,"extract_proof","","",38,[[["self"]],[["option",["storageproof"]],["storageproof"]]]],[11,"into_storage_changes","","",38,[[["changestriestate"],["option",["changestriestate"]],["self"]],[["result",["storagechanges","string"]],["storagechanges"],["string"]]]],[11,"version","","",35,[[],["runtimeversion"]]],[11,"execute_block","","",35,[[["block"]]]],[11,"initialize_block","","",35,[[]]],[11,"metadata","","",35,[[],["opaquemetadata"]]],[11,"Core_version_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded",["runtimeversion"]],["result",["nativeorencoded"]]]]],[11,"Core_execute_block_runtime_api_impl","","",38,[[["option"],["u8"],["executioncontext"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded"],["result",["nativeorencoded"]]]]],[11,"Core_initialize_block_runtime_api_impl","","",38,[[["u8"],["option"],["executioncontext"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded"],["result",["nativeorencoded"]]]]],[11,"Metadata_metadata_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["opaquemetadata"]]]]],[11,"call","","",35,[[["accountid"],["balance"],["vec",["u8"]],["u64"],["u8"]],["contractexecresult"]]],[11,"get_storage","","",35,[[["accountid"]],["getstorageresult"]]],[11,"rent_projection","","",35,[[["accountid"]],[["rentprojectionresult",["blocknumber"]],["blocknumber"]]]],[11,"ContractsApi_call_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["contractexecresult"]]]]],[11,"ContractsApi_get_storage_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["getstorageresult"]]]]],[11,"ContractsApi_rent_projection_runtime_api_impl","","",38,[[["accountid"],["u8"],["executioncontext"],["option",["accountid"]],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["rentprojectionresult"]]]]],[11,"create_transaction","","",35,[[["accountid"],["index"],["call"]],["option"]]],[11,"grandpa_authorities","","",35,[[],["grandpaauthoritylist"]]],[11,"submit_report_equivocation_extrinsic","","",35,[[["opaquekeyownershipproof"],["numberfor",["block"]],["equivocationproof",["numberfor"]]],["option"]]],[11,"generate_key_ownership_proof","","",35,[[["grandpaid"],["setid"]],[["opaquekeyownershipproof"],["option",["opaquekeyownershipproof"]]]]],[11,"GrandpaApi_grandpa_authorities_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["grandpaauthoritylist"]]]]],[11,"GrandpaApi_submit_report_equivocation_extrinsic_runtime_api_impl","","",38,[[["option"],["u8"],["executioncontext"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["option"]]]]],[11,"GrandpaApi_generate_key_ownership_proof_runtime_api_impl","","",38,[[["option"],["executioncontext"],["u8"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["option"]]]]],[11,"generate_session_keys","","",35,[[["vec",["u8"]],["option",["vec"]]],[["vec",["u8"]],["u8"]]]],[11,"decode_session_keys","","",35,[[["vec",["u8"]],["u8"]],[["vec"],["option",["vec"]]]]],[11,"SessionKeys_generate_session_keys_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option",["option"]],["option",["vec"]],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["vec"]]]]],[11,"SessionKeys_decode_session_keys_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option",["vec"]],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["option"]]]]],[11,"query_info","","",35,[[["u32"],["uncheckedextrinsic"]],[["runtimedispatchinfo",["balance"]],["balance"]]]],[11,"TransactionPaymentApi_query_info_runtime_api_impl","","",38,[[["option"],["executioncontext"],["u8"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded",["runtimedispatchinfo"]],["result",["nativeorencoded"]]]]],[11,"configuration","","",35,[[],["babegenesisconfiguration"]]],[11,"current_epoch_start","","",35,[[],["slotnumber"]]],[11,"BabeApi_configuration_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded",["babegenesisconfiguration"]],["result",["nativeorencoded"]]]]],[11,"BabeApi_current_epoch_start_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["slotnumber"]]]]],[11,"apply_extrinsic","","",35,[[],["applyextrinsicresult"]]],[11,"finalize_block","","",35,[[]]],[11,"inherent_extrinsics","","",35,[[["inherentdata"]],["vec"]]],[11,"check_inherents","","",35,[[["inherentdata"],["block"]],["checkinherentsresult"]]],[11,"random_seed","","",35,[[]]],[11,"BlockBuilder_apply_extrinsic_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["applyextrinsicresult"]]]]],[11,"BlockBuilder_finalize_block_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded"]]]],[11,"BlockBuilder_inherent_extrinsics_runtime_api_impl","","",38,[[["u8"],["inherentdata"],["executioncontext"],["option",["inherentdata"]],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["vec"]]]]],[11,"BlockBuilder_check_inherents_runtime_api_impl","","",38,[[["option"],["u8"],["executioncontext"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded",["checkinherentsresult"]],["result",["nativeorencoded"]]]]],[11,"BlockBuilder_random_seed_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded"],["result",["nativeorencoded"]]]]],[11,"validate_transaction","","",35,[[["transactionsource"]],["transactionvalidity"]]],[11,"TaggedTransactionQueue_validate_transaction_runtime_api_impl","","",38,[[["u8"],["executioncontext"],["option"],["vec",["u8"]],["self"],["blockid"]],[["result",["nativeorencoded"]],["nativeorencoded",["transactionvalidity"]]]]],[11,"offchain_worker","","",35,[[]]],[11,"OffchainWorkerApi_offchain_worker_runtime_api_impl","","",38,[[["u8"],["option"],["executioncontext"],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded"],["result",["nativeorencoded"]]]]],[11,"account_nonce","","",35,[[["accountid"]],["index"]]],[11,"AccountNonceApi_account_nonce_runtime_api_impl","","",38,[[["accountid"],["u8"],["executioncontext"],["option",["accountid"]],["vec",["u8"]],["self"],["blockid"]],[["nativeorencoded",["index"]],["result",["nativeorencoded"]]]]],[11,"from_parts","plasm_runtime::constants::fee","From an explicitly defined number of parts per maximum of…",42,[[["u32"]],["perbill"]]],[11,"from_percent","","Converts a percent into `Self`. Equal to `x / 100`.",42,[[["u32"]],["perbill"]]],[11,"one","","See [`PerThing::one`].",42,[[],["perbill"]]],[11,"is_one","","See [`PerThing::is_one`].",42,[[["self"]],["bool"]]],[11,"zero","","See [`PerThing::zero`].",42,[[],["perbill"]]],[11,"is_zero","","See [`PerThing::is_zero`].",42,[[["self"]],["bool"]]],[11,"deconstruct","","See [`PerThing::deconstruct`].",42,[[],["u32"]]],[11,"square","","See [`PerThing::square`].",42,[[],["perbill"]]],[11,"from_fraction","","See [`PerThing::from_fraction`].",42,[[["f64"]],["perbill"]]],[11,"from_rational_approximation","","See [`PerThing::from_rational_approximation`].",42,[[["n"]],["perbill"]]],[11,"mul_floor","","See [`PerThing::mul_floor`].",42,[[["n"]],["n"]]],[11,"mul_ceil","","See [`PerThing::mul_ceil`].",42,[[["n"]],["n"]]],[11,"saturating_reciprocal_mul","","See [`PerThing::saturating_reciprocal_mul`].",42,[[["n"]],["n"]]],[11,"saturating_reciprocal_mul_floor","","See [`PerThing::saturating_reciprocal_mul_floor`].",42,[[["n"]],["n"]]],[11,"saturating_reciprocal_mul_ceil","","See [`PerThing::saturating_reciprocal_mul_ceil`].",42,[[["n"]],["n"]]]],"p":[[4,"BalancesCall"],[4,"TimestampCall"],[8,"BuildStorage"],[3,"SessionKeys"],[3,"GenesisConfig"],[4,"Event"],[4,"Origin"],[4,"Call"],[3,"BlockHashCount"],[3,"MaximumBlockWeight"],[3,"MaximumBlockLength"],[3,"AvailableBlockRatio"],[3,"MaximumExtrinsicWeight"],[3,"Version"],[3,"EpochDuration"],[3,"ExpectedBlockTime"],[3,"IndexDeposit"],[3,"ExistentialDeposit"],[3,"TransactionByteFee"],[3,"WeightFeeCoefficient"],[3,"TargetBlockFullness"],[3,"MinimumPeriod"],[3,"SessionsPerEra"],[3,"BondingDuration"],[3,"ContractTransferFee"],[3,"ContractCreationFee"],[3,"ContractTransactionBaseFee"],[3,"ContractTransactionByteFee"],[3,"ContractFee"],[3,"TombstoneDeposit"],[3,"RentByteFee"],[3,"RentDepositOffset"],[3,"SurchargeReward"],[3,"WindowSize"],[3,"ReportLatency"],[3,"Runtime"],[3,"ModuleToIndex"],[3,"RuntimeApi"],[3,"RuntimeApiImpl"],[3,"CurrencyToVoteHandler"],[3,"TargetedFeeAdjustment"],[3,"HOLDERS"],[3,"Perbill"]]};
searchIndex["subkey"] = {"doc":"","i":[[3,"Ed25519","subkey","",null,null],[3,"Sr25519","","",null,null],[3,"Ecdsa","","",null,null],[5,"get_app","","",null,[[],["app"]]],[5,"main","","",null,[[]]],[5,"execute","","",null,[[["argmatches"]]]],[5,"generate_mnemonic","","Creates a new randomly generated mnemonic phrase.",null,[[["argmatches"]],["mnemonic"]]],[5,"do_sign","","",null,[[["str"],["option",["str"]],["argmatches"],["vec",["u8"]],["u8"]],["string"]]],[5,"do_verify","","",null,[[["vec",["u8"]],["u8"],["argmatches"]],["bool"]]],[5,"read_message_from_stdin","","",null,[[["bool"]],[["vec",["u8"]],["u8"]]]],[5,"read_required_parameter","","",null,[[["str"],["argmatches"]],["fromstr"]]],[5,"read_genesis_hash","","",null,[[["argmatches"]],["h256"]]],[5,"read_signature","","",null,[[["argmatches"]]]],[5,"read_public_key","","",null,[[["str"],["option",["str"]]]]],[5,"read_account_id","","",null,[[["str"],["option",["str"]]],["accountid"]]],[5,"read_pair","","",null,[[["str"],["option",["str"]]]]],[5,"format_signature","","",null,[[],["string"]]],[5,"format_seed","","",null,[[],["string"]]],[5,"format_public_key","","",null,[[],["string"]]],[5,"format_account_id","","",null,[[],["string"]]],[5,"create_extrinsic","","",null,[[["call"],["index"],["h256"]],["uncheckedextrinsic"]]],[5,"print_extrinsic","","",null,[[["uncheckedextrinsic"]]]],[5,"print_usage","","",null,[[["argmatches"]]]],[5,"plasm_account_from_public","","",null,[[],["accountid"]]],[5,"eth_account_from_public","","",null,[[],["h160"]]],[0,"vanity","","",null,null],[3,"KeyPair","subkey::vanity","A structure used to carry both Pair and seed. This should…",null,null],[12,"pair","","",0,null],[12,"seed","","",0,null],[12,"score","","",0,null],[5,"good_waypoint","","",null,[[["u64"]],["u64"]]],[5,"next_seed","","",null,[[]]],[5,"calculate_score","","Calculate the score of a key based on the desired input.",null,[[["str"]],["usize"]]],[5,"generate_key","","",null,[[["str"]],[["str"],["result",["keypair","str"]],["keypair"]]]],[6,"SignatureOf","subkey","",null,null],[6,"PublicOf","","",null,null],[6,"SeedOf","","",null,null],[6,"AccountPublic","","",null,null],[8,"Crypto","","",null,null],[16,"Pair","","",1,null],[16,"Public","","",1,null],[11,"pair_from_suri","","",1,[[["str"],["option",["str"]]]]],[11,"ss58_from_pair","","",1,[[],["string"]]],[11,"public_from_pair","","",1,[[]]],[11,"print_from_uri","","",1,[[["str"],["option",["str"]],["ss58addressformat"],["option",["ss58addressformat"]]]]],[8,"SignatureT","","",null,null],[11,"into_runtime","","Converts the signature into a runtime account signature,…",2,[[],["signature"]]],[8,"PublicT","","",null,null],[11,"into_runtime","","Converts the public key into a runtime account public key,…",3,[[]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","subkey::vanity","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"pair_from_suri","subkey","",4,[[["str"],["option",["str"]]]]]],"p":[[3,"KeyPair"],[8,"Crypto"],[8,"SignatureT"],[8,"PublicT"],[3,"Ed25519"],[3,"Sr25519"],[3,"Ecdsa"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);