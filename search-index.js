var N=null,E="",T="t",U="u",searchIndex={};
var R=["dispatcherror","pallet_contract_operator","accountid","parameters","option","instantiate","Deploys a contact and insert relation of a contract and an…","update_parameters","Updates parameters for an identified contact.","dispatchresult","change_operator","Changes an operator for identified contracts.","keyarg","result","try_from","try_into","borrow_mut","unique_saturated_into","from_ref","Get a reference to the inner from the outer.","from_mut","Get a mutable reference to the inner from the outer.","unchecked_into","decode_len","type_id","hashed_key_for","keyarg1","keyarg2","append_or_insert","to_owned","clone_into","borrow","typeid","size_hint","using_encoded","encode_to","to_keyed_vec","decode_all","blake2_128","blake2_256","twox_128","twox_256","twox_64_concat","pallet_contract_operator::parameters","is_exists_contract","operator","defaultparameters","rawevent","formatter","decode","metadata","module_prefix","storage_prefix","from_optional_value_to_query","from_query_to_optional_value","RawEvent","DefaultParameters","Verifiable","ContractFinder","OperatorHasContracts","ContractHasOperator","ContractParameters","True if the next session change will be a new era…","The version of storage for upgrade.","Set of next era accounts that can validate blocks.","Events for this module.","can_be_nominated","option_expired","option_p","pallet_plasm_staking","[`RawEvent`] specialized for the configuration [`Trait`]","The overarching event type.","Map from all locked \"stash\" accounts to the controller…","Map from all (unlocked) \"controller\" accounts to the info…","encodelike","balanceof","stakingledger","Where the reward payment should be made. Keyed by stash.","nominations","Nominators for a particular contract that is in action…","The currently elected validator set keyed by stash account…","The current era index.","The start of the current era.","The session index at which the current era started.","force_era","storage_version","validators","storage","string","sessionindex","is_clear","initialize","encode","exists","insert","valarg","remove","mutate","append","enumerate","translate","hashed_key","Append the given items to the value in the storage.","append_or_put","Safely append the given items to the value in the storage.…","Read the length of the value in a fast way, without…","pallet_plasm_staking::parameters","to_string","rewarddestination","deserialize","forcing","serialize","stakingparameters","exposure","default","individualexposure","unlockchunk","ordering","partial_cmp","get_dispatch_info","dispatchinfo","head_prefix","eraindex","momentof","on_finalize","on_initialize","Nominations","RewardDestination","StakingLedger","GenesisConfig","StakingParameters","IndividualExposure","UnlockChunk","StakedContracts","CurrentElected","CurrentEra","CurrentEraStart","CurrentEraStartSessionIndex","StorageVersion","Validators","Mode of era-forcing.","NotForcing","Not forcing anything - just let whatever happen.","Force a new era, then reset to `NotForcing` as soon as it…","ForceNone","Avoid a new era indefinitely.","ForceAlways","Force a new era at the end of all sessions indefinitely.","build_storage","assimilate_storage","Assimilate the storage for this module into pre-existing…","SessionsPerEra","BondingDuration","contracts","plasm_staking","Timestamp","plasm_runtime","plasm_runtime::constants","dispatch","Contracts","PlasmStaking","FinalityTracker","RandomnessCollectiveFlip","balance","blocknumber","contains","plasm_runtime::impls","plasm_runtime::constants::fee","perbill","saturating_add","saturating_sub","saturating_mul","runtime","callablecallfor","timestamp","balances","plasmstaking","finalitytracker","randomnesscollectiveflip","sessionkeys","runtimeversion","storageproof","nativeorencoded","executioncontext","opaquemetadata","blockid","contractexecresult","getstorageresult","transactionvalidityerror","is_sub_type","grandpaauthoritylist","runtimedispatchinfo","babeconfiguration","inherentdata","applyextrinsicresult","checkinherentsresult","transactionvalidity","numberfor","BalancesCall","BuildStorage","TimestampCall","SessionKeys","BlockHashCount","MaximumBlockWeight","MaximumBlockLength","AvailableBlockRatio","EpochDuration","ExpectedBlockTime","ExistentialDeposit","TransferFee","CreationFee","TransactionBaseFee","TransactionByteFee","WeightFeeCoefficient","TargetBlockFullness","MinimumPeriod","ContractTransferFee","ContractCreationFee","ContractTransactionBaseFee","ContractTransactionByteFee","ContractFee","TombstoneDeposit","RentByteFee","RentDepositOffset","SurchargeReward","WindowSize","ReportLatency","ModuleToIndex","RuntimeApi","RuntimeApiImpl","LinearWeightToFee","TargetedFeeAdjustment","native_version","nativeversion","nativeexecutor","NativeExecutor","lightdeps","LightDeps","chainspec","ChainSpec","plasm_cli","plasm_cli::chain_spec","versioninfo","extensions","VersionInfo","Extensions","blake2_128_concat"];
searchIndex["pallet_contract_operator"]={"doc":E,"i":[[3,R[59],R[1],"A mapping from operators to operated contracts by them.",N,N],[3,R[60],E,"A mapping from operated contract by operator to it.",N,N],[3,R[61],E,"A mapping from contract to it's parameters.",N,N],[3,"Module",E,E,N,N],[4,"Call",E,"The module declaration.",N,N],[13,R[5],E,R[6],0,N],[13,R[7],E,R[8],0,N],[13,R[10],E,R[11],0,N],[4,R[55],E,R[65],N,N],[13,"SetOperator",E,"When operator changed, it is issued that 1-st Operator…",1,N],[13,"SetParameters",E,"When contract's parameters changed, it is issued that 1-st…",1,N],[0,R[3],E,E,N,N],[3,R[56],R[43],E,N,N],[12,R[66],E,E,2,N],[12,R[67],E,E,2,N],[12,R[68],E,E,2,N],[8,R[57],E,E,N,N],[10,"verify",E,E,3,[[["self"]],[[R[0]],[R[13],[R[0]]]]]],[6,"Event",R[1],R[70],N,N],[8,R[58],E,E,N,N],[10,R[44],E,E,4,[[[R[2]]],["bool"]]],[10,R[45],E,E,4,[[[R[2]]],[R[4]]]],[10,R[3],E,E,4,[[[R[2]]],[R[4]]]],[8,"Trait",E,"The module's configuration trait.",N,N],[16,"Parameters",E,E,5,N],[16,"Event",E,R[71],5,N],[11,R[5],E,R[6],6,[[["u8"],["codehash"],["vec",["u8"]],[R[75]],["gas"]],[R[9]]]],[11,R[7],E,R[8],6,[[],[R[9]]]],[11,R[10],E,R[11],6,[[["vec"]],[R[9]]]],[11,R[50],E,E,1,[[]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[14],E,E,7,[[[U]],[R[13]]]],[11,R[15],E,E,7,[[],[R[13]]]],[11,R[31],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[24],E,E,7,[[["self"]],[R[32]]]],[11,R[17],E,E,7,[[],[T]]],[11,R[25],E,E,7,[[[R[12]]],[["vec",["u8"]],["u8"]]]],[11,"swap",E,E,7,[[[R[26]],[R[27]]]]],[11,R[93],E,E,7,[[[R[12]]],["bool"]]],[11,"get",E,E,7,[[[R[12]]]]],[11,R[94],E,E,7,[[[R[95]],[R[12]]]]],[11,R[96],E,E,7,[[[R[12]]]]],[11,R[97],E,E,7,[[["f"],[R[12]]],["r"]]],[11,"take",E,E,7,[[[R[12]]]]],[11,R[98],E,E,7,[[["items"],[R[12]]],[["str"],[R[13],["str"]]]]],[11,R[28],E,E,7,[[["items"],[R[12]]]]],[11,R[23],E,E,7,[[[R[12]]],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[18],E,R[19],7,[[["outer"]],[T]]],[11,R[20],E,R[21],7,[[["outer"]],[T]]],[11,R[22],E,E,7,[[],[T]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[14],E,E,8,[[[U]],[R[13]]]],[11,R[15],E,E,8,[[],[R[13]]]],[11,R[31],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[24],E,E,8,[[["self"]],[R[32]]]],[11,R[17],E,E,8,[[],[T]]],[11,R[18],E,R[19],8,[[["outer"]],[T]]],[11,R[20],E,R[21],8,[[["outer"]],[T]]],[11,R[22],E,E,8,[[],[T]]],[11,R[93],E,E,8,[[[R[12]]],["bool"]]],[11,"get",E,E,8,[[[R[12]]]]],[11,"swap",E,E,8,[[[R[26]],[R[27]]]]],[11,R[94],E,E,8,[[[R[95]],[R[12]]]]],[11,R[96],E,E,8,[[[R[12]]]]],[11,R[97],E,E,8,[[["f"],[R[12]]],["r"]]],[11,"take",E,E,8,[[[R[12]]]]],[11,R[99],E,E,8,[[]]],[11,"head",E,E,8,[[],[R[4]]]],[11,R[23],E,E,8,[[[R[12]]],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[100],E,E,8,[[["tv"],["tk"]],[[R[13],[R[4]]],[R[4]]]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[14],E,E,9,[[[U]],[R[13]]]],[11,R[15],E,E,9,[[],[R[13]]]],[11,R[31],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[24],E,E,9,[[["self"]],[R[32]]]],[11,R[17],E,E,9,[[],[T]]],[11,R[25],E,E,9,[[[R[12]]],[["vec",["u8"]],["u8"]]]],[11,"swap",E,E,9,[[[R[26]],[R[27]]]]],[11,R[93],E,E,9,[[[R[12]]],["bool"]]],[11,"get",E,E,9,[[[R[12]]]]],[11,R[94],E,E,9,[[[R[95]],[R[12]]]]],[11,R[96],E,E,9,[[[R[12]]]]],[11,R[97],E,E,9,[[["f"],[R[12]]],["r"]]],[11,"take",E,E,9,[[[R[12]]]]],[11,R[98],E,E,9,[[["items"],[R[12]]],[["str"],[R[13],["str"]]]]],[11,R[28],E,E,9,[[["items"],[R[12]]]]],[11,R[23],E,E,9,[[[R[12]]],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[18],E,R[19],9,[[["outer"]],[T]]],[11,R[20],E,R[21],9,[[["outer"]],[T]]],[11,R[22],E,E,9,[[],[T]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[30],E,E,6,[[["self"],[T]]]],[11,R[14],E,E,6,[[[U]],[R[13]]]],[11,R[15],E,E,6,[[],[R[13]]]],[11,R[31],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[24],E,E,6,[[["self"]],[R[32]]]],[11,R[17],E,E,6,[[],[T]]],[11,R[18],E,R[19],6,[[["outer"]],[T]]],[11,R[20],E,R[21],6,[[["outer"]],[T]]],[11,R[22],E,E,6,[[],[T]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,R[14],E,E,0,[[[U]],[R[13]]]],[11,R[15],E,E,0,[[],[R[13]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[24],E,E,0,[[["self"]],[R[32]]]],[11,R[17],E,E,0,[[],[T]]],[11,R[33],E,E,0,[[["self"]],["usize"]]],[11,R[34],E,E,0,[[["self"],["f"]],["r"]]],[11,R[92],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,0,[[["w"],["self"]]]],[11,R[49],E,E,0,[[["i"]],[["error"],[R[13],["error"]]]]],[11,R[18],E,R[19],0,[[["outer"]],[T]]],[11,R[20],E,R[21],0,[[["outer"]],[T]]],[11,R[22],E,E,0,[[],[T]]],[11,R[36],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,0,[[],[["error"],[R[13],["error"]]]]],[11,R[38],E,E,0,[[["self"]]]],[11,R[39],E,E,0,[[["self"]]]],[11,R[246],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,0,[[["self"]]]],[11,R[41],E,E,0,[[["self"]]]],[11,R[42],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,R[14],E,E,1,[[[U]],[R[13]]]],[11,R[15],E,E,1,[[],[R[13]]]],[11,R[31],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[24],E,E,1,[[["self"]],[R[32]]]],[11,R[17],E,E,1,[[],[T]]],[11,R[33],E,E,1,[[["self"]],["usize"]]],[11,R[34],E,E,1,[[["self"],["f"]],["r"]]],[11,R[92],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,1,[[["w"],["self"]]]],[11,R[49],E,E,1,[[["i"]],[["error"],[R[13],["error"]]]]],[11,R[18],E,R[19],1,[[["outer"]],[T]]],[11,R[20],E,R[21],1,[[["outer"]],[T]]],[11,R[22],E,E,1,[[],[T]]],[11,R[36],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,1,[[],[["error"],[R[13],["error"]]]]],[11,R[38],E,E,1,[[["self"]]]],[11,R[39],E,E,1,[[["self"]]]],[11,R[246],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,1,[[["self"]]]],[11,R[41],E,E,1,[[["self"]]]],[11,R[42],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[43],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[30],E,E,2,[[["self"],[T]]]],[11,R[107],E,E,2,[[["self"]],[R[88]]]],[11,R[14],E,E,2,[[[U]],[R[13]]]],[11,R[15],E,E,2,[[],[R[13]]]],[11,R[31],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[24],E,E,2,[[["self"]],[R[32]]]],[11,R[17],E,E,2,[[],[T]]],[11,R[33],E,E,2,[[["self"]],["usize"]]],[11,R[34],E,E,2,[[["self"],["f"]],["r"]]],[11,R[92],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,2,[[["w"],["self"]]]],[11,R[49],E,E,2,[[["i"]],[["error"],[R[13],["error"]]]]],[11,R[18],E,R[19],2,[[["outer"]],[T]]],[11,R[20],E,R[21],2,[[["outer"]],[T]]],[11,R[22],E,E,2,[[],[T]]],[11,R[36],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,2,[[],[["error"],[R[13],["error"]]]]],[11,R[38],E,E,2,[[["self"]]]],[11,R[39],E,E,2,[[["self"]]]],[11,R[246],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,2,[[["self"]]]],[11,R[41],E,E,2,[[["self"]]]],[11,R[42],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[90],E,E,2,[[["self"]],["bool"]]],[11,"clear",E,E,2,[[],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[91],E,E,2,[[]]],[11,"verify",E,E,2,[[["self"]],[[R[0]],[R[13],[R[0]]]]]],[11,R[44],R[1],E,6,[[],["bool"]]],[11,R[45],E,E,6,[[],[R[4]]]],[11,R[3],E,E,6,[[],[R[4]]]],[11,"clone",R[43],E,2,[[["self"]],[R[46]]]],[11,"clone",R[1],E,6,[[["self"]],["module"]]],[11,"clone",E,E,0,[[["self"]],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[47]]]],[11,R[114],R[43],E,2,[[],[R[46]]]],[11,"eq",E,E,2,[[[R[46]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[46]],["self"]],["bool"]]],[11,"eq",R[1],E,6,[[["self"],["module"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["module"]],["bool"]]],[11,"eq",E,E,0,[[["self"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[47]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[47]]],["bool"]]],[11,"fmt",R[43],E,2,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,2,[[[R[48]],["self"]],[R[13]]]],[11,"fmt",R[1],E,6,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,0,[[["self"],[R[48]]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,1,[[["self"],[R[48]]],[R[13]]]],[11,"hash",R[43],E,2,[[["self"],["__h"]]]],[11,R[35],E,E,2,[[["self"],["encout"]]]],[11,R[35],R[1],E,0,[[["self"],["encout"]]]],[11,R[35],E,E,1,[[["self"],["encout"]]]],[11,R[49],R[43],E,2,[[["decin"]],[[R[13],["error"]],["error"]]]],[11,R[49],R[1],E,0,[[["decin"]],[[R[13],["error"]],["error"]]]],[11,R[49],E,E,1,[[["decin"]],[[R[13],["error"]],["error"]]]],[11,R[111],R[43],E,2,[[["self"],["__s"]],[R[13]]]],[11,R[109],E,E,2,[[["__d"]],[R[13]]]],[11,R[50],R[1],E,6,[[]]],[11,R[119],E,E,0,[[["self"]],[R[120]]]],[11,R[158],E,E,0,[[],[R[9]]]],[11,R[53],E,E,8,[[[R[4]]]]],[11,R[54],E,E,8,[[],[R[4]]]],[11,R[51],E,E,8,[[]]],[11,R[52],E,E,8,[[]]],[11,R[121],E,E,8,[[]]],[11,R[51],E,E,7,[[]]],[11,R[52],E,E,7,[[]]],[11,R[53],E,E,7,[[["vec"],[R[4],["vec"]]]]],[11,R[54],E,E,7,[[],[["vec"],[R[4],["vec"]]]]],[11,R[51],E,E,9,[[]]],[11,R[52],E,E,9,[[]]],[11,R[53],E,E,9,[[[R[4]]]]],[11,R[54],E,E,9,[[],[R[4]]]],[11,R[51],E,E,7,[[]]],[11,R[52],E,E,7,[[]]],[11,R[51],E,E,8,[[]]],[11,R[52],E,E,8,[[]]],[11,R[51],E,E,9,[[]]],[11,R[52],E,E,9,[[]]]],"p":[[4,"Call"],[4,R[55]],[3,R[56]],[8,R[57]],[8,R[58]],[8,"Trait"],[3,"Module"],[3,R[59]],[3,R[60]],[3,R[61]]]};
searchIndex["pallet_plasm_staking"]={"doc":"Plasm Staking Module","i":[[4,"Forcing",R[69],R[140],N,N],[13,R[141],E,R[142],0,N],[13,"ForceNew",E,R[143],0,N],[13,R[144],E,R[145],0,N],[13,R[146],E,R[147],0,N],[3,R[126],E,"A record of the nominations made by a specific account.",N,N],[12,"targets",E,"The targets of nomination.",1,N],[12,"submitted_in",E,"The era the nominations were submitted.",1,N],[12,"suppressed",E,"Whether the nominations have been suppressed.",1,N],[4,R[127],E,"A destination account for payment.",N,N],[13,"Staked",E,"Pay into the stash account, increasing the amount at stake…",2,N],[13,"Stash",E,"Pay into the stash account, not increasing the amount at…",2,N],[13,"Controller",E,"Pay into the controller account.",2,N],[6,"SessionIndex",E,"Simple index type with which we can count sessions.",N,N],[3,R[131],E,"The amount of exposure (to slashing) than an individual…",N,N],[3,"Exposure",E,"A snapshot of the stake backing a single validator in the…",N,N],[12,"total",E,"The total balance backing this validator.",3,N],[12,"own",E,"The validator's own stash that is exposed.",3,N],[12,"others",E,"The portions of nominators stashes that are exposed.",3,N],[3,R[132],E,"Just a Balance/BlockNumber tuple to encode when a chunk of…",N,N],[3,R[128],E,"The ledger of a (bonded) stash.",N,N],[12,"stash",E,"The stash account whose balance is actually locke,ed and…",4,N],[12,"total",E,"The total amount of the stash's balance that we are…",4,N],[12,"active",E,"The total amount of the stash's balance that will be at…",4,N],[12,"unlocking",E,"Any balance that is becoming free, which may eventually be…",4,N],[3,R[129],E,E,N,N],[12,R[84],E,R[62],5,N],[12,R[85],E,R[63],5,N],[12,R[86],E,R[64],5,N],[3,"Bonded",E,R[72],N,N],[3,"Ledger",E,R[73],N,N],[3,"Payee",E,R[77],N,N],[3,R[133],E,R[79],N,N],[3,R[134],E,R[80],N,N],[3,R[135],E,R[81],N,N],[3,R[136],E,R[82],N,N],[3,R[137],E,R[83],N,N],[3,"ForceEra",E,R[62],N,N],[3,R[138],E,R[63],N,N],[3,R[139],E,R[64],N,N],[3,"Module",E,E,N,N],[4,"Call",E,E,N,N],[13,"bond",E,"Take the origin account as a stash and lock up `value` of…",6,N],[13,"bond_extra",E,"Add some extra amount that have appeared in the stash…",6,N],[13,"unbond",E,"Schedule a portion of the stash to be unlocked ready for…",6,N],[13,"withdraw_unbonded",E,"Remove any unlocked chunks from the `unlocking` queue from…",6,N],[13,"nominate_contracts",E,"Declare the desire to nominate `targets` for the origin…",6,N],[13,"chill",E,"Declare no desire to either validate or nominate.",6,N],[13,"set_payee",E,"(Re-)set the payment target for a controller.",6,N],[13,"set_controller",E,"(Re-)set the controller of a stash.",6,N],[13,"force_no_eras",E,"Force there to be no new eras indefinitely.",6,N],[13,"force_new_era",E,"Force there to be a new era at the end of the next…",6,N],[13,"force_new_era_always",E,"Force there to be a new era at the end of sessions…",6,N],[13,"set_validators",E,"Manually set new validators.",6,N],[4,R[55],E,R[65],N,N],[13,"NewValidators",E,"Validator set changed.",7,N],[13,"Reward",E,"The amount of minted rewards. (for validators with…",7,N],[0,R[3],E,"Plasm Staking Parameters",N,N],[3,R[130],R[106],E,N,N],[12,R[66],E,"If true, the operated contracts can be nominated else is…",8,N],[12,R[67],E,"Expired of that option can be exercised.",8,N],[12,R[68],E,"For calculating option, p.",8,N],[6,"EraIndex",R[69],E,N,N],[6,"BalanceOf",E,E,N,N],[6,"MomentOf",E,E,N,N],[6,"Event",E,R[70],N,N],[8,"Trait",E,E,N,N],[16,"Currency",E,"The staking balance.",9,N],[16,R[58],E,E,9,N],[16,R[152],E,"Number of eras that staked funds must remain bonded for.",9,N],[16,"RewardRemainder",E,"Tokens have been minted and are unused for…",9,N],[16,"Reward",E,"Handler for the unbalanced increment when rewarding a…",9,N],[16,"Time",E,"Time used for computing era duration.",9,N],[16,R[151],E,"Number of sessions per era.",9,N],[16,"Event",E,R[71],9,N],[11,"bonded",E,R[72],10,[[[R[74]]],[R[4]]]],[11,"ledger",E,R[73],10,[[[R[74]]],[[R[4],[R[76]]],[R[76],[R[75]]]]]],[11,"payee",E,R[77],10,[[[R[74]]],[R[108]]]],[11,"dapps_nominations",E,"The map from nominator stash key to the set of stash keys…",10,[[[R[74]]],[[R[4],[R[78]]],[R[78]]]]],[11,"staked_contracts",E,R[79],10,[[[R[74]]],[[R[113],[R[75]]],[R[75]]]]],[11,"current_elected",E,R[80],10,[[],["vec"]]],[11,"current_era",E,R[81],10,[[],[R[122]]]],[11,"current_era_start",E,R[82],10,[[],[R[123]]]],[11,"current_era_start_session_index",E,R[83],10,[[],[R[89]]]],[11,R[84],E,R[62],10,[[],[R[110]]]],[11,R[85],E,R[63],10,[[],["u32"]]],[11,R[86],E,R[64],10,[[],["vec"]]],[11,R[148],E,E,5,[[["self"]],[[R[13],[R[87],R[88]]],[R[87]],[R[88]]]]],[11,R[149],E,R[150],5,[[[R[87]],["self"]],[[R[88]],[R[13],[R[88]]]]]],[11,R[50],E,E,7,[[]]],[11,"slashable_balance_of",E,"The total balance that can be slashed from a stash account…",10,[[],[R[75]]]],[11,"new_session",E,"Session has just ended. Provide the validator set for the…",10,[[[R[89]]],[["vec"],[R[4],["vec"]]]]],[11,"new_era",E,"The era has changed - enact new staking set.",10,[[[R[89]]],[["vec"],[R[4],["vec"]]]]],[11,"reward_to_validators",E,E,10,[[[R[75]]],[R[75]]]],[11,"reward_to_operators",E,E,10,[[[R[75]]],[R[75]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,R[14],E,E,0,[[[U]],[R[13]]]],[11,R[15],E,E,0,[[],[R[13]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[24],E,E,0,[[["self"]],[R[32]]]],[11,R[33],E,E,0,[[["self"]],["usize"]]],[11,R[34],E,E,0,[[["self"],["f"]],["r"]]],[11,R[92],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,0,[[["w"],["self"]]]],[11,R[49],E,E,0,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,0,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,0,[[["self"]]]],[11,R[39],E,E,0,[[["self"]]]],[11,R[246],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,0,[[["self"]]]],[11,R[41],E,E,0,[[["self"]]]],[11,R[42],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[90],E,E,0,[[["self"]],["bool"]]],[11,"clear",E,E,0,[[],[T]]],[11,R[22],E,E,0,[[],[T]]],[11,R[18],E,R[19],0,[[["outer"]],[T]]],[11,R[20],E,R[21],0,[[["outer"]],[T]]],[11,R[17],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"clear",E,E,0,[[["self"]]]],[11,R[91],E,E,0,[[]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,R[14],E,E,1,[[[U]],[R[13]]]],[11,R[15],E,E,1,[[],[R[13]]]],[11,R[31],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[24],E,E,1,[[["self"]],[R[32]]]],[11,R[33],E,E,1,[[["self"]],["usize"]]],[11,R[34],E,E,1,[[["self"],["f"]],["r"]]],[11,R[92],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,1,[[["w"],["self"]]]],[11,R[49],E,E,1,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,1,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,1,[[["self"]]]],[11,R[39],E,E,1,[[["self"]]]],[11,R[246],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,1,[[["self"]]]],[11,R[41],E,E,1,[[["self"]]]],[11,R[42],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[22],E,E,1,[[],[T]]],[11,R[18],E,R[19],1,[[["outer"]],[T]]],[11,R[20],E,R[21],1,[[["outer"]],[T]]],[11,R[17],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[30],E,E,2,[[["self"],[T]]]],[11,R[14],E,E,2,[[[U]],[R[13]]]],[11,R[15],E,E,2,[[],[R[13]]]],[11,R[31],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[24],E,E,2,[[["self"]],[R[32]]]],[11,R[33],E,E,2,[[["self"]],["usize"]]],[11,R[34],E,E,2,[[["self"],["f"]],["r"]]],[11,R[92],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,2,[[["w"],["self"]]]],[11,R[49],E,E,2,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,2,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,2,[[["self"]]]],[11,R[39],E,E,2,[[["self"]]]],[11,R[246],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,2,[[["self"]]]],[11,R[41],E,E,2,[[["self"]]]],[11,R[42],E,E,2,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[90],E,E,2,[[["self"]],["bool"]]],[11,"clear",E,E,2,[[],[T]]],[11,R[22],E,E,2,[[],[T]]],[11,R[18],E,R[19],2,[[["outer"]],[T]]],[11,R[20],E,R[21],2,[[["outer"]],[T]]],[11,R[17],E,E,2,[[],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[91],E,E,2,[[]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[29],E,E,11,[[["self"]],[T]]],[11,R[30],E,E,11,[[["self"],[T]]]],[11,R[14],E,E,11,[[[U]],[R[13]]]],[11,R[15],E,E,11,[[],[R[13]]]],[11,R[31],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[24],E,E,11,[[["self"]],[R[32]]]],[11,R[33],E,E,11,[[["self"]],["usize"]]],[11,R[34],E,E,11,[[["self"],["f"]],["r"]]],[11,R[92],E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,11,[[["w"],["self"]]]],[11,R[49],E,E,11,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,11,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,11,[[["self"]]]],[11,R[39],E,E,11,[[["self"]]]],[11,R[246],E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,11,[[["self"]]]],[11,R[41],E,E,11,[[["self"]]]],[11,R[42],E,E,11,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[22],E,E,11,[[],[T]]],[11,R[18],E,R[19],11,[[["outer"]],[T]]],[11,R[20],E,R[21],11,[[["outer"]],[T]]],[11,R[17],E,E,11,[[],[T]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[30],E,E,3,[[["self"],[T]]]],[11,R[14],E,E,3,[[[U]],[R[13]]]],[11,R[15],E,E,3,[[],[R[13]]]],[11,R[31],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[24],E,E,3,[[["self"]],[R[32]]]],[11,R[33],E,E,3,[[["self"]],["usize"]]],[11,R[34],E,E,3,[[["self"],["f"]],["r"]]],[11,R[92],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,3,[[["w"],["self"]]]],[11,R[49],E,E,3,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,3,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,3,[[["self"]]]],[11,R[39],E,E,3,[[["self"]]]],[11,R[246],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,3,[[["self"]]]],[11,R[41],E,E,3,[[["self"]]]],[11,R[42],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[90],E,E,3,[[["self"]],["bool"]]],[11,"clear",E,E,3,[[],[T]]],[11,R[22],E,E,3,[[],[T]]],[11,R[18],E,R[19],3,[[["outer"]],[T]]],[11,R[20],E,R[21],3,[[["outer"]],[T]]],[11,R[17],E,E,3,[[],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"clear",E,E,3,[[["self"]]]],[11,R[91],E,E,3,[[]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[29],E,E,12,[[["self"]],[T]]],[11,R[30],E,E,12,[[["self"],[T]]]],[11,R[14],E,E,12,[[[U]],[R[13]]]],[11,R[15],E,E,12,[[],[R[13]]]],[11,R[31],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[24],E,E,12,[[["self"]],[R[32]]]],[11,R[33],E,E,12,[[["self"]],["usize"]]],[11,R[34],E,E,12,[[["self"],["f"]],["r"]]],[11,R[92],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,12,[[["w"],["self"]]]],[11,R[49],E,E,12,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,12,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,12,[[["self"]]]],[11,R[39],E,E,12,[[["self"]]]],[11,R[246],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,12,[[["self"]]]],[11,R[41],E,E,12,[[["self"]]]],[11,R[42],E,E,12,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[22],E,E,12,[[],[T]]],[11,R[18],E,R[19],12,[[["outer"]],[T]]],[11,R[20],E,R[21],12,[[["outer"]],[T]]],[11,R[17],E,E,12,[[],[T]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[30],E,E,4,[[["self"],[T]]]],[11,R[14],E,E,4,[[[U]],[R[13]]]],[11,R[15],E,E,4,[[],[R[13]]]],[11,R[31],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[24],E,E,4,[[["self"]],[R[32]]]],[11,R[33],E,E,4,[[["self"]],["usize"]]],[11,R[34],E,E,4,[[["self"],["f"]],["r"]]],[11,R[92],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,4,[[["w"],["self"]]]],[11,R[49],E,E,4,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,4,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,4,[[["self"]]]],[11,R[39],E,E,4,[[["self"]]]],[11,R[246],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,4,[[["self"]]]],[11,R[41],E,E,4,[[["self"]]]],[11,R[42],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[22],E,E,4,[[],[T]]],[11,R[18],E,R[19],4,[[["outer"]],[T]]],[11,R[20],E,R[21],4,[[["outer"]],[T]]],[11,R[17],E,E,4,[[],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[14],E,E,5,[[[U]],[R[13]]]],[11,R[15],E,E,5,[[],[R[13]]]],[11,R[31],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[24],E,E,5,[[["self"]],[R[32]]]],[11,R[22],E,E,5,[[],[T]]],[11,R[18],E,R[19],5,[[["outer"]],[T]]],[11,R[20],E,R[21],5,[[["outer"]],[T]]],[11,R[17],E,E,5,[[],[T]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"clear",E,E,5,[[["self"]]]],[11,R[91],E,E,5,[[]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[14],E,E,13,[[[U]],[R[13]]]],[11,R[15],E,E,13,[[],[R[13]]]],[11,R[31],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[24],E,E,13,[[["self"]],[R[32]]]],[11,R[25],E,E,13,[[[R[12]]],[["vec",["u8"]],["u8"]]]],[11,"swap",E,E,13,[[[R[26]],[R[27]]]]],[11,R[93],E,E,13,[[[R[12]]],["bool"]]],[11,"get",E,E,13,[[[R[12]]]]],[11,R[94],E,E,13,[[[R[95]],[R[12]]]]],[11,R[96],E,E,13,[[[R[12]]]]],[11,R[97],E,E,13,[[["f"],[R[12]]],["r"]]],[11,"take",E,E,13,[[[R[12]]]]],[11,R[98],E,E,13,[[["items"],[R[12]]],[["str"],[R[13],["str"]]]]],[11,R[28],E,E,13,[[["items"],[R[12]]]]],[11,R[23],E,E,13,[[[R[12]]],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,13,[[],[T]]],[11,R[18],E,R[19],13,[[["outer"]],[T]]],[11,R[20],E,R[21],13,[[["outer"]],[T]]],[11,R[17],E,E,13,[[],[T]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[14],E,E,14,[[[U]],[R[13]]]],[11,R[15],E,E,14,[[],[R[13]]]],[11,R[31],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[24],E,E,14,[[["self"]],[R[32]]]],[11,R[25],E,E,14,[[[R[12]]],[["vec",["u8"]],["u8"]]]],[11,"swap",E,E,14,[[[R[26]],[R[27]]]]],[11,R[93],E,E,14,[[[R[12]]],["bool"]]],[11,"get",E,E,14,[[[R[12]]]]],[11,R[94],E,E,14,[[[R[95]],[R[12]]]]],[11,R[96],E,E,14,[[[R[12]]]]],[11,R[97],E,E,14,[[["f"],[R[12]]],["r"]]],[11,"take",E,E,14,[[[R[12]]]]],[11,R[98],E,E,14,[[["items"],[R[12]]],[["str"],[R[13],["str"]]]]],[11,R[28],E,E,14,[[["items"],[R[12]]]]],[11,R[23],E,E,14,[[[R[12]]],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,14,[[],[T]]],[11,R[18],E,R[19],14,[[["outer"]],[T]]],[11,R[20],E,R[21],14,[[["outer"]],[T]]],[11,R[17],E,E,14,[[],[T]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[14],E,E,15,[[[U]],[R[13]]]],[11,R[15],E,E,15,[[],[R[13]]]],[11,R[31],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[24],E,E,15,[[["self"]],[R[32]]]],[11,R[25],E,E,15,[[[R[12]]],[["vec",["u8"]],["u8"]]]],[11,"swap",E,E,15,[[[R[26]],[R[27]]]]],[11,R[93],E,E,15,[[[R[12]]],["bool"]]],[11,"get",E,E,15,[[[R[12]]]]],[11,R[94],E,E,15,[[[R[95]],[R[12]]]]],[11,R[96],E,E,15,[[[R[12]]]]],[11,R[97],E,E,15,[[["f"],[R[12]]],["r"]]],[11,"take",E,E,15,[[[R[12]]]]],[11,R[98],E,E,15,[[["items"],[R[12]]],[["str"],[R[13],["str"]]]]],[11,R[28],E,E,15,[[["items"],[R[12]]]]],[11,R[23],E,E,15,[[[R[12]]],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,15,[[],[T]]],[11,R[18],E,R[19],15,[[["outer"]],[T]]],[11,R[20],E,R[21],15,[[["outer"]],[T]]],[11,R[17],E,E,15,[[],[T]]],[11,"vzip",E,E,15,[[],["v"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[14],E,E,16,[[[U]],[R[13]]]],[11,R[15],E,E,16,[[],[R[13]]]],[11,R[31],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[24],E,E,16,[[["self"]],[R[32]]]],[11,R[93],E,E,16,[[[R[12]]],["bool"]]],[11,"get",E,E,16,[[[R[12]]]]],[11,"swap",E,E,16,[[[R[26]],[R[27]]]]],[11,R[94],E,E,16,[[[R[95]],[R[12]]]]],[11,R[96],E,E,16,[[[R[12]]]]],[11,R[97],E,E,16,[[["f"],[R[12]]],["r"]]],[11,"take",E,E,16,[[[R[12]]]]],[11,R[99],E,E,16,[[]]],[11,"head",E,E,16,[[],[R[4]]]],[11,R[23],E,E,16,[[[R[12]]],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[100],E,E,16,[[["tv"],["tk"]],[[R[13],[R[4]]],[R[4]]]]],[11,R[22],E,E,16,[[],[T]]],[11,R[18],E,R[19],16,[[["outer"]],[T]]],[11,R[20],E,R[21],16,[[["outer"]],[T]]],[11,R[17],E,E,16,[[],[T]]],[11,"vzip",E,E,16,[[],["v"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[14],E,E,17,[[[U]],[R[13]]]],[11,R[15],E,E,17,[[],[R[13]]]],[11,R[31],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[24],E,E,17,[[["self"]],[R[32]]]],[11,R[101],E,E,17,[[]]],[11,R[93],E,E,17,[[],["bool"]]],[11,"get",E,E,17,[[]]],[11,R[100],E,E,17,[[["f"]],[[R[4]],[R[13],[R[4]]]]]],[11,"put",E,E,17,[[["arg"]]]],[11,"kill",E,E,17,[[]]],[11,R[97],E,E,17,[[["f"]],["r"]]],[11,"take",E,E,17,[[]]],[11,R[98],E,R[102],17,[[["items"]],[["str"],[R[13],["str"]]]]],[11,R[103],E,R[104],17,[[["items"]]]],[11,R[23],E,R[105],17,[[],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,17,[[],[T]]],[11,R[18],E,R[19],17,[[["outer"]],[T]]],[11,R[20],E,R[21],17,[[["outer"]],[T]]],[11,R[17],E,E,17,[[],[T]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[14],E,E,18,[[[U]],[R[13]]]],[11,R[15],E,E,18,[[],[R[13]]]],[11,R[31],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[24],E,E,18,[[["self"]],[R[32]]]],[11,R[101],E,E,18,[[]]],[11,R[93],E,E,18,[[],["bool"]]],[11,"get",E,E,18,[[]]],[11,R[100],E,E,18,[[["f"]],[[R[4]],[R[13],[R[4]]]]]],[11,"put",E,E,18,[[["arg"]]]],[11,"kill",E,E,18,[[]]],[11,R[97],E,E,18,[[["f"]],["r"]]],[11,"take",E,E,18,[[]]],[11,R[98],E,R[102],18,[[["items"]],[["str"],[R[13],["str"]]]]],[11,R[103],E,R[104],18,[[["items"]]]],[11,R[23],E,R[105],18,[[],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,18,[[],[T]]],[11,R[18],E,R[19],18,[[["outer"]],[T]]],[11,R[20],E,R[21],18,[[["outer"]],[T]]],[11,R[17],E,E,18,[[],[T]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[14],E,E,19,[[[U]],[R[13]]]],[11,R[15],E,E,19,[[],[R[13]]]],[11,R[31],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[24],E,E,19,[[["self"]],[R[32]]]],[11,R[101],E,E,19,[[]]],[11,R[93],E,E,19,[[],["bool"]]],[11,"get",E,E,19,[[]]],[11,R[100],E,E,19,[[["f"]],[[R[4]],[R[13],[R[4]]]]]],[11,"put",E,E,19,[[["arg"]]]],[11,"kill",E,E,19,[[]]],[11,R[97],E,E,19,[[["f"]],["r"]]],[11,"take",E,E,19,[[]]],[11,R[98],E,R[102],19,[[["items"]],[["str"],[R[13],["str"]]]]],[11,R[103],E,R[104],19,[[["items"]]]],[11,R[23],E,R[105],19,[[],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,19,[[],[T]]],[11,R[18],E,R[19],19,[[["outer"]],[T]]],[11,R[20],E,R[21],19,[[["outer"]],[T]]],[11,R[17],E,E,19,[[],[T]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[14],E,E,20,[[[U]],[R[13]]]],[11,R[15],E,E,20,[[],[R[13]]]],[11,R[31],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[24],E,E,20,[[["self"]],[R[32]]]],[11,R[101],E,E,20,[[]]],[11,R[93],E,E,20,[[],["bool"]]],[11,"get",E,E,20,[[]]],[11,R[100],E,E,20,[[["f"]],[[R[4]],[R[13],[R[4]]]]]],[11,"put",E,E,20,[[["arg"]]]],[11,"kill",E,E,20,[[]]],[11,R[97],E,E,20,[[["f"]],["r"]]],[11,"take",E,E,20,[[]]],[11,R[98],E,R[102],20,[[["items"]],[["str"],[R[13],["str"]]]]],[11,R[103],E,R[104],20,[[["items"]]]],[11,R[23],E,R[105],20,[[],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,20,[[],[T]]],[11,R[18],E,R[19],20,[[["outer"]],[T]]],[11,R[20],E,R[21],20,[[["outer"]],[T]]],[11,R[17],E,E,20,[[],[T]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[14],E,E,21,[[[U]],[R[13]]]],[11,R[15],E,E,21,[[],[R[13]]]],[11,R[31],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[24],E,E,21,[[["self"]],[R[32]]]],[11,R[101],E,E,21,[[]]],[11,R[93],E,E,21,[[],["bool"]]],[11,"get",E,E,21,[[]]],[11,R[100],E,E,21,[[["f"]],[[R[4]],[R[13],[R[4]]]]]],[11,"put",E,E,21,[[["arg"]]]],[11,"kill",E,E,21,[[]]],[11,R[97],E,E,21,[[["f"]],["r"]]],[11,"take",E,E,21,[[]]],[11,R[98],E,R[102],21,[[["items"]],[["str"],[R[13],["str"]]]]],[11,R[103],E,R[104],21,[[["items"]]]],[11,R[23],E,R[105],21,[[],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,21,[[],[T]]],[11,R[18],E,R[19],21,[[["outer"]],[T]]],[11,R[20],E,R[21],21,[[["outer"]],[T]]],[11,R[17],E,E,21,[[],[T]]],[11,"vzip",E,E,21,[[],["v"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[14],E,E,22,[[[U]],[R[13]]]],[11,R[15],E,E,22,[[],[R[13]]]],[11,R[31],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[24],E,E,22,[[["self"]],[R[32]]]],[11,R[101],E,E,22,[[]]],[11,R[93],E,E,22,[[],["bool"]]],[11,"get",E,E,22,[[]]],[11,R[100],E,E,22,[[["f"]],[[R[4]],[R[13],[R[4]]]]]],[11,"put",E,E,22,[[["arg"]]]],[11,"kill",E,E,22,[[]]],[11,R[97],E,E,22,[[["f"]],["r"]]],[11,"take",E,E,22,[[]]],[11,R[98],E,R[102],22,[[["items"]],[["str"],[R[13],["str"]]]]],[11,R[103],E,R[104],22,[[["items"]]]],[11,R[23],E,R[105],22,[[],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,22,[[],[T]]],[11,R[18],E,R[19],22,[[["outer"]],[T]]],[11,R[20],E,R[21],22,[[["outer"]],[T]]],[11,R[17],E,E,22,[[],[T]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[14],E,E,23,[[[U]],[R[13]]]],[11,R[15],E,E,23,[[],[R[13]]]],[11,R[31],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[24],E,E,23,[[["self"]],[R[32]]]],[11,R[101],E,E,23,[[]]],[11,R[93],E,E,23,[[],["bool"]]],[11,"get",E,E,23,[[]]],[11,R[100],E,E,23,[[["f"]],[[R[4]],[R[13],[R[4]]]]]],[11,"put",E,E,23,[[["arg"]]]],[11,"kill",E,E,23,[[]]],[11,R[97],E,E,23,[[["f"]],["r"]]],[11,"take",E,E,23,[[]]],[11,R[98],E,R[102],23,[[["items"]],[["str"],[R[13],["str"]]]]],[11,R[103],E,R[104],23,[[["items"]]]],[11,R[23],E,R[105],23,[[],[["str"],[R[13],["usize","str"]],["usize"]]]],[11,R[22],E,E,23,[[],[T]]],[11,R[18],E,R[19],23,[[["outer"]],[T]]],[11,R[20],E,R[21],23,[[["outer"]],[T]]],[11,R[17],E,E,23,[[],[T]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[29],E,E,10,[[["self"]],[T]]],[11,R[30],E,E,10,[[["self"],[T]]]],[11,R[14],E,E,10,[[[U]],[R[13]]]],[11,R[15],E,E,10,[[],[R[13]]]],[11,R[31],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[24],E,E,10,[[["self"]],[R[32]]]],[11,R[22],E,E,10,[[],[T]]],[11,R[18],E,R[19],10,[[["outer"]],[T]]],[11,R[20],E,R[21],10,[[["outer"]],[T]]],[11,R[17],E,E,10,[[],[T]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[30],E,E,6,[[["self"],[T]]]],[11,R[14],E,E,6,[[[U]],[R[13]]]],[11,R[15],E,E,6,[[],[R[13]]]],[11,R[31],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[24],E,E,6,[[["self"]],[R[32]]]],[11,R[33],E,E,6,[[["self"]],["usize"]]],[11,R[34],E,E,6,[[["self"],["f"]],["r"]]],[11,R[92],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,6,[[["w"],["self"]]]],[11,R[49],E,E,6,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,6,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,6,[[["self"]]]],[11,R[39],E,E,6,[[["self"]]]],[11,R[246],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,6,[[["self"]]]],[11,R[41],E,E,6,[[["self"]]]],[11,R[42],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[22],E,E,6,[[],[T]]],[11,R[18],E,R[19],6,[[["outer"]],[T]]],[11,R[20],E,R[21],6,[[["outer"]],[T]]],[11,R[17],E,E,6,[[],[T]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[30],E,E,7,[[["self"],[T]]]],[11,R[14],E,E,7,[[[U]],[R[13]]]],[11,R[15],E,E,7,[[],[R[13]]]],[11,R[31],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[24],E,E,7,[[["self"]],[R[32]]]],[11,R[33],E,E,7,[[["self"]],["usize"]]],[11,R[34],E,E,7,[[["self"],["f"]],["r"]]],[11,R[92],E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,7,[[["w"],["self"]]]],[11,R[49],E,E,7,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,7,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,7,[[["self"]]]],[11,R[39],E,E,7,[[["self"]]]],[11,R[246],E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,7,[[["self"]]]],[11,R[41],E,E,7,[[["self"]]]],[11,R[42],E,E,7,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[22],E,E,7,[[],[T]]],[11,R[18],E,R[19],7,[[["outer"]],[T]]],[11,R[20],E,R[21],7,[[["outer"]],[T]]],[11,R[17],E,E,7,[[],[T]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",R[106],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[30],E,E,8,[[["self"],[T]]]],[11,R[107],E,E,8,[[["self"]],[R[88]]]],[11,R[14],E,E,8,[[[U]],[R[13]]]],[11,R[15],E,E,8,[[],[R[13]]]],[11,R[31],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[24],E,E,8,[[["self"]],[R[32]]]],[11,R[33],E,E,8,[[["self"]],["usize"]]],[11,R[34],E,E,8,[[["self"],["f"]],["r"]]],[11,R[92],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,8,[[["w"],["self"]]]],[11,R[49],E,E,8,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,8,[[],[[R[13],["error"]],["error"]]]],[11,R[38],E,E,8,[[["self"]]]],[11,R[39],E,E,8,[[["self"]]]],[11,R[246],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,8,[[["self"]]]],[11,R[41],E,E,8,[[["self"]]]],[11,R[42],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[90],E,E,8,[[["self"]],["bool"]]],[11,"clear",E,E,8,[[],[T]]],[11,R[22],E,E,8,[[],[T]]],[11,R[18],E,R[19],8,[[["outer"]],[T]]],[11,R[20],E,R[21],8,[[["outer"]],[T]]],[11,R[17],E,E,8,[[],[T]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"clear",E,E,8,[[["self"]]]],[11,R[91],E,E,8,[[]]],[11,R[49],R[69],E,1,[[["decin"]],[[R[78]],["error"],[R[13],[R[78],"error"]]]]],[11,R[49],E,E,2,[[["decin"]],[["error"],[R[13],[R[108],"error"]],[R[108]]]]],[11,R[49],E,E,0,[[["decin"]],[[R[13],[R[110],"error"]],[R[110]],["error"]]]],[11,R[35],E,E,1,[[["self"],["encout"]]]],[11,R[35],E,E,0,[[["self"],["encout"]]]],[11,R[35],E,E,2,[[["self"],["encout"]]]],[11,"fmt",E,E,1,[[[R[48]],["self"]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,0,[[[R[48]],["self"]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,2,[[[R[48]],["self"]],[[R[13],["error"]],["error"]]]],[11,"eq",E,E,0,[[["self"],[R[110]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[78]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[78]]],["bool"]]],[11,"eq",E,E,2,[[[R[108]],["self"]],["bool"]]],[11,R[109],E,E,0,[[["__d"]],[[R[110]],[R[13],[R[110]]]]]],[11,"clone",E,E,0,[[["self"]],[R[110]]]],[11,"clone",E,E,1,[[["self"]],[R[78]]]],[11,"clone",E,E,2,[[["self"]],[R[108]]]],[11,R[114],E,E,0,[[],[R[110]]]],[11,R[114],E,E,2,[[],[R[108]]]],[11,R[111],E,E,0,[[["self"],["__s"]],[R[13]]]],[11,"clone",R[106],E,8,[[["self"]],[R[112]]]],[11,"clone",R[69],E,11,[[["self"]],[R[115]]]],[11,"clone",E,E,3,[[["self"]],[R[113]]]],[11,"clone",E,E,12,[[["self"]],[R[116]]]],[11,"clone",E,E,4,[[["self"]],[R[76]]]],[11,"clone",E,E,10,[[["self"]],["module"]]],[11,"clone",E,E,6,[[["self"]],["self"]]],[11,"clone",E,E,7,[[["self"]],[R[47]]]],[11,R[114],R[106],E,8,[[],[R[112]]]],[11,R[114],R[69],E,3,[[],[R[113]]]],[11,R[114],E,E,5,[[],["self"]]],[11,"cmp",E,E,11,[[[R[115]],["self"]],[R[117]]]],[11,"cmp",E,E,3,[[[R[113]],["self"]],[R[117]]]],[11,"eq",R[106],E,8,[[["self"],[R[112]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[112]]],["bool"]]],[11,"eq",R[69],E,11,[[[R[115]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[115]],["self"]],["bool"]]],[11,"eq",E,E,3,[[[R[113]],["self"]],["bool"]]],[11,"ne",E,E,3,[[[R[113]],["self"]],["bool"]]],[11,"eq",E,E,12,[[[R[116]],["self"]],["bool"]]],[11,"ne",E,E,12,[[[R[116]],["self"]],["bool"]]],[11,"eq",E,E,4,[[[R[76]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[76]],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],["module"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["module"]],["bool"]]],[11,"eq",E,E,6,[[["self"]],["bool"]]],[11,"eq",E,E,7,[[[R[47]],["self"]],["bool"]]],[11,"ne",E,E,7,[[[R[47]],["self"]],["bool"]]],[11,R[118],E,E,11,[[[R[115]],["self"]],[[R[117]],[R[4],[R[117]]]]]],[11,"lt",E,E,11,[[[R[115]],["self"]],["bool"]]],[11,"le",E,E,11,[[[R[115]],["self"]],["bool"]]],[11,"gt",E,E,11,[[[R[115]],["self"]],["bool"]]],[11,"ge",E,E,11,[[[R[115]],["self"]],["bool"]]],[11,R[118],E,E,3,[[[R[113]],["self"]],[[R[117]],[R[4],[R[117]]]]]],[11,"lt",E,E,3,[[[R[113]],["self"]],["bool"]]],[11,"le",E,E,3,[[[R[113]],["self"]],["bool"]]],[11,"gt",E,E,3,[[[R[113]],["self"]],["bool"]]],[11,"ge",E,E,3,[[[R[113]],["self"]],["bool"]]],[11,"fmt",R[106],E,8,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,8,[[[R[48]],["self"]],[R[13]]]],[11,"fmt",R[69],E,11,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,3,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,12,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,4,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,10,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[48]]],[[R[13],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[48]]],[R[13]]]],[11,"hash",R[106],E,8,[[["self"],["__h"]]]],[11,R[35],E,E,8,[[["self"],["encout"]]]],[11,R[35],R[69],E,11,[[["self"],["encout"]]]],[11,R[35],E,E,3,[[["self"],["encout"]]]],[11,R[35],E,E,12,[[["self"],["encout"]]]],[11,R[35],E,E,4,[[["self"],["encout"]]]],[11,R[35],E,E,6,[[["self"],["encout"]]]],[11,R[35],E,E,7,[[["self"],["encout"]]]],[11,R[49],R[106],E,8,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],R[69],E,11,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],E,E,3,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],E,E,12,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],E,E,4,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],E,E,6,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],E,E,7,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[111],R[106],E,8,[[["self"],["__s"]],[R[13]]]],[11,R[111],R[69],E,5,[[["self"],["__s"]],[R[13]]]],[11,R[109],R[106],E,8,[[["__d"]],[R[13]]]],[11,R[109],R[69],E,5,[[["__d"]],[R[13]]]],[11,"verify",R[106],E,8,[[["self"]],[[R[13],[R[0]]],[R[0]]]]],[11,R[50],R[69],E,10,[[]]],[11,R[119],E,E,6,[[["self"]],[R[120]]]],[11,R[125],E,E,10,[[],["weight"]]],[11,R[124],E,E,10,[[],["weight"]]],[11,R[158],E,E,6,[[],[R[9]]]],[11,R[53],E,E,16,[[[R[4],[R[113]]],[R[113],[R[75]]]]]],[11,R[54],E,E,16,[[],[[R[4],[R[113]]],[R[113],[R[75]]]]]],[11,R[51],E,E,16,[[]]],[11,R[52],E,E,16,[[]]],[11,R[121],E,E,16,[[]]],[11,R[51],E,E,13,[[]]],[11,R[52],E,E,13,[[]]],[11,R[53],E,E,13,[[[R[4]]]]],[11,R[54],E,E,13,[[],[R[4]]]],[11,R[51],E,E,14,[[]]],[11,R[52],E,E,14,[[]]],[11,R[53],E,E,14,[[[R[4],[R[76]]],[R[76],[R[75]]]]]],[11,R[54],E,E,14,[[],[[R[4],[R[76]]],[R[76],[R[75]]]]]],[11,R[51],E,E,15,[[]]],[11,R[52],E,E,15,[[]]],[11,R[53],E,E,15,[[[R[108]],[R[4],[R[108]]]]]],[11,R[54],E,E,15,[[],[[R[108]],[R[4],[R[108]]]]]],[11,R[51],E,E,17,[[]]],[11,R[52],E,E,17,[[]]],[11,R[53],E,E,17,[[["vec"],[R[4],["vec"]]]]],[11,R[54],E,E,17,[[],[["vec"],[R[4],["vec"]]]]],[11,R[51],E,E,18,[[]]],[11,R[52],E,E,18,[[]]],[11,R[53],E,E,18,[[[R[4],[R[122]]],[R[122]]]]],[11,R[54],E,E,18,[[],[[R[122]],[R[4],[R[122]]]]]],[11,R[51],E,E,19,[[]]],[11,R[52],E,E,19,[[]]],[11,R[53],E,E,19,[[[R[4],[R[123]]],[R[123]]]]],[11,R[54],E,E,19,[[],[[R[123]],[R[4],[R[123]]]]]],[11,R[51],E,E,20,[[]]],[11,R[52],E,E,20,[[]]],[11,R[53],E,E,20,[[[R[4],[R[89]]],[R[89]]]]],[11,R[54],E,E,20,[[],[[R[4],[R[89]]],[R[89]]]]],[11,R[51],E,E,21,[[]]],[11,R[52],E,E,21,[[]]],[11,R[53],E,E,21,[[[R[4],[R[110]]],[R[110]]]]],[11,R[54],E,E,21,[[],[[R[4],[R[110]]],[R[110]]]]],[11,R[51],E,E,22,[[]]],[11,R[52],E,E,22,[[]]],[11,R[53],E,E,22,[[["u32"],[R[4],["u32"]]]]],[11,R[54],E,E,22,[[],[["u32"],[R[4],["u32"]]]]],[11,R[51],E,E,23,[[]]],[11,R[52],E,E,23,[[]]],[11,R[53],E,E,23,[[["vec"],[R[4],["vec"]]]]],[11,R[54],E,E,23,[[],[["vec"],[R[4],["vec"]]]]],[11,R[51],E,E,13,[[]]],[11,R[52],E,E,13,[[]]],[11,R[51],E,E,14,[[]]],[11,R[52],E,E,14,[[]]],[11,R[51],E,E,15,[[]]],[11,R[52],E,E,15,[[]]],[11,R[51],E,E,16,[[]]],[11,R[52],E,E,16,[[]]],[11,R[124],E,E,10,[[]]],[11,R[125],E,E,10,[[]]],[11,"build_module_genesis_storage",E,E,5,[[[R[87]],["self"]],[[R[88]],[R[13],[R[88]]]]]],[11,"on_session_ending",E,E,10,[[[R[89]]],[["vec"],[R[4],["vec"]]]]],[11,"select_initial_validators",E,E,10,[[],[["vec"],[R[4],["vec"]]]]]],"p":[[4,"Forcing"],[3,R[126]],[4,R[127]],[3,"Exposure"],[3,R[128]],[3,R[129]],[4,"Call"],[4,R[55]],[3,R[130]],[8,"Trait"],[3,"Module"],[3,R[131]],[3,R[132]],[3,"Bonded"],[3,"Ledger"],[3,"Payee"],[3,R[133]],[3,R[134]],[3,R[135]],[3,R[136]],[3,R[137]],[3,"ForceEra"],[3,R[138]],[3,R[139]]]};
searchIndex["plasm_cli"]={"doc":"Plasm CLI library.","i":[[3,R[244],R[240],"Executable version. Used to pass version information from…",N,N],[12,"name",E,"Implementaiton name.",0,N],[12,"version",E,"Implementation version.",0,N],[12,"commit",E,"SCM Commit hash.",0,N],[12,"executable_name",E,"Executable file name.",0,N],[12,"description",E,"Executable file description.",0,N],[12,"author",E,"Executable file author.",0,N],[12,"support_url",E,"Support URL.",0,N],[4,R[239],E,"The chain specification option.",N,N],[13,"Development",E,"Whatever the current runtime is, with just Alice as an auth.",1,N],[13,"LocalTestnet",E,"Whatever the current runtime is, with simple Alice/Bob…",1,N],[13,"PlasmTestnet",E,"Whatever the current runtime is with the \"global testnet\"…",1,N],[5,"run",E,"Parse command line arguments into service configuration.",N,[[["i"],[R[242]],["e"]],[R[13]]]],[0,"chain_spec",E,"Plasm chain specification.",N,N],[3,R[245],R[241],"Node `ChainSpec` extensions.",N,N],[12,"fork_blocks",E,"Block numbers with known hashes.",2,N],[5,"get_from_seed",E,"Helper function to generate a crypto pair from seed",N,[[["str"]]]],[5,"get_account_id_from_seed",E,"Helper function to generate an account ID from seed",N,[[["str"]],[R[2]]]],[5,"get_authority_keys_from_seed",E,"Helper function to generate controller and session key…",N,[[["str"]]]],[5,"plasm_testnet_config",E,"Plasm testnet file config.",N,[[],[R[238]]]],[5,"development_config",E,"Development config (single validator Alice)",N,[[],[R[238]]]],[5,"local_testnet_config",E,"Local testnet config (multivalidator Alice + Bob)",N,[[],[R[238]]]],[6,R[239],E,"Specialized `ChainSpec`.",N,N],[11,"into",R[240],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,R[14],E,E,0,[[[U]],[R[13]]]],[11,R[15],E,E,0,[[],[R[13]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[24],E,E,0,[[["self"]],[R[32]]]],[11,R[22],E,E,0,[[],[T]]],[11,R[18],E,R[19],0,[[["outer"]],[T]]],[11,R[20],E,R[21],0,[[["outer"]],[T]]],[11,R[17],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,R[14],E,E,1,[[[U]],[R[13]]]],[11,R[15],E,E,1,[[],[R[13]]]],[11,R[31],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[24],E,E,1,[[["self"]],[R[32]]]],[11,R[22],E,E,1,[[],[T]]],[11,R[18],E,R[19],1,[[["outer"]],[T]]],[11,R[20],E,R[21],1,[[["outer"]],[T]]],[11,R[17],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"into",R[241],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[29],E,E,2,[[["self"]],[T]]],[11,R[30],E,E,2,[[["self"],[T]]]],[11,R[14],E,E,2,[[[U]],[R[13]]]],[11,R[15],E,E,2,[[],[R[13]]]],[11,R[31],E,E,2,[[["self"]],[T]]],[11,R[16],E,E,2,[[["self"]],[T]]],[11,R[24],E,E,2,[[["self"]],[R[32]]]],[11,R[22],E,E,2,[[],[T]]],[11,R[18],E,R[19],2,[[["outer"]],[T]]],[11,R[20],E,R[21],2,[[["outer"]],[T]]],[11,R[17],E,E,2,[[],[T]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"clear",E,E,2,[[["self"]]]],[11,R[91],E,E,2,[[]]],[11,"erased_serialize",E,E,2,[[["serializer"],["self"]],[["error"],[R[13],["ok","error"]],["ok"]]]],[11,"clone",R[240],E,0,[[["self"]],[R[242]]]],[11,"clone",R[241],E,2,[[["self"]],[R[243]]]],[11,"clone",R[240],E,1,[[["self"]],[R[238]]]],[11,R[114],R[241],E,2,[[],[R[243]]]],[11,"eq",R[240],E,1,[[[R[238]],["self"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[48]]],[R[13]]]],[11,R[111],R[241],E,2,[[["self"],["__s"]],[R[13]]]],[11,R[109],E,E,2,[[["__d"]],[R[13]]]],[11,"get",E,E,2,[[["self"]],[[T],[R[4]]]]]],"p":[[3,R[244]],[4,R[239]],[3,R[245]]]};
searchIndex["plasm_executor"]={"doc":"A `CodeExecutor` specialization which uses natively…","i":[[3,R[235],"plasm_executor","A generic `CodeExecutor` implementation that uses a…",N,N],[3,"Executor",E,"A unit struct which implements `NativeExecutionDispatch`…",N,N],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,R[14],E,E,0,[[[U]],[R[13]]]],[11,R[15],E,E,0,[[],[R[13]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[24],E,E,0,[[["self"]],[R[32]]]],[11,R[22],E,E,0,[[],[T]]],[11,R[18],E,R[19],0,[[["outer"]],[T]]],[11,R[20],E,R[21],0,[[["outer"]],[T]]],[11,R[17],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[14],E,E,1,[[[U]],[R[13]]]],[11,R[15],E,E,1,[[],[R[13]]]],[11,R[31],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[24],E,E,1,[[["self"]],[R[32]]]],[11,R[22],E,E,1,[[],[T]]],[11,R[18],E,R[19],1,[[["outer"]],[T]]],[11,R[20],E,R[21],1,[[["outer"]],[T]]],[11,R[17],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,R[232],E,E,0,[[["self"]],[R[233]]]],[11,"runtime_version",E,E,0,[[["self"],["e"]],[[R[13],[R[180],"error"]],[R[180]],["error"]]]],[11,"clone",E,E,0,[[["self"]],[R[234]]]],[11,"call",E,E,0,[[["str"],[R[4]],["e"],["self"],["bool"]]]],[11,R[158],E,E,1,[[["externalities"],["str"]],[[R[13],["vec"]],["vec",["u8"]]]]],[11,R[232],E,E,1,[[],[R[233]]]],[11,"new",E,"Create new instance.",0,[[[R[4],["u64"]],["u64"],["wasmexecutionmethod"]],[R[234]]]]],"p":[[3,R[235]],[3,"Executor"]]};
searchIndex["plasm_node"]={"doc":"Plasm Node CLI","i":[],"p":[]};
searchIndex["plasm_primitives"]={"doc":"Low-level types used throughout the node code.","i":[[6,"BlockNumber","plasm_primitives","An index to a block.",N,N],[6,"Signature",E,"Alias to 512-bit hash when used in the context of a…",N,N],[6,"AccountId",E,"Some way of identifying an account on the chain. We…",N,N],[6,"AccountIndex",E,"The type for looking up accounts. We don't expect more…",N,N],[6,"Balance",E,"Balance of an account.",N,N],[6,"Moment",E,"Type used for expressing timestamp.",N,N],[6,"Index",E,"Index of a transaction in the chain.",N,N],[6,"Hash",E,"A hash of some data used by the chain.",N,N],[6,R[155],E,"A timestamp: milliseconds since the unix epoch. `u64` is…",N,N],[6,"DigestItem",E,"Digest item type.",N,N],[6,"Header",E,"Header type.",N,N],[6,"Block",E,"Block type.",N,N],[6,"BlockId",E,"Block ID.",N,N]],"p":[]};
searchIndex["plasm_rpc"]={"doc":"A collection of node-specific RPC methods.","i":[[3,R[237],"plasm_rpc","Light client extra dependencies.",N,N],[12,"remote_blockchain",E,"Remote access to the blockchain (async).",0,N],[12,"fetcher",E,"Fetcher instance.",0,N],[5,"create",E,"Instantiate all RPC extensions.",N,[[["arc"],[R[236]],[R[4],[R[236]]],["arc"]],["iohandler"]]],[11,"none",E,"Create empty `LightDeps` with given `F` type.",0,[[[R[4],["arc"]],["arc"]],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[14],E,E,0,[[[U]],[R[13]]]],[11,R[15],E,E,0,[[],[R[13]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[24],E,E,0,[[["self"]],[R[32]]]],[11,R[22],E,E,0,[[],[T]]],[11,R[18],E,R[19],0,[[["outer"]],[T]]],[11,R[20],E,R[21],0,[[["outer"]],[T]]],[11,R[17],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]]],"p":[[3,R[237]]]};
searchIndex["plasm_runtime"]={"doc":"The Substrate runtime. This can be compiled with…","i":[[4,R[198],R[156],E,N,N],[13,"transfer",E,"Transfer some liquid free balance to another account.",0,N],[13,"set_balance",E,"Set the balances of a given account.",0,N],[13,"force_transfer",E,"Exactly as `transfer`, except the origin must be root and…",0,N],[13,"transfer_keep_alive",E,"Same as the [`transfer`] call, but with a check that the…",0,N],[6,"Gas",E,E,N,N],[4,"Forcing",E,R[140],N,N],[13,R[141],E,R[142],1,N],[13,"ForceNew",E,R[143],1,N],[13,R[144],E,R[145],1,N],[13,R[146],E,R[147],1,N],[8,R[199],E,"Complex storage builder stuff.",N,N],[11,R[148],E,"Build the storage out of this builder.",2,[[["self"]],[[R[88]],[R[13],[R[87],R[88]]],[R[87]]]]],[10,R[149],E,R[150],2,[[["self"],[R[87]]],[[R[13],[R[88]]],[R[88]]]]],[4,R[200],E,E,N,N],[13,"set",E,"Set the current time.",3,N],[3,R[202],E,E,N,N],[3,R[203],E,E,N,N],[3,R[204],E,E,N,N],[3,"Version",E,E,N,N],[3,R[205],E,E,N,N],[3,R[206],E,E,N,N],[3,R[207],E,E,N,N],[3,R[208],E,E,N,N],[3,R[209],E,E,N,N],[3,R[210],E,E,N,N],[3,R[211],E,E,N,N],[3,R[212],E,E,N,N],[3,R[213],E,E,N,N],[3,R[214],E,E,N,N],[3,R[215],E,E,N,N],[3,R[201],E,E,N,N],[12,"babe",E,E,4,N],[12,"grandpa",E,E,4,N],[3,R[151],E,E,N,N],[3,R[152],E,E,N,N],[3,R[216],E,E,N,N],[3,R[217],E,E,N,N],[3,R[218],E,E,N,N],[3,R[219],E,E,N,N],[3,R[220],E,E,N,N],[3,R[221],E,E,N,N],[3,R[222],E,E,N,N],[3,R[223],E,E,N,N],[3,R[224],E,E,N,N],[3,R[225],E,E,N,N],[3,R[226],E,E,N,N],[3,"Runtime",E,E,N,N],[3,R[227],E,"Provides an implementation of `ModuleToIndex` to map a…",N,N],[3,R[129],E,E,N,N],[12,"system",E,E,5,N],[12,"indices",E,E,5,N],[12,R[175],E,E,5,N],[12,R[153],E,E,5,N],[12,R[154],E,E,5,N],[12,"session",E,E,5,N],[12,"babe",E,E,5,N],[12,"grandpa",E,E,5,N],[12,"sudo",E,E,5,N],[3,R[228],E,E,N,N],[3,R[229],E,"Implements all runtime apis for the client side.",N,N],[4,"Event",E,E,N,N],[13,"system",E,E,6,N],[13,"indices",E,E,6,N],[13,R[175],E,E,6,N],[13,R[153],E,E,6,N],[13,R[154],E,E,6,N],[13,"session",E,E,6,N],[13,"grandpa",E,E,6,N],[13,"sudo",E,E,6,N],[13,R[45],E,E,6,N],[4,"Origin",E,E,N,N],[13,"system",E,E,7,N],[13,"Void",E,E,7,N],[4,"Call",E,E,N,N],[13,"System",E,E,8,N],[13,R[155],E,E,8,N],[13,"Indices",E,E,8,N],[13,"Balances",E,E,8,N],[13,R[159],E,E,8,N],[13,R[160],E,E,8,N],[13,"Session",E,E,8,N],[13,"Babe",E,E,8,N],[13,"Grandpa",E,E,8,N],[13,R[161],E,E,8,N],[13,"Sudo",E,E,8,N],[13,"Operator",E,E,8,N],[13,R[162],E,E,8,N],[5,R[232],E,"Native version.",N,[[],[R[233]]]],[0,"impls",E,"Implementations of some helper traits passed into runtime…",N,N],[3,R[230],R[166],"Convert from weight to balance via a simple coefficient…",N,N],[3,R[231],E,"Update the given multiplier based on the following formula",N,N],[0,"constants",R[156],"Constant values used within the runtime. A set of constant…",N,N],[0,"currency",R[157],"Money matters.",N,N],[17,"MILLIPLM","plasm_runtime::constants::currency",E,N,N],[17,"PLM",E,E,N,N],[0,"time",R[157],"Time.",N,N],[17,"MILLISECS_PER_BLOCK","plasm_runtime::constants::time","Since BABE is probabilistic this is the average expected…",N,N],[17,"SECS_PER_BLOCK",E,E,N,N],[17,"SLOT_DURATION",E,E,N,N],[17,"PRIMARY_PROBABILITY",E,E,N,N],[17,"EPOCH_DURATION_IN_BLOCKS",E,E,N,N],[17,"EPOCH_DURATION_IN_SLOTS",E,E,N,N],[17,"MINUTES",E,E,N,N],[17,"HOURS",E,E,N,N],[17,"DAYS",E,E,N,N],[0,"fee",R[157],"Fee-related.",N,N],[3,"Perbill",R[167],"A fixed point representation of a number between in the…",N,N],[17,"TARGET_BLOCK_FULLNESS",E,"The block saturation level. Fees will be updates based on…",N,N],[0,"api",R[156],E,N,N],[5,R[158],"plasm_runtime::api",E,N,[[["str"]],[["vec",["u8"]],[R[4],["vec"]]]]],[6,"System",R[156],E,N,N],[6,R[155],E,E,N,N],[6,"TransactionPayment",E,E,N,N],[6,"Indices",E,E,N,N],[6,"Balances",E,E,N,N],[6,R[159],E,E,N,N],[6,R[160],E,E,N,N],[6,"Session",E,E,N,N],[6,"Babe",E,E,N,N],[6,"Grandpa",E,E,N,N],[6,R[161],E,E,N,N],[6,"Sudo",E,E,N,N],[6,"Operator",E,E,N,N],[6,R[162],E,E,N,N],[6,"SystemConfig",E,E,N,N],[6,"IndicesConfig",E,E,N,N],[6,"BalancesConfig",E,E,N,N],[6,"ContractsConfig",E,E,N,N],[6,"PlasmStakingConfig",E,E,N,N],[6,"SessionConfig",E,E,N,N],[6,"BabeConfig",E,E,N,N],[6,"GrandpaConfig",E,E,N,N],[6,"SudoConfig",E,E,N,N],[6,"Address",E,"The address format for describing accounts.",N,N],[6,"Header",E,"Block header type as expected by this runtime.",N,N],[6,"Block",E,"Block type as expected by this runtime.",N,N],[6,"SignedBlock",E,"A Block signed with a Justification",N,N],[6,"BlockId",E,"BlockId type as expected by this runtime.",N,N],[6,"SignedExtra",E,"The SignedExtension to the basic transaction logic.",N,N],[6,"UncheckedExtrinsic",E,"Unchecked extrinsic type as expected by this runtime.",N,N],[6,"SignedPayload",E,"The payload being signed in transactions.",N,N],[6,"CheckedExtrinsic",E,"Extrinsic type that has already been checked.",N,N],[6,"Executive",E,"Executive: handles dispatch to the various modules.",N,N],[17,"WASM_BINARY",E,E,N,N],[17,"WASM_BINARY_BLOATY",E,E,N,N],[17,"VERSION",E,"Runtime version.",N,N],[11,"get",E,E,9,[[],[R[164]]]],[11,"get",E,E,10,[[],["weight"]]],[11,"get",E,E,11,[[],["u32"]]],[11,"get",E,E,12,[[],[R[180]]]],[11,"get",E,E,13,[[],[R[168]]]],[11,"get",E,E,14,[[],["u64"]]],[11,"get",E,E,15,[[],["moment"]]],[11,"get",E,E,16,[[],[R[163]]]],[11,"get",E,E,17,[[],[R[163]]]],[11,"get",E,E,18,[[],[R[163]]]],[11,"get",E,E,19,[[],[R[163]]]],[11,"get",E,E,20,[[],[R[163]]]],[11,"get",E,E,21,[[],[R[163]]]],[11,"get",E,E,22,[[],[R[168]]]],[11,"get",E,E,23,[[],["moment"]]],[11,"generate",E,"Generate a set of keys with optionally using the given seed.",4,[[["vec",["u8"]],[R[4],["vec"]]],[["vec",["u8"]],["u8"]]]],[11,"get",E,E,24,[[],[R[89]]]],[11,"get",E,E,25,[[],[R[122]]]],[11,"get",E,E,26,[[],[R[163]]]],[11,"get",E,E,27,[[],[R[163]]]],[11,"get",E,E,28,[[],[R[163]]]],[11,"get",E,E,29,[[],[R[163]]]],[11,"get",E,E,30,[[],[R[163]]]],[11,"get",E,E,31,[[],[R[163]]]],[11,"get",E,E,32,[[],[R[163]]]],[11,"get",E,E,33,[[],[R[163]]]],[11,"get",E,E,34,[[],[R[163]]]],[11,"get",E,E,35,[[],[R[164]]]],[11,"get",E,E,36,[[],[R[164]]]],[11,"outer_event_metadata",E,E,37,[[],["outereventmetadata"]]],[11,"__module_events_system",E,E,37,[[]]],[11,"__module_events_indices",E,E,37,[[]]],[11,"__module_events_balances",E,E,37,[[]]],[11,"__module_events_contracts",E,E,37,[[]]],[11,"__module_events_plasm_staking",E,E,37,[[]]],[11,"__module_events_session",E,E,37,[[]]],[11,"__module_events_grandpa",E,E,37,[[]]],[11,"__module_events_sudo",E,E,37,[[]]],[11,"__module_events_operator",E,E,37,[[]]],[18,"NONE",E,E,7,N],[18,"ROOT",E,E,7,N],[11,"signed",E,E,7,[[],["self"]]],[11,R[50],E,E,37,[[],["runtimemetadataprefixed"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[29],E,E,0,[[["self"]],[T]]],[11,R[30],E,E,0,[[["self"],[T]]]],[11,R[14],E,E,0,[[[U]],[R[13]]]],[11,R[15],E,E,0,[[],[R[13]]]],[11,R[31],E,E,0,[[["self"]],[T]]],[11,R[16],E,E,0,[[["self"]],[T]]],[11,R[24],E,E,0,[[["self"]],[R[32]]]],[11,R[33],E,E,0,[[["self"]],["usize"]]],[11,R[34],E,E,0,[[["self"],["f"]],["r"]]],[11,R[92],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,0,[[["w"],["self"]]]],[11,R[49],E,E,0,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,0,[[],[[R[13],["error"]],["error"]]]],[11,R[22],E,E,0,[[],[T]]],[11,R[18],E,R[19],0,[[["outer"]],[T]]],[11,R[20],E,R[21],0,[[["outer"]],[T]]],[11,R[17],E,E,0,[[],[T]]],[11,"vzip",E,E,0,[[],["v"]]],[11,R[38],E,E,0,[[["self"]]]],[11,R[39],E,E,0,[[["self"]]]],[11,R[246],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,0,[[["self"]]]],[11,R[41],E,E,0,[[["self"]]]],[11,R[42],E,E,0,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[29],E,E,1,[[["self"]],[T]]],[11,R[30],E,E,1,[[["self"],[T]]]],[11,R[14],E,E,1,[[[U]],[R[13]]]],[11,R[15],E,E,1,[[],[R[13]]]],[11,R[31],E,E,1,[[["self"]],[T]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[24],E,E,1,[[["self"]],[R[32]]]],[11,R[33],E,E,1,[[["self"]],["usize"]]],[11,R[34],E,E,1,[[["self"],["f"]],["r"]]],[11,R[92],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,1,[[["w"],["self"]]]],[11,R[49],E,E,1,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,1,[[],[[R[13],["error"]],["error"]]]],[11,R[90],E,E,1,[[["self"]],["bool"]]],[11,"clear",E,E,1,[[],[T]]],[11,R[22],E,E,1,[[],[T]]],[11,R[18],E,R[19],1,[[["outer"]],[T]]],[11,R[20],E,R[21],1,[[["outer"]],[T]]],[11,R[17],E,E,1,[[],[T]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"clear",E,E,1,[[["self"]]]],[11,R[91],E,E,1,[[]]],[11,R[38],E,E,1,[[["self"]]]],[11,R[39],E,E,1,[[["self"]]]],[11,R[246],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,1,[[["self"]]]],[11,R[41],E,E,1,[[["self"]]]],[11,R[42],E,E,1,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[29],E,E,3,[[["self"]],[T]]],[11,R[30],E,E,3,[[["self"],[T]]]],[11,R[14],E,E,3,[[[U]],[R[13]]]],[11,R[15],E,E,3,[[],[R[13]]]],[11,R[31],E,E,3,[[["self"]],[T]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[24],E,E,3,[[["self"]],[R[32]]]],[11,R[33],E,E,3,[[["self"]],["usize"]]],[11,R[34],E,E,3,[[["self"],["f"]],["r"]]],[11,R[92],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,3,[[["w"],["self"]]]],[11,R[49],E,E,3,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,3,[[],[[R[13],["error"]],["error"]]]],[11,R[22],E,E,3,[[],[T]]],[11,R[18],E,R[19],3,[[["outer"]],[T]]],[11,R[20],E,R[21],3,[[["outer"]],[T]]],[11,R[17],E,E,3,[[],[T]]],[11,"vzip",E,E,3,[[],["v"]]],[11,R[38],E,E,3,[[["self"]]]],[11,R[39],E,E,3,[[["self"]]]],[11,R[246],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,3,[[["self"]]]],[11,R[41],E,E,3,[[["self"]]]],[11,R[42],E,E,3,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[14],E,E,9,[[[U]],[R[13]]]],[11,R[15],E,E,9,[[],[R[13]]]],[11,R[31],E,E,9,[[["self"]],[T]]],[11,R[16],E,E,9,[[["self"]],[T]]],[11,R[24],E,E,9,[[["self"]],[R[32]]]],[11,R[22],E,E,9,[[],[T]]],[11,R[18],E,R[19],9,[[["outer"]],[T]]],[11,R[20],E,R[21],9,[[["outer"]],[T]]],[11,R[17],E,E,9,[[],[T]]],[11,"vzip",E,E,9,[[],["v"]]],[11,R[165],E,E,9,[[["v"]],["bool"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[14],E,E,10,[[[U]],[R[13]]]],[11,R[15],E,E,10,[[],[R[13]]]],[11,R[31],E,E,10,[[["self"]],[T]]],[11,R[16],E,E,10,[[["self"]],[T]]],[11,R[24],E,E,10,[[["self"]],[R[32]]]],[11,R[22],E,E,10,[[],[T]]],[11,R[18],E,R[19],10,[[["outer"]],[T]]],[11,R[20],E,R[21],10,[[["outer"]],[T]]],[11,R[17],E,E,10,[[],[T]]],[11,"vzip",E,E,10,[[],["v"]]],[11,R[165],E,E,10,[[["v"]],["bool"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[14],E,E,11,[[[U]],[R[13]]]],[11,R[15],E,E,11,[[],[R[13]]]],[11,R[31],E,E,11,[[["self"]],[T]]],[11,R[16],E,E,11,[[["self"]],[T]]],[11,R[24],E,E,11,[[["self"]],[R[32]]]],[11,R[22],E,E,11,[[],[T]]],[11,R[18],E,R[19],11,[[["outer"]],[T]]],[11,R[20],E,R[21],11,[[["outer"]],[T]]],[11,R[17],E,E,11,[[],[T]]],[11,"vzip",E,E,11,[[],["v"]]],[11,R[165],E,E,11,[[["v"]],["bool"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[14],E,E,12,[[[U]],[R[13]]]],[11,R[15],E,E,12,[[],[R[13]]]],[11,R[31],E,E,12,[[["self"]],[T]]],[11,R[16],E,E,12,[[["self"]],[T]]],[11,R[24],E,E,12,[[["self"]],[R[32]]]],[11,R[22],E,E,12,[[],[T]]],[11,R[18],E,R[19],12,[[["outer"]],[T]]],[11,R[20],E,R[21],12,[[["outer"]],[T]]],[11,R[17],E,E,12,[[],[T]]],[11,"vzip",E,E,12,[[],["v"]]],[11,R[165],E,E,12,[[["v"]],["bool"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[14],E,E,13,[[[U]],[R[13]]]],[11,R[15],E,E,13,[[],[R[13]]]],[11,R[31],E,E,13,[[["self"]],[T]]],[11,R[16],E,E,13,[[["self"]],[T]]],[11,R[24],E,E,13,[[["self"]],[R[32]]]],[11,R[22],E,E,13,[[],[T]]],[11,R[18],E,R[19],13,[[["outer"]],[T]]],[11,R[20],E,R[21],13,[[["outer"]],[T]]],[11,R[17],E,E,13,[[],[T]]],[11,"vzip",E,E,13,[[],["v"]]],[11,R[165],E,E,13,[[["v"]],["bool"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[14],E,E,14,[[[U]],[R[13]]]],[11,R[15],E,E,14,[[],[R[13]]]],[11,R[31],E,E,14,[[["self"]],[T]]],[11,R[16],E,E,14,[[["self"]],[T]]],[11,R[24],E,E,14,[[["self"]],[R[32]]]],[11,R[22],E,E,14,[[],[T]]],[11,R[18],E,R[19],14,[[["outer"]],[T]]],[11,R[20],E,R[21],14,[[["outer"]],[T]]],[11,R[17],E,E,14,[[],[T]]],[11,"vzip",E,E,14,[[],["v"]]],[11,R[165],E,E,14,[[["v"]],["bool"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[14],E,E,15,[[[U]],[R[13]]]],[11,R[15],E,E,15,[[],[R[13]]]],[11,R[31],E,E,15,[[["self"]],[T]]],[11,R[16],E,E,15,[[["self"]],[T]]],[11,R[24],E,E,15,[[["self"]],[R[32]]]],[11,R[22],E,E,15,[[],[T]]],[11,R[18],E,R[19],15,[[["outer"]],[T]]],[11,R[20],E,R[21],15,[[["outer"]],[T]]],[11,R[17],E,E,15,[[],[T]]],[11,"vzip",E,E,15,[[],["v"]]],[11,R[165],E,E,15,[[["v"]],["bool"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[14],E,E,16,[[[U]],[R[13]]]],[11,R[15],E,E,16,[[],[R[13]]]],[11,R[31],E,E,16,[[["self"]],[T]]],[11,R[16],E,E,16,[[["self"]],[T]]],[11,R[24],E,E,16,[[["self"]],[R[32]]]],[11,R[22],E,E,16,[[],[T]]],[11,R[18],E,R[19],16,[[["outer"]],[T]]],[11,R[20],E,R[21],16,[[["outer"]],[T]]],[11,R[17],E,E,16,[[],[T]]],[11,"vzip",E,E,16,[[],["v"]]],[11,R[165],E,E,16,[[["v"]],["bool"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[14],E,E,17,[[[U]],[R[13]]]],[11,R[15],E,E,17,[[],[R[13]]]],[11,R[31],E,E,17,[[["self"]],[T]]],[11,R[16],E,E,17,[[["self"]],[T]]],[11,R[24],E,E,17,[[["self"]],[R[32]]]],[11,R[22],E,E,17,[[],[T]]],[11,R[18],E,R[19],17,[[["outer"]],[T]]],[11,R[20],E,R[21],17,[[["outer"]],[T]]],[11,R[17],E,E,17,[[],[T]]],[11,"vzip",E,E,17,[[],["v"]]],[11,R[165],E,E,17,[[["v"]],["bool"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[14],E,E,18,[[[U]],[R[13]]]],[11,R[15],E,E,18,[[],[R[13]]]],[11,R[31],E,E,18,[[["self"]],[T]]],[11,R[16],E,E,18,[[["self"]],[T]]],[11,R[24],E,E,18,[[["self"]],[R[32]]]],[11,R[22],E,E,18,[[],[T]]],[11,R[18],E,R[19],18,[[["outer"]],[T]]],[11,R[20],E,R[21],18,[[["outer"]],[T]]],[11,R[17],E,E,18,[[],[T]]],[11,"vzip",E,E,18,[[],["v"]]],[11,R[165],E,E,18,[[["v"]],["bool"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[14],E,E,19,[[[U]],[R[13]]]],[11,R[15],E,E,19,[[],[R[13]]]],[11,R[31],E,E,19,[[["self"]],[T]]],[11,R[16],E,E,19,[[["self"]],[T]]],[11,R[24],E,E,19,[[["self"]],[R[32]]]],[11,R[22],E,E,19,[[],[T]]],[11,R[18],E,R[19],19,[[["outer"]],[T]]],[11,R[20],E,R[21],19,[[["outer"]],[T]]],[11,R[17],E,E,19,[[],[T]]],[11,"vzip",E,E,19,[[],["v"]]],[11,R[165],E,E,19,[[["v"]],["bool"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[14],E,E,20,[[[U]],[R[13]]]],[11,R[15],E,E,20,[[],[R[13]]]],[11,R[31],E,E,20,[[["self"]],[T]]],[11,R[16],E,E,20,[[["self"]],[T]]],[11,R[24],E,E,20,[[["self"]],[R[32]]]],[11,R[22],E,E,20,[[],[T]]],[11,R[18],E,R[19],20,[[["outer"]],[T]]],[11,R[20],E,R[21],20,[[["outer"]],[T]]],[11,R[17],E,E,20,[[],[T]]],[11,"vzip",E,E,20,[[],["v"]]],[11,R[165],E,E,20,[[["v"]],["bool"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[14],E,E,21,[[[U]],[R[13]]]],[11,R[15],E,E,21,[[],[R[13]]]],[11,R[31],E,E,21,[[["self"]],[T]]],[11,R[16],E,E,21,[[["self"]],[T]]],[11,R[24],E,E,21,[[["self"]],[R[32]]]],[11,R[22],E,E,21,[[],[T]]],[11,R[18],E,R[19],21,[[["outer"]],[T]]],[11,R[20],E,R[21],21,[[["outer"]],[T]]],[11,R[17],E,E,21,[[],[T]]],[11,"vzip",E,E,21,[[],["v"]]],[11,R[165],E,E,21,[[["v"]],["bool"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[14],E,E,22,[[[U]],[R[13]]]],[11,R[15],E,E,22,[[],[R[13]]]],[11,R[31],E,E,22,[[["self"]],[T]]],[11,R[16],E,E,22,[[["self"]],[T]]],[11,R[24],E,E,22,[[["self"]],[R[32]]]],[11,R[22],E,E,22,[[],[T]]],[11,R[18],E,R[19],22,[[["outer"]],[T]]],[11,R[20],E,R[21],22,[[["outer"]],[T]]],[11,R[17],E,E,22,[[],[T]]],[11,"vzip",E,E,22,[[],["v"]]],[11,R[165],E,E,22,[[["v"]],["bool"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[14],E,E,23,[[[U]],[R[13]]]],[11,R[15],E,E,23,[[],[R[13]]]],[11,R[31],E,E,23,[[["self"]],[T]]],[11,R[16],E,E,23,[[["self"]],[T]]],[11,R[24],E,E,23,[[["self"]],[R[32]]]],[11,R[22],E,E,23,[[],[T]]],[11,R[18],E,R[19],23,[[["outer"]],[T]]],[11,R[20],E,R[21],23,[[["outer"]],[T]]],[11,R[17],E,E,23,[[],[T]]],[11,"vzip",E,E,23,[[],["v"]]],[11,R[165],E,E,23,[[["v"]],["bool"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[29],E,E,4,[[["self"]],[T]]],[11,R[30],E,E,4,[[["self"],[T]]]],[11,R[14],E,E,4,[[[U]],[R[13]]]],[11,R[15],E,E,4,[[],[R[13]]]],[11,R[31],E,E,4,[[["self"]],[T]]],[11,R[16],E,E,4,[[["self"]],[T]]],[11,R[24],E,E,4,[[["self"]],[R[32]]]],[11,R[33],E,E,4,[[["self"]],["usize"]]],[11,R[34],E,E,4,[[["self"],["f"]],["r"]]],[11,R[92],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,4,[[["w"],["self"]]]],[11,R[49],E,E,4,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,4,[[],[[R[13],["error"]],["error"]]]],[11,R[90],E,E,4,[[["self"]],["bool"]]],[11,"clear",E,E,4,[[],[T]]],[11,R[22],E,E,4,[[],[T]]],[11,R[18],E,R[19],4,[[["outer"]],[T]]],[11,R[20],E,R[21],4,[[["outer"]],[T]]],[11,R[17],E,E,4,[[],[T]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"clear",E,E,4,[[["self"]]]],[11,R[91],E,E,4,[[]]],[11,R[38],E,E,4,[[["self"]]]],[11,R[39],E,E,4,[[["self"]]]],[11,R[246],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,4,[[["self"]]]],[11,R[41],E,E,4,[[["self"]]]],[11,R[42],E,E,4,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[14],E,E,24,[[[U]],[R[13]]]],[11,R[15],E,E,24,[[],[R[13]]]],[11,R[31],E,E,24,[[["self"]],[T]]],[11,R[16],E,E,24,[[["self"]],[T]]],[11,R[24],E,E,24,[[["self"]],[R[32]]]],[11,R[22],E,E,24,[[],[T]]],[11,R[18],E,R[19],24,[[["outer"]],[T]]],[11,R[20],E,R[21],24,[[["outer"]],[T]]],[11,R[17],E,E,24,[[],[T]]],[11,"vzip",E,E,24,[[],["v"]]],[11,R[165],E,E,24,[[["v"]],["bool"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[14],E,E,25,[[[U]],[R[13]]]],[11,R[15],E,E,25,[[],[R[13]]]],[11,R[31],E,E,25,[[["self"]],[T]]],[11,R[16],E,E,25,[[["self"]],[T]]],[11,R[24],E,E,25,[[["self"]],[R[32]]]],[11,R[22],E,E,25,[[],[T]]],[11,R[18],E,R[19],25,[[["outer"]],[T]]],[11,R[20],E,R[21],25,[[["outer"]],[T]]],[11,R[17],E,E,25,[[],[T]]],[11,"vzip",E,E,25,[[],["v"]]],[11,R[165],E,E,25,[[["v"]],["bool"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[14],E,E,26,[[[U]],[R[13]]]],[11,R[15],E,E,26,[[],[R[13]]]],[11,R[31],E,E,26,[[["self"]],[T]]],[11,R[16],E,E,26,[[["self"]],[T]]],[11,R[24],E,E,26,[[["self"]],[R[32]]]],[11,R[22],E,E,26,[[],[T]]],[11,R[18],E,R[19],26,[[["outer"]],[T]]],[11,R[20],E,R[21],26,[[["outer"]],[T]]],[11,R[17],E,E,26,[[],[T]]],[11,"vzip",E,E,26,[[],["v"]]],[11,R[165],E,E,26,[[["v"]],["bool"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[14],E,E,27,[[[U]],[R[13]]]],[11,R[15],E,E,27,[[],[R[13]]]],[11,R[31],E,E,27,[[["self"]],[T]]],[11,R[16],E,E,27,[[["self"]],[T]]],[11,R[24],E,E,27,[[["self"]],[R[32]]]],[11,R[22],E,E,27,[[],[T]]],[11,R[18],E,R[19],27,[[["outer"]],[T]]],[11,R[20],E,R[21],27,[[["outer"]],[T]]],[11,R[17],E,E,27,[[],[T]]],[11,"vzip",E,E,27,[[],["v"]]],[11,R[165],E,E,27,[[["v"]],["bool"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[14],E,E,28,[[[U]],[R[13]]]],[11,R[15],E,E,28,[[],[R[13]]]],[11,R[31],E,E,28,[[["self"]],[T]]],[11,R[16],E,E,28,[[["self"]],[T]]],[11,R[24],E,E,28,[[["self"]],[R[32]]]],[11,R[22],E,E,28,[[],[T]]],[11,R[18],E,R[19],28,[[["outer"]],[T]]],[11,R[20],E,R[21],28,[[["outer"]],[T]]],[11,R[17],E,E,28,[[],[T]]],[11,"vzip",E,E,28,[[],["v"]]],[11,R[165],E,E,28,[[["v"]],["bool"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[14],E,E,29,[[[U]],[R[13]]]],[11,R[15],E,E,29,[[],[R[13]]]],[11,R[31],E,E,29,[[["self"]],[T]]],[11,R[16],E,E,29,[[["self"]],[T]]],[11,R[24],E,E,29,[[["self"]],[R[32]]]],[11,R[22],E,E,29,[[],[T]]],[11,R[18],E,R[19],29,[[["outer"]],[T]]],[11,R[20],E,R[21],29,[[["outer"]],[T]]],[11,R[17],E,E,29,[[],[T]]],[11,"vzip",E,E,29,[[],["v"]]],[11,R[165],E,E,29,[[["v"]],["bool"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[14],E,E,30,[[[U]],[R[13]]]],[11,R[15],E,E,30,[[],[R[13]]]],[11,R[31],E,E,30,[[["self"]],[T]]],[11,R[16],E,E,30,[[["self"]],[T]]],[11,R[24],E,E,30,[[["self"]],[R[32]]]],[11,R[22],E,E,30,[[],[T]]],[11,R[18],E,R[19],30,[[["outer"]],[T]]],[11,R[20],E,R[21],30,[[["outer"]],[T]]],[11,R[17],E,E,30,[[],[T]]],[11,"vzip",E,E,30,[[],["v"]]],[11,R[165],E,E,30,[[["v"]],["bool"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[14],E,E,31,[[[U]],[R[13]]]],[11,R[15],E,E,31,[[],[R[13]]]],[11,R[31],E,E,31,[[["self"]],[T]]],[11,R[16],E,E,31,[[["self"]],[T]]],[11,R[24],E,E,31,[[["self"]],[R[32]]]],[11,R[22],E,E,31,[[],[T]]],[11,R[18],E,R[19],31,[[["outer"]],[T]]],[11,R[20],E,R[21],31,[[["outer"]],[T]]],[11,R[17],E,E,31,[[],[T]]],[11,"vzip",E,E,31,[[],["v"]]],[11,R[165],E,E,31,[[["v"]],["bool"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[14],E,E,32,[[[U]],[R[13]]]],[11,R[15],E,E,32,[[],[R[13]]]],[11,R[31],E,E,32,[[["self"]],[T]]],[11,R[16],E,E,32,[[["self"]],[T]]],[11,R[24],E,E,32,[[["self"]],[R[32]]]],[11,R[22],E,E,32,[[],[T]]],[11,R[18],E,R[19],32,[[["outer"]],[T]]],[11,R[20],E,R[21],32,[[["outer"]],[T]]],[11,R[17],E,E,32,[[],[T]]],[11,"vzip",E,E,32,[[],["v"]]],[11,R[165],E,E,32,[[["v"]],["bool"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[14],E,E,33,[[[U]],[R[13]]]],[11,R[15],E,E,33,[[],[R[13]]]],[11,R[31],E,E,33,[[["self"]],[T]]],[11,R[16],E,E,33,[[["self"]],[T]]],[11,R[24],E,E,33,[[["self"]],[R[32]]]],[11,R[22],E,E,33,[[],[T]]],[11,R[18],E,R[19],33,[[["outer"]],[T]]],[11,R[20],E,R[21],33,[[["outer"]],[T]]],[11,R[17],E,E,33,[[],[T]]],[11,"vzip",E,E,33,[[],["v"]]],[11,R[165],E,E,33,[[["v"]],["bool"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[14],E,E,34,[[[U]],[R[13]]]],[11,R[15],E,E,34,[[],[R[13]]]],[11,R[31],E,E,34,[[["self"]],[T]]],[11,R[16],E,E,34,[[["self"]],[T]]],[11,R[24],E,E,34,[[["self"]],[R[32]]]],[11,R[22],E,E,34,[[],[T]]],[11,R[18],E,R[19],34,[[["outer"]],[T]]],[11,R[20],E,R[21],34,[[["outer"]],[T]]],[11,R[17],E,E,34,[[],[T]]],[11,"vzip",E,E,34,[[],["v"]]],[11,R[165],E,E,34,[[["v"]],["bool"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[14],E,E,35,[[[U]],[R[13]]]],[11,R[15],E,E,35,[[],[R[13]]]],[11,R[31],E,E,35,[[["self"]],[T]]],[11,R[16],E,E,35,[[["self"]],[T]]],[11,R[24],E,E,35,[[["self"]],[R[32]]]],[11,R[22],E,E,35,[[],[T]]],[11,R[18],E,R[19],35,[[["outer"]],[T]]],[11,R[20],E,R[21],35,[[["outer"]],[T]]],[11,R[17],E,E,35,[[],[T]]],[11,"vzip",E,E,35,[[],["v"]]],[11,R[165],E,E,35,[[["v"]],["bool"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[14],E,E,36,[[[U]],[R[13]]]],[11,R[15],E,E,36,[[],[R[13]]]],[11,R[31],E,E,36,[[["self"]],[T]]],[11,R[16],E,E,36,[[["self"]],[T]]],[11,R[24],E,E,36,[[["self"]],[R[32]]]],[11,R[22],E,E,36,[[],[T]]],[11,R[18],E,R[19],36,[[["outer"]],[T]]],[11,R[20],E,R[21],36,[[["outer"]],[T]]],[11,R[17],E,E,36,[[],[T]]],[11,"vzip",E,E,36,[[],["v"]]],[11,R[165],E,E,36,[[["v"]],["bool"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[29],E,E,37,[[["self"]],[T]]],[11,R[30],E,E,37,[[["self"],[T]]]],[11,R[14],E,E,37,[[[U]],[R[13]]]],[11,R[15],E,E,37,[[],[R[13]]]],[11,R[31],E,E,37,[[["self"]],[T]]],[11,R[16],E,E,37,[[["self"]],[T]]],[11,R[24],E,E,37,[[["self"]],[R[32]]]],[11,R[22],E,E,37,[[],[T]]],[11,R[18],E,R[19],37,[[["outer"]],[T]]],[11,R[20],E,R[21],37,[[["outer"]],[T]]],[11,R[17],E,E,37,[[],[T]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[14],E,E,38,[[[U]],[R[13]]]],[11,R[15],E,E,38,[[],[R[13]]]],[11,R[31],E,E,38,[[["self"]],[T]]],[11,R[16],E,E,38,[[["self"]],[T]]],[11,R[24],E,E,38,[[["self"]],[R[32]]]],[11,R[22],E,E,38,[[],[T]]],[11,R[18],E,R[19],38,[[["outer"]],[T]]],[11,R[20],E,R[21],38,[[["outer"]],[T]]],[11,R[17],E,E,38,[[],[T]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[14],E,E,5,[[[U]],[R[13]]]],[11,R[15],E,E,5,[[],[R[13]]]],[11,R[31],E,E,5,[[["self"]],[T]]],[11,R[16],E,E,5,[[["self"]],[T]]],[11,R[24],E,E,5,[[["self"]],[R[32]]]],[11,R[22],E,E,5,[[],[T]]],[11,R[18],E,R[19],5,[[["outer"]],[T]]],[11,R[20],E,R[21],5,[[["outer"]],[T]]],[11,R[17],E,E,5,[[],[T]]],[11,"vzip",E,E,5,[[],["v"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[14],E,E,39,[[[U]],[R[13]]]],[11,R[15],E,E,39,[[],[R[13]]]],[11,R[31],E,E,39,[[["self"]],[T]]],[11,R[16],E,E,39,[[["self"]],[T]]],[11,R[24],E,E,39,[[["self"]],[R[32]]]],[11,R[22],E,E,39,[[],[T]]],[11,R[18],E,R[19],39,[[["outer"]],[T]]],[11,R[20],E,R[21],39,[[["outer"]],[T]]],[11,R[17],E,E,39,[[],[T]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[14],E,E,40,[[[U]],[R[13]]]],[11,R[15],E,E,40,[[],[R[13]]]],[11,R[31],E,E,40,[[["self"]],[T]]],[11,R[16],E,E,40,[[["self"]],[T]]],[11,R[24],E,E,40,[[["self"]],[R[32]]]],[11,R[22],E,E,40,[[],[T]]],[11,R[18],E,R[19],40,[[["outer"]],[T]]],[11,R[20],E,R[21],40,[[["outer"]],[T]]],[11,R[17],E,E,40,[[],[T]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[29],E,E,6,[[["self"]],[T]]],[11,R[30],E,E,6,[[["self"],[T]]]],[11,R[14],E,E,6,[[[U]],[R[13]]]],[11,R[15],E,E,6,[[],[R[13]]]],[11,R[31],E,E,6,[[["self"]],[T]]],[11,R[16],E,E,6,[[["self"]],[T]]],[11,R[24],E,E,6,[[["self"]],[R[32]]]],[11,R[33],E,E,6,[[["self"]],["usize"]]],[11,R[34],E,E,6,[[["self"],["f"]],["r"]]],[11,R[92],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,6,[[["w"],["self"]]]],[11,R[49],E,E,6,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,6,[[],[[R[13],["error"]],["error"]]]],[11,R[22],E,E,6,[[],[T]]],[11,R[18],E,R[19],6,[[["outer"]],[T]]],[11,R[20],E,R[21],6,[[["outer"]],[T]]],[11,R[17],E,E,6,[[],[T]]],[11,"vzip",E,E,6,[[],["v"]]],[11,R[38],E,E,6,[[["self"]]]],[11,R[39],E,E,6,[[["self"]]]],[11,R[246],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,6,[[["self"]]]],[11,R[41],E,E,6,[[["self"]]]],[11,R[42],E,E,6,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[29],E,E,7,[[["self"]],[T]]],[11,R[30],E,E,7,[[["self"],[T]]]],[11,R[14],E,E,7,[[[U]],[R[13]]]],[11,R[15],E,E,7,[[],[R[13]]]],[11,R[31],E,E,7,[[["self"]],[T]]],[11,R[16],E,E,7,[[["self"]],[T]]],[11,R[24],E,E,7,[[["self"]],[R[32]]]],[11,R[22],E,E,7,[[],[T]]],[11,R[18],E,R[19],7,[[["outer"]],[T]]],[11,R[20],E,R[21],7,[[["outer"]],[T]]],[11,R[17],E,E,7,[[],[T]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[29],E,E,8,[[["self"]],[T]]],[11,R[30],E,E,8,[[["self"],[T]]]],[11,R[14],E,E,8,[[[U]],[R[13]]]],[11,R[15],E,E,8,[[],[R[13]]]],[11,R[31],E,E,8,[[["self"]],[T]]],[11,R[16],E,E,8,[[["self"]],[T]]],[11,R[24],E,E,8,[[["self"]],[R[32]]]],[11,R[33],E,E,8,[[["self"]],["usize"]]],[11,R[34],E,E,8,[[["self"],["f"]],["r"]]],[11,R[92],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,8,[[["w"],["self"]]]],[11,R[49],E,E,8,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,8,[[],[[R[13],["error"]],["error"]]]],[11,R[22],E,E,8,[[],[T]]],[11,R[18],E,R[19],8,[[["outer"]],[T]]],[11,R[20],E,R[21],8,[[["outer"]],[T]]],[11,R[17],E,E,8,[[],[T]]],[11,"vzip",E,E,8,[[],["v"]]],[11,R[38],E,E,8,[[["self"]]]],[11,R[39],E,E,8,[[["self"]]]],[11,R[246],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,8,[[["self"]]]],[11,R[41],E,E,8,[[["self"]]]],[11,R[42],E,E,8,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into",R[166],E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[14],E,E,41,[[[U]],[R[13]]]],[11,R[15],E,E,41,[[],[R[13]]]],[11,R[31],E,E,41,[[["self"]],[T]]],[11,R[16],E,E,41,[[["self"]],[T]]],[11,R[24],E,E,41,[[["self"]],[R[32]]]],[11,R[22],E,E,41,[[],[T]]],[11,R[18],E,R[19],41,[[["outer"]],[T]]],[11,R[20],E,R[21],41,[[["outer"]],[T]]],[11,R[17],E,E,41,[[],[T]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[14],E,E,42,[[[U]],[R[13]]]],[11,R[15],E,E,42,[[],[R[13]]]],[11,R[31],E,E,42,[[["self"]],[T]]],[11,R[16],E,E,42,[[["self"]],[T]]],[11,R[24],E,E,42,[[["self"]],[R[32]]]],[11,R[22],E,E,42,[[],[T]]],[11,R[18],E,R[19],42,[[["outer"]],[T]]],[11,R[20],E,R[21],42,[[["outer"]],[T]]],[11,R[17],E,E,42,[[],[T]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"into",R[167],E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[29],E,E,43,[[["self"]],[T]]],[11,R[30],E,E,43,[[["self"],[T]]]],[11,R[14],E,E,43,[[[U]],[R[13]]]],[11,R[15],E,E,43,[[],[R[13]]]],[11,R[31],E,E,43,[[["self"]],[T]]],[11,R[16],E,E,43,[[["self"]],[T]]],[11,R[24],E,E,43,[[["self"]],[R[32]]]],[11,R[33],E,E,43,[[["self"]],["usize"]]],[11,R[34],E,E,43,[[["self"],["f"]],["r"]]],[11,R[92],E,E,43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[35],E,E,43,[[["w"],["self"]]]],[11,R[49],E,E,43,[[["i"]],[[R[13],["error"]],["error"]]]],[11,R[36],E,E,43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[37],E,E,43,[[],[[R[13],["error"]],["error"]]]],[11,R[90],E,E,43,[[["self"]],["bool"]]],[11,"clear",E,E,43,[[],[T]]],[11,R[22],E,E,43,[[],[T]]],[11,R[18],E,R[19],43,[[["outer"]],[T]]],[11,R[20],E,R[21],43,[[["outer"]],[T]]],[11,R[17],E,E,43,[[],[T]]],[11,R[169],E,E,43,[[[T]],[T]]],[11,R[170],E,E,43,[[[T]],[T]]],[11,R[171],E,E,43,[[[T]],[T]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"clear",E,E,43,[[["self"]]]],[11,R[91],E,E,43,[[]]],[11,R[38],E,E,43,[[["self"]]]],[11,R[39],E,E,43,[[["self"]]]],[11,R[246],E,E,43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[40],E,E,43,[[["self"]]]],[11,R[41],E,E,43,[[["self"]]]],[11,R[42],E,E,43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"mul",E,E,43,[[["n"]]]],[11,R[49],E,E,43,[[["decin"]],[[R[13],[R[168],"error"]],[R[168]],["error"]]]],[11,"fmt",E,E,43,[[[R[48]],["self"]],[[R[13],["error"]],["error"]]]],[11,R[109],E,E,43,[[["__d"]],[[R[13],[R[168]]],[R[168]]]]],[11,"div",E,E,43,[[[R[168]]]]],[11,"eq",E,E,43,[[["self"],[R[168]]],["bool"]]],[11,"ne",E,E,43,[[["self"],[R[168]]],["bool"]]],[11,R[111],E,E,43,[[["self"],["__s"]],[R[13]]]],[11,"clone",E,E,43,[[["self"]],[R[168]]]],[11,R[169],E,E,43,[[[R[168]]],[R[168]]]],[11,R[170],E,E,43,[[[R[168]]],[R[168]]]],[11,R[171],E,E,43,[[[R[168]]],[R[168]]]],[11,R[114],E,E,43,[[],[R[168]]]],[11,R[118],E,E,43,[[["self"],[R[168]]],[[R[4],[R[117]]],[R[117]]]]],[11,"lt",E,E,43,[[["self"],[R[168]]],["bool"]]],[11,"le",E,E,43,[[["self"],[R[168]]],["bool"]]],[11,"gt",E,E,43,[[["self"],[R[168]]],["bool"]]],[11,"ge",E,E,43,[[["self"],[R[168]]],["bool"]]],[11,R[35],E,E,43,[[["self"],["encout"]]]],[11,R[92],E,E,43,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,R[34],E,E,43,[[["self"],["f"]],["r"]]],[11,"from",E,E,43,[[[R[168]],["compact",[R[168]]]],[R[168]]]],[11,"encode_as",E,E,43,[[["self"]],["u32"]]],[11,"decode_from",E,E,43,[[["u32"]],[R[168]]]],[11,"cmp",E,E,43,[[["self"],[R[168]]],[R[117]]]],[11,R[49],R[156],E,1,[[["decin"]],[[R[13],[R[110],"error"]],["error"],[R[110]]]]],[11,R[35],E,E,1,[[["self"],["encout"]]]],[11,"fmt",E,E,1,[[[R[48]],["self"]],[[R[13],["error"]],["error"]]]],[11,"eq",E,E,1,[[["self"],[R[110]]],["bool"]]],[11,R[109],E,E,1,[[["__d"]],[[R[13],[R[110]]],[R[110]]]]],[11,"clone",E,E,1,[[["self"]],[R[110]]]],[11,R[114],E,E,1,[[],[R[110]]]],[11,R[111],E,E,1,[[["self"],["__s"]],[R[13]]]],[11,R[49],E,E,0,[[["decin"]],[[R[13],["call","error"]],["call"],["error"]]]],[11,R[35],E,E,0,[[["self"],["encout"]]]],[11,"fmt",E,E,0,[[[R[48]],["self"]],[[R[13],["error"]],["error"]]]],[11,R[158],E,E,0,[[],[[R[13],[R[0]]],[R[0]]]]],[11,"eq",E,E,0,[[["call"],["self"]],["bool"]]],[11,"clone",E,E,0,[[["self"]],["call"]]],[11,R[119],E,E,0,[[["self"]],[R[120]]]],[11,R[119],E,E,3,[[["self"]],[R[120]]]],[11,R[158],E,E,3,[[],[[R[13],[R[0]]],[R[0]]]]],[11,R[49],E,E,3,[[["decin"]],[["error"],["call"],[R[13],["call","error"]]]]],[11,"fmt",E,E,3,[[[R[48]],["self"]],[[R[13],["error"]],["error"]]]],[11,"eq",E,E,3,[[["self"],["call"]],["bool"]]],[11,"clone",E,E,3,[[["self"]],["call"]]],[11,R[35],E,E,3,[[["self"],["encout"]]]],[11,"into",E,E,7,[[],[[R[13],["origin"]],["origin",[R[172]]]]]],[11,"from",E,E,6,[[["event"]],["self"]]],[11,"from",E,E,6,[[["event",[R[172]]],[R[172]]],["self"]]],[11,"from",E,E,6,[[[R[172]],["event",[R[172]]]],["self"]]],[11,"from",E,E,6,[[[R[172]],["event",[R[172]]]],["self"]]],[11,"from",E,E,6,[[[R[172]],["event",[R[172]]]],["self"]]],[11,"from",E,E,6,[[["event"]],["self"]]],[11,"from",E,E,6,[[["event"]],["self"]]],[11,"from",E,E,6,[[[R[172]],["event",[R[172]]]],["self"]]],[11,"from",E,E,6,[[["event",[R[172]]],[R[172]]],["self"]]],[11,"from",E,E,7,[[[R[172]],["origin",[R[172]]]],["self"]]],[11,"from",E,E,7,[[[R[4]]],["self"]]],[11,"from",E,E,8,[[[R[172]],["system"],[R[173],["system",R[172]]]],["self"]]],[11,"from",E,E,8,[[[R[172]],[R[173],[R[174],R[172]]],[R[174]]],["self"]]],[11,"from",E,E,8,[[["indices"],[R[172]],[R[173],["indices",R[172]]]],["self"]]],[11,"from",E,E,8,[[[R[173],[R[175],R[172]]],[R[175]],[R[172]]],["self"]]],[11,"from",E,E,8,[[[R[172]],[R[173],[R[153],R[172]]],[R[153]]],["self"]]],[11,"from",E,E,8,[[[R[172]],[R[173],[R[176],R[172]]],[R[176]]],["self"]]],[11,"from",E,E,8,[[[R[172]],[R[173],["session",R[172]]],["session"]],["self"]]],[11,"from",E,E,8,[[[R[173],["babe",R[172]]],["babe"],[R[172]]],["self"]]],[11,"from",E,E,8,[[[R[172]],[R[173],["grandpa",R[172]]],["grandpa"]],["self"]]],[11,"from",E,E,8,[[[R[172]],[R[173],[R[177],R[172]]],[R[177]]],["self"]]],[11,"from",E,E,8,[[[R[173],["sudo",R[172]]],[R[172]],["sudo"]],["self"]]],[11,"from",E,E,8,[[[R[173],[R[45],R[172]]],[R[172]],[R[45]]],["self"]]],[11,"from",E,E,8,[[[R[172]],[R[173],[R[178],R[172]]],[R[178]]],["self"]]],[11,"clone",E,E,4,[[["self"]],[R[179]]]],[11,"clone",E,E,37,[[["self"]],[R[172]]]],[11,"clone",E,E,6,[[["self"]],["event"]]],[11,"clone",E,E,7,[[["self"]],["origin"]]],[11,"clone",E,E,8,[[["self"]],["call"]]],[11,R[114],E,E,4,[[],[R[179]]]],[11,"eq",E,E,4,[[[R[179]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[179]],["self"]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[172]]],["bool"]]],[11,"eq",E,E,6,[[["self"],["event"]],["bool"]]],[11,"ne",E,E,6,[[["self"],["event"]],["bool"]]],[11,"eq",E,E,7,[[["origin"],["self"]],["bool"]]],[11,"ne",E,E,7,[[["origin"],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],["call"]],["bool"]]],[11,"ne",E,E,8,[[["self"],["call"]],["bool"]]],[11,"fmt",E,E,4,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,37,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,6,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,7,[[["self"],[R[48]]],[R[13]]]],[11,"fmt",E,E,8,[[["self"],[R[48]]],[R[13]]]],[11,R[15],E,E,6,[[],[[R[13],["event"]],["event",[R[172]]]]]],[11,R[15],E,E,6,[[],[["event",[R[172]]],[R[13],["event"]]]]],[11,R[15],E,E,6,[[],[[R[13],["event"]],["event",[R[172]]]]]],[11,R[15],E,E,6,[[],[[R[13],["event"]],["event",[R[172]]]]]],[11,R[15],E,E,6,[[],[["event"],[R[13],["event"]]]]],[11,R[15],E,E,6,[[],[["event"],[R[13],["event"]]]]],[11,R[15],E,E,6,[[],[["event",[R[172]]],[R[13],["event"]]]]],[11,R[15],E,E,6,[[],[["event",[R[172]]],[R[13],["event"]]]]],[11,"construct_runtime_api",E,E,39,[[["c"]],["apiref"]]],[11,"map_api_result",E,E,40,[[["self"],["fnonce"]],[R[13]]]],[11,"runtime_version_at",E,E,40,[[["self"],[R[185]]],[[R[180]],[R[13],[R[180]]]]]],[11,"record_proof",E,E,40,[[["self"]]]],[11,"extract_proof",E,E,40,[[["self"]],[[R[181]],[R[4],[R[181]]]]]],[11,"version",E,E,37,[[],[R[180]]]],[11,"execute_block",E,E,37,[[["block"]]]],[11,"initialize_block",E,E,37,[[]]],[11,R[35],E,E,4,[[["self"],["encout"]]]],[11,R[35],E,E,6,[[["self"],["encout"]]]],[11,R[35],E,E,8,[[["self"],["encout"]]]],[11,R[49],E,E,4,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],E,E,6,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[49],E,E,8,[[["decin"]],[["error"],[R[13],["error"]]]]],[11,R[50],E,E,37,[[],[R[184]]]],[11,"Core_version_runtime_api_impl",E,E,40,[[["vec",["u8"]],[R[185]],["u8"],[R[4]],[R[183]],["self"]],[[R[13],[R[182]]],[R[182],[R[180]]]]]],[11,"Core_execute_block_runtime_api_impl",E,E,40,[[["u8"],["vec",["u8"]],[R[185]],[R[4]],[R[183]],["self"]],[[R[182]],[R[13],[R[182]]]]]],[11,"Core_initialize_block_runtime_api_impl",E,E,40,[[[R[4]],[R[185]],["vec",["u8"]],["u8"],[R[183]],["self"]],[[R[182]],[R[13],[R[182]]]]]],[11,"Metadata_metadata_runtime_api_impl",E,E,40,[[["vec",["u8"]],[R[185]],["u8"],[R[4]],[R[183]],["self"]],[[R[13],[R[182]]],[R[182],[R[184]]]]]],[11,"call",E,E,37,[[["vec",["u8"]],[R[163]],[R[2]],["u64"],["u8"]],[R[186]]]],[11,"get_storage",E,E,37,[[[R[2]]],[R[187]]]],[11,"ContractsApi_call_runtime_api_impl",E,E,40,[[["u8"],[R[4]],[R[185]],["vec",["u8"]],[R[183]],["self"]],[[R[182],[R[186]]],[R[13],[R[182]]]]]],[11,"ContractsApi_get_storage_runtime_api_impl",E,E,40,[[["u8"],["vec",["u8"]],[R[185]],[R[4]],[R[183]],["self"]],[[R[182],[R[187]]],[R[13],[R[182]]]]]],[11,R[111],E,E,4,[[["self"],["__s"]],[R[13]]]],[11,R[111],E,E,5,[[["self"],["__s"]],[R[13]]]],[11,R[109],E,E,4,[[["__d"]],[R[13]]]],[11,R[109],E,E,5,[[["__d"]],[R[13]]]],[11,"convert",R[166],E,41,[[["weight"]],[R[163]]]],[11,"convert",E,E,42,[[["fixed64"]],["fixed64"]]],[11,R[158],R[156],E,8,[[["origin"]],[R[9]]]],[11,"pre_dispatch",E,E,37,[[],[[R[13],[R[188]]],[R[188]]]]],[11,"validate_unsigned",E,E,37,[[],[R[196]]]],[11,"key_ids",E,E,4,[[]]],[11,"get_raw",E,E,4,[[["keytypeid"],["self"]]]],[11,R[149],E,E,5,[[["self"],[R[87]]],[[R[88]],[R[13],[R[88]]]]]],[11,R[189],E,E,8,[[["self"]],[[R[4],[R[173]]],[R[173]]]]],[11,R[189],E,E,8,[[["self"]],[[R[4],[R[173]]],[R[173]]]]],[11,R[189],E,E,8,[[["self"]],[[R[4],[R[173]]],[R[173]]]]],[11,R[189],E,E,8,[[["self"]],[[R[4],[R[173]]],[R[173]]]]],[11,R[189],E,E,8,[[["self"]],[[R[173]],[R[4],[R[173]]]]]],[11,R[189],E,E,8,[[["self"]],[[R[4],[R[173]]],[R[173]]]]],[11,R[189],E,E,8,[[["self"]],[[R[173]],[R[4],[R[173]]]]]],[11,R[189],E,E,8,[[["self"]],[[R[173]],[R[4],[R[173]]]]]],[11,R[189],E,E,8,[[["self"]],[[R[4],[R[173]]],[R[173]]]]],[11,R[189],E,E,8,[[["self"]],[[R[173]],[R[4],[R[173]]]]]],[11,R[189],E,E,8,[[["self"]],[[R[173]],[R[4],[R[173]]]]]],[11,R[189],E,E,8,[[["self"]],[[R[173]],[R[4],[R[173]]]]]],[11,R[189],E,E,8,[[["self"]],[[R[173]],[R[4],[R[173]]]]]],[11,R[119],E,E,8,[[["self"]],[R[120]]]],[11,"get",E,E,9,[[],["i"]]],[11,"get",E,E,10,[[],["i"]]],[11,"get",E,E,11,[[],["i"]]],[11,"get",E,E,12,[[],["i"]]],[11,"get",E,E,13,[[],["i"]]],[11,"get",E,E,14,[[],["i"]]],[11,"get",E,E,15,[[],["i"]]],[11,"get",E,E,16,[[],["i"]]],[11,"get",E,E,17,[[],["i"]]],[11,"get",E,E,18,[[],["i"]]],[11,"get",E,E,19,[[],["i"]]],[11,"get",E,E,20,[[],["i"]]],[11,"get",E,E,21,[[],["i"]]],[11,"get",E,E,22,[[],["i"]]],[11,"get",E,E,23,[[],["i"]]],[11,"get",E,E,24,[[],["i"]]],[11,"get",E,E,25,[[],["i"]]],[11,"get",E,E,26,[[],["i"]]],[11,"get",E,E,27,[[],["i"]]],[11,"get",E,E,28,[[],["i"]]],[11,"get",E,E,29,[[],["i"]]],[11,"get",E,E,30,[[],["i"]]],[11,"get",E,E,31,[[],["i"]]],[11,"get",E,E,32,[[],["i"]]],[11,"get",E,E,33,[[],["i"]]],[11,"get",E,E,34,[[],["i"]]],[11,"get",E,E,35,[[],["i"]]],[11,"get",E,E,36,[[],["i"]]],[11,"module_to_index",E,E,38,[[],[[R[4],["usize"]],["usize"]]]],[11,"grandpa_authorities",E,E,37,[[],[R[190]]]],[11,"GrandpaApi_grandpa_authorities_runtime_api_impl",E,E,40,[[["vec",["u8"]],[R[185]],["u8"],[R[4]],[R[183]],["self"]],[[R[182],[R[190]]],[R[13],[R[182]]]]]],[11,"create_transaction",E,E,37,[[["index"],["call"],[R[2]]],[R[4]]]],[11,"query_info",E,E,37,[[["u32"],["uncheckedextrinsic"]],[[R[191],[R[163]]],[R[163]]]]],[11,"TransactionPaymentApi_query_info_runtime_api_impl",E,E,40,[[[R[4]],[R[185]],["vec",["u8"]],["u8"],[R[183]],["self"]],[[R[182],[R[191]]],[R[13],[R[182]]]]]],[11,"configuration",E,E,37,[[],[R[192]]]],[11,"BabeApi_configuration_runtime_api_impl",E,E,40,[[["vec",["u8"]],[R[185]],["u8"],[R[4]],[R[183]],["self"]],[[R[182],[R[192]]],[R[13],[R[182]]]]]],[11,"apply_extrinsic",E,E,37,[[],[R[194]]]],[11,"finalize_block",E,E,37,[[]]],[11,"inherent_extrinsics",E,E,37,[[[R[193]]],["vec"]]],[11,"check_inherents",E,E,37,[[[R[193]],["block"]],[R[195]]]],[11,"random_seed",E,E,37,[[]]],[11,"BlockBuilder_apply_extrinsic_runtime_api_impl",E,E,40,[[[R[4]],[R[185]],["vec",["u8"]],["u8"],[R[183]],["self"]],[[R[182],[R[194]]],[R[13],[R[182]]]]]],[11,"BlockBuilder_finalize_block_runtime_api_impl",E,E,40,[[["vec",["u8"]],[R[185]],["u8"],[R[4]],[R[183]],["self"]],[[R[13],[R[182]]],[R[182]]]]],[11,"BlockBuilder_inherent_extrinsics_runtime_api_impl",E,E,40,[[["u8"],[R[4],[R[193]]],[R[185]],[R[193]],["vec",["u8"]],[R[183]],["self"]],[[R[13],[R[182]]],[R[182],["vec"]]]]],[11,"BlockBuilder_check_inherents_runtime_api_impl",E,E,40,[[["vec",["u8"]],[R[185]],["u8"],[R[4]],[R[183]],["self"]],[[R[13],[R[182]]],[R[182],[R[195]]]]]],[11,"BlockBuilder_random_seed_runtime_api_impl",E,E,40,[[["vec",["u8"]],[R[185]],["u8"],[R[4]],[R[183]],["self"]],[[R[182]],[R[13],[R[182]]]]]],[11,"validate_transaction",E,E,37,[[],[R[196]]]],[11,"TaggedTransactionQueue_validate_transaction_runtime_api_impl",E,E,40,[[[R[4]],[R[185]],["vec",["u8"]],["u8"],[R[183]],["self"]],[[R[13],[R[182]]],[R[182],[R[196]]]]]],[11,"offchain_worker",E,E,37,[[[R[197],["block"]],["block"]]]],[11,"OffchainWorkerApi_offchain_worker_runtime_api_impl",E,E,40,[[[R[197]],["vec",["u8"]],[R[185]],["u8"],[R[4],[R[197]]],[R[183]],["self"]],[[R[182]],[R[13],[R[182]]]]]],[11,"account_nonce",E,E,37,[[[R[2]]],["index"]]],[11,"AccountNonceApi_account_nonce_runtime_api_impl",E,E,40,[[[R[4],[R[2]]],["vec",["u8"]],[R[185]],["u8"],[R[2]],[R[183]],["self"]],[[R[182],["index"]],[R[13],[R[182]]]]]],[11,"generate_session_keys",E,E,37,[[["vec",["u8"]],[R[4],["vec"]]],[["vec",["u8"]],["u8"]]]],[11,"SessionKeys_generate_session_keys_runtime_api_impl",E,E,40,[[[R[4],["vec"]],["vec",["u8"]],[R[185]],["u8"],[R[4],[R[4]]],[R[183]],["self"]],[[R[182],["vec"]],[R[13],[R[182]]]]]],[11,"zero",R[167],"Nothing.",43,[[],[R[168]]]],[11,"is_zero",E,"`true` if this is nothing.",43,[[["self"]],["bool"]]],[11,"one",E,"Everything.",43,[[],[R[168]]]],[11,"deconstruct",E,"Consume self and deconstruct into a raw numeric type.",43,[[],["u32"]]],[11,"accuracy",E,"Return the scale at which this per-thing is working.",43,[[],["u32"]]],[11,"from_parts",E,"From an explicitly defined number of parts per maximum of…",43,[[["u32"]],[R[168]]]],[11,"from_percent",E,"Converts from a percent. Equal to `x / 100`.",43,[[["u32"]],[R[168]]]],[11,"square",E,"Return the product of multiplication of this value by…",43,[[],[R[168]]]],[11,"from_fraction",E,"Converts a fraction into `Permill`.",43,[[["f64"]],[R[168]]]],[11,"from_rational_approximation",E,"Approximate the fraction `p/q` into a per-thing fraction.…",43,[[["n"]],[R[168]]]]],"p":[[4,R[198]],[4,"Forcing"],[8,R[199]],[4,R[200]],[3,R[201]],[3,R[129]],[4,"Event"],[4,"Origin"],[4,"Call"],[3,R[202]],[3,R[203]],[3,R[204]],[3,"Version"],[3,R[205]],[3,R[206]],[3,R[207]],[3,R[208]],[3,R[209]],[3,R[210]],[3,R[211]],[3,R[212]],[3,R[213]],[3,R[214]],[3,R[215]],[3,R[151]],[3,R[152]],[3,R[216]],[3,R[217]],[3,R[218]],[3,R[219]],[3,R[220]],[3,R[221]],[3,R[222]],[3,R[223]],[3,R[224]],[3,R[225]],[3,R[226]],[3,"Runtime"],[3,R[227]],[3,R[228]],[3,R[229]],[3,R[230]],[3,R[231]],[3,"Perbill"]]};
searchIndex["subkey"]={"doc":E,"i":[],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);