initSidebarItems({"enum":[["Call","Dispatchable calls."],["Error","Error for the staking module."],["Forcing","Mode of era-forcing."],["RawEvent","Events for this module."],["RewardDestination","A destination account for payment."],["Vote",""]],"mod":[["parameters","Plasm Staking Parameters"],["rewards","This is explains plasm inflation models. The staking has 2 kinds."]],"struct":[["AccountsVote","Votes for pairs of an account and a contract"],["Bonded","Map from all locked \"stash\" accounts to the controller account."],["ContractVotesUntreatedEra",""],["ContractsUntreatedEra",""],["EraStakingPoints","Reward points of an era. Used to split era total payout between dapps rewards."],["ErasContractsParameters","Similarly to `ErasStakers` this holds the parameters of contracts."],["ErasStakingPoints","Rewards of stakers for contracts(called by \"Dapps Nominator\") at era."],["ErasTotalStake","The total amount staked for the last `HISTORY_DEPTH` eras. If total hasn't been set or has been removed then 0 stake is returned."],["ErasVotes","Votes for pairs of an era and a contract"],["GenesisConfig","Genesis config for the module, allow to build genesis storage."],["Ledger","Map from all (unlocked) \"controller\" accounts to the info regarding the staking."],["Module",""],["Nominations","A record of the nominations made by a specific account."],["NominatorsUntreatedEra",""],["Payee","Where the reward payment should be made. Keyed by stash."],["StakingLedger","The ledger of a (bonded) stash."],["TotalStakes","The total amounts of staking for pairs of nominator and contract"],["UnlockChunk","Just a Balance/BlockNumber tuple to encode when a chunk of funds will be unlocked."],["UntreatedEra","The already untreated era is EraIndex."],["VoteCounts",""]],"trait":[["Trait",""]],"type":[["BalanceOf",""],["Event","[`RawEvent`] specialized for the configuration [`Trait`]"],["MomentOf",""],["SessionIndex","Simple index type with which we can count sessions."]]});