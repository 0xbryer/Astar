initSidebarItems({"constant":[["ERROR_ALREADY_CLAIMED",""],["ERROR_CLAIM_ON_VOTING",""],["ERROR_UNKNOWN_AUTHORITY",""],["ERROR_WRONG_POW_PROOF",""],["KEY_TYPE","Plasm Lockdrop Authority local KeyType."]],"enum":[["Call","Dispatchable calls."],["Error",""],["Lockdrop","Plasm Lockdrop parameters."],["RawEvent","Events for this module."]],"mod":[["ed25519","ED25519 keys support"],["sr25519","SR25519 keys support"]],"struct":[["BitcoinLock","Bitcoin chain transactions oracle."],["BitcoinPrice","BTC price oracle."],["Claim","Lockdrop claim request description."],["ClaimVote","Lockdrop claim vote."],["DustyDurationBonus",""],["EthereumLock","Ethereum chain transactions oracle."],["EthereumPrice","ETH price oracle."],["GenesisConfig","Genesis config for the module, allow to build genesis storage."],["LockCheck","Lock check request parameters."],["Module",""],["TickerRate","Oracle dollar rate ticker."]],"trait":[["DurationBonus","Lock duration bonuses, in principle when you lock for long time you'll get more lockdrop tokens."],["LockOracle","HTTP source of blockchain transactions."],["PriceOracle","HTTP source of currency price."],["Trait","The module's main configuration trait."]],"type":[["AuthorityIndex","Type for enumerating authorities in list (2^16 authorities is enough)."],["AuthorityVote","Type for enumerating claim proof votes."],["BalanceOf",""],["ClaimId","Claim id is a hash of claim parameters."],["Event","[`RawEvent`] specialized for the configuration [`Trait`]"]]});