initSidebarItems({"constant":[["KEY_TYPE","Plasm Lockdrop Authority local KeyType."]],"enum":[["Call","Dispatchable calls."],["Error",""],["Lockdrop","Plasm Lockdrop parameters."],["RawEvent","Events for this module."]],"mod":[["ed25519","ED25519 keys support"],["sr25519","SR25519 keys support"]],"struct":[["BitcoinAddress","Standard bitcoin address decoder."],["BlockCypher","BlockCypher(https://www.blockcypher.com/) API"],["Claim","Lockdrop claim request description."],["ClaimVote","Lockdrop claim vote."],["CoinGecko","CoinGecko(https://coingecko.com) API"],["EthereumAddress","Standard ethereum address decoder."],["GenesisConfig","Genesis config for the module, allow to build genesis storage."],["Module",""],["TickerRate","Oracle dollar rate ticker."],["Transaction","Common transaction type."]],"trait":[["AddressDecoder",""],["ChainOracle","HTTP source of blockchain transactions. For example: http://api.blockcypher.com/v1/btc/test3/txs"],["PriceOracle","HTTP source of currency price."],["Trait","The module's main configuration trait."]],"type":[["AuthorityIndex","Type for enumerating authorities in list (2^16 authorities is enough)."],["AuthorityVote","Type for enumerating claim proof votes."],["BalanceOf",""],["ClaimId","Claim id is a hash of claim parameters."],["Event","[`RawEvent`] specialized for the configuration [`Trait`]"]]});