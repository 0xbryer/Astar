initSidebarItems({"constant":[["AND_VARIABLE",""],["EQUAL_VARIABLE",""],["FOR_ALL_VARIABLE",""],["IS_CONTAINED_VARIABLE",""],["IS_LESS_VARIABLE",""],["IS_STORED_VARIABLE",""],["IS_VALID_SIGNATURE_VARIABLE",""],["NOT_VARIABLE",""],["OR_VARIABLE",""],["THERE_EXISTS_VARIABLE",""],["VERIFY_INCLUSION_VARIABLE",""]],"enum":[["ExecError",""]],"fn":[["codec_error","convert to error code from error tyoe."]],"struct":[["AtomicExecutor",""],["BaseAtomicExecutor",""],["CompiledExecutor",""],["DecidableExecutor",""],["LogicalConnectiveExecutor",""]],"trait":[["ExternalCall",""],["Hasher","Trait describing an object that can hash a slice of bytes. Used to abstract other types over the hashing algorithm. Defines a single `hash` method and an `Out` associated type with the necessary bounds."],["MaybeAddress","Maybe Address defines the traits should be implemented."],["MaybeHash",""],["OvmExecutor",""]],"type":[["AddressOf","Address type from external."],["ExecResult","Default ExecResult type bool."],["ExecResultT","Generic ExecResult type."],["ExecResultTOf","Generic ExecResult tyoe from Ext."],["HashOf","Hash type from external."],["HashingOf","Hashing type from external."],["PropertyOf","Property type from external."]]});