initSidebarItems({"enum":[["AtomicPropositionOrPlaceholder",""],["CompiledInput","CompiledInput indicates which value to pass to PredicateCall as input of predicate For example,parent_property.inputs[0].inputs[1] is NormalInput andinput_index is 0 and children is [1]."],["LogicalConnective","LogicalConnective"],["PredicateCall",""],["PredicateType",""],["VarType",""]],"struct":[["AtomicPredicateCall","e.g. IsValidSignature()"],["AtomicProposition",""],["CompiledPredicate","Compiled Property definition"],["CompiledPredicateCall","For predicates dynamic linking e.g. Confsig() user defined predicate"],["ConstantInput",""],["ConstantVariable",""],["InputPredicateCall","e.g. a() of \"def Foo(a) := a()\""],["IntermediateCompiledPredicate","IntermediateCompiledPredicate is core of compilation which has only atomic propositions as its inputs. When we have for a in B() {Foo(a) and Bar(a)}, \"for a in B() {...}\" and \"Foo(a) and Bar(a)\" are IntermediateCompiledPredicate."],["LabelInput",""],["NormalInput",""],["SelfInput",""],["VariableInput",""],["VariablePredicateCall","e.g. su() of \"def Foo(a) := with SU(a) as su {su()}\""]]});